{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","state/swap/actions.ts","utils/bigNumber.ts","state/mint/actions.ts","components/Layout/Row.tsx","utils/formatBalance.ts","config/constants/tokens.ts","config/constants/contracts.ts","utils/addressHelpers.ts","utils/index.ts","components/Layout/Column.tsx","state/types.ts","state/user/actions.ts","config/constants/index.ts","utils/contractHelpers.ts","state/user/hooks/index.tsx","hooks/useContract.ts","components/Balance.tsx","config/constants/endpoints.ts","state/swap/types.ts","utils/multicall.ts","state/pools/hooks.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","utils/wrappedCurrency.ts","views/Pools/helpers.tsx","state/predictions/helpers.ts","state/predictions/queries.ts","state/user/hooks/helpers.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","config/index.ts","state/multicall/hooks.ts","state/nftMarket/helpers.ts","state/nftMarket/queries.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/nftMarket/types.ts","config/constants/lists.ts","state/lists/hooks.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","hooks/useTheme.ts","components/QuestionHelper/index.tsx","utils/prices.ts","state/multicall/actions.ts","config/constants/types.ts","state/transactions/actions.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","state/farms/hooks.ts","components/ConnectWalletButton.tsx","state/block/hooks.ts","state/swap/queries/lastPairDayId.ts","state/swap/queries/pairHourDatas.ts","state/swap/queries/pairDayDatasByIdsQuery.ts","state/swap/fetch/utils.ts","state/swap/queries/pairDayDatas.ts","state/swap/queries/pairHourDatasByIds.ts","state/swap/queries/lastPairHourId.ts","state/swap/fetch/fetchPairPriceData.ts","state/swap/normalizers.ts","state/swap/queries/getDerivedPrices.ts","state/swap/fetch/fetchDerivedPriceData.ts","state/swap/hooks.ts","state/swap/constants.ts","hooks/useParsedQueryString.ts","state/swap/selectors.ts","config/constants/nftsCollections/types.ts","config/constants/nftsCollections/index.ts","views/Nft/market/constants.ts","state/wallet/hooks.ts","state/transactions/hooks.tsx","hooks/usePairs.ts","utils/getGasPrice.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/predictions/config.ts","state/info/actions.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","config/localization/languages.ts","hooks/useRefresh.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","views/Swap/components/Chart/utils.ts","hooks/useCallWithGasPrice.ts","hooks/useTokenBalance.ts","state/profile/index.tsx","state/lottery/helpers.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","state/swap/fetch/constants.ts","utils/calls/estimateGas.ts","utils/calls/pools.ts","utils/web3React.ts","utils/isZero.ts","contexts/Localization/helpers.ts","utils/requestWithTimeout.ts","utils/truncateHash.ts","hooks/useDebounce.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useAuth.ts","utils/uriToHttp.ts","utils/wallet.ts","utils/currencyId.ts","utils/trades.ts","hooks/Trades.ts","state/teams/index.tsx","hooks/usePreviousValue.ts","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","config/constants/meta.ts","components/Layout/Page.tsx","state/nftMarket/reducer.ts","config/constants/info.ts","components/Loader/CircleLoader.tsx","components/Tags.tsx","state/block/index.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","state/profile/helpers.ts","config/constants/campaigns.ts","components/SearchModal/filtering.ts","components/Loader/Dots.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","views/Swap/components/Chart/constants.ts","components/Layout/Container.tsx","state/profile/hooks.ts","views/Info/utils/infoQueryHelpers.ts","hooks/useLastUpdated.ts","components/TokenImage/index.tsx","views/Page.tsx","config/constants/ifo.ts","hooks/useIsWindowVisible.ts","routerHistory.ts","utils/calls/farms.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","hooks/useInterval.ts","state/pools/helpers.ts","state/achievements/helpers.ts","state/lottery/getUserLotteryData.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/Menu/Footer.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","hooks/useBUSDPrice.ts","views/Info/utils/formatInfoNumbers.ts","components/Loader/PageLoader.tsx","components/PageHeader/PageHeader.tsx","state/lottery/index.ts","utils/getTimePeriods.ts","views/Info/hooks/useBlocksFromTimestamps.ts","hooks/useIntersectionObserver.ts","components/Select/Select.tsx","components/PositionCard/index.tsx","views/Info/components/ChartLoaders/LineChartLoaderSVG.tsx","views/Info/components/ChartLoaders/BarChartLoaderSVG.tsx","views/Info/components/ChartLoaders/CandleChartLoaderSVG.tsx","views/Info/components/ChartLoaders/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/achievements/index.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","components/Loading.tsx","utils/farmHelpers.ts","utils/getLpAddress.ts","components/Layout/Flex.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","state/lists/updater.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","hooks/useUserAgent.ts","hooks/useScrollOnRouteChange.ts","style/Global.tsx","components/PhishingWarningBanner/index.tsx","components/Menu/config/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/Menu/utils.ts","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/GlobalCheckClaimStatus/AnniversaryAchievementModal.tsx","components/GlobalCheckClaimStatus/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/EmWithdrawModal.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/components/Chart/styles.tsx","views/Swap/components/Chart/BnbWbnbNotice.tsx","views/Swap/components/Chart/NoChartAvailable.tsx","views/Swap/components/Chart/SwapLineChart.tsx","views/Swap/components/Chart/PriceChart.tsx","views/Swap/components/Chart/PriceChartContainer.tsx","views/Swap/styles.tsx","views/Swap/components/CurrencyInputHeader.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","hooks/useInactiveListener.ts","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setProvider","current","parseInt","process","Field","selectCurrency","createAction","switchCurrencies","typeInput","replaceSwapState","setRecipient","updatePairData","updateDerivedPairData","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","resetMintState","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","MAINNET","ChainId","TESTNET","mainnetTokens","wbnb","Token","zlt","bnb","cake","tlos","beta","nft","stephero","pros","qbt","cvp","bscdefi","busd","dai","usdt","btcb","ust","eth","usdc","kalm","dkt","hotcross","belt","watch","bry","wsote","helmet","ten","ditto","blink","syrup","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","cart","light","rpg","mcb","lazio","arv","moni","xms","zoo","fina","dar","xwg","eternal","porto","kart","qi","sheesha","bcoin","quidd","testnetTokens","tokens","reduce","accum","serializeTokens","unserializedTokens","serializeToken","getAddress","address","getMasterChefAddress","addresses","getMulticallAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","getAnniversaryAchievement","getNftMarketAddress","getNftSaleAddress","getPancakeSquadAddress","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","getBscScanLinkForNft","collectionAddress","tokenId","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getProviderOrSigner","account","getSigner","connectUnchecked","getContract","ABI","AddressZero","Contract","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","Column","ColumnCenter","AutoColumn","ProfileAvatarFetchStatus","AchievementFetchStatus","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","FarmStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","hidePhishingWarningBanner","setIsExchangeChartDisplayed","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","StakingContractAddress","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","getAnniversaryAchievementContract","anniversaryAchievementAbi","getNftMarketContract","nftMarketAbi","getNftSaleContract","nftSaleAbi","getPancakeSquadContract","pancakeSquadAbi","getErc721CollectionContract","erc721CollectionAbi","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","usePhishingBannerManager","showPhishingWarningBanner","useExchangeChartManager","isMobile","isChartDisplayed","isExchangeChartDisplayed","isDisplayed","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserPoolStakedOnly","userPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","showDisclaimer","userShowDisclaimer","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","showAcknowledgement","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","useMemo","generatedPairs","flatMap","tokenAddress","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","useWatchlistTokens","watchlistTokens","useWatchlistPools","watchlistPools","useIfoV1Contract","useIfoV2Contract","useERC20","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useTradingCompetitionContract","useCakeVaultContract","usePredictionsContract","useAnniversaryAchievementContract","useNftSaleContract","useFarmAuctionContract","useNftMarketContract","useErc721CollectionContract","useContract","withSignerIfPossible","error","console","useTokenContract","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","GRAPH_API_PROFILE","GRAPH_API_PREDICTION","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","API_PROFILE","API_NFT","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","INFO_CLIENT","BLOCKS_CLIENT","GRAPH_API_NFTMARKET","PairDataTimeWindowEnum","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","useFetchPublicPoolsData","useAppDispatch","slowRefresh","useRefresh","getBlockNumber","blockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","useFetchUserPools","fastRefresh","fetchPoolsUserDataAsync","usePools","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbol","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","Math","max","blocksRemaining","hasPoolStarted","blocksToDisplay","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","hash","block","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ALL","getTotalWon","request","gql","market","totalBNBTreasury","getBetHistory","where","first","skip","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","GAS_PRICE","projectLink","default","parseUnits","fast","instant","protocol","overview","chartData","transactions","byAddress","createReducer","builder","addCase","updateProtocolData","protocolData","payload","updateProtocolChartData","updateProtocolTransactions","updatePoolData","poolData","addPoolKeys","poolAddresses","updatePoolChartData","poolAddress","updatePoolTransactions","updateTokenData","tokenData","addTokenKeys","tokenAddresses","priceData","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","TABLE","userUsernameVisibility","lastUpdateVersionTimestamp","action","tokenAAddress","tokenBAddress","tokenWatchlist","newTokens","x","poolsWatchlist","newPools","now","addTransaction","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","pairDataById","derivedPairDataById","otherField","pairData","timeWindow","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","callResults","addMulticallListeners","blocksPerFetch","listeners","callListeners","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farms","farmsReducer","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","voting","votingReducer","lottery","lotteryReducer","info","infoReducer","nftMarket","nftMarketReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","cloneDeep","userInitialState","transactionsInitialState","listsInitialState","profileInitialState","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","BLOCKS_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","IPFS_GATEWAY","PANCAKE_BUNNIES_UPDATE_FREQUENCY","isMethodArg","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","Infinity","useCallsData","serializedCallKeys","JSON","stringify","c","sort","callKeys","parse","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","inputs","callData","useBlock","useMultipleContractSingleData","getCollectionsApi","fetch","ok","json","statusText","getCollectionApi","getNftsFromCollectionApi","page","isPBCollection","pancakeBunniesAddress","requestPath","getNftApi","getNftsFromDifferentCollectionsApi","promises","Promise","all","responses","resp","collectionName","collection","description","attributes","image","getCollectionSg","getCollectionsSg","collections","getNftsByBunnyIdSg","bunnyId","existingTokenIds","orderDirection","otherId","isTradable","tokenId_not_in","nfts","getMarketDataForTokenIds","tokenId_in","getNftsMarketData","getAllPancakeBunniesLowestPrice","bunnyIds","singlePancakeBunnySubQueries","rawResponse","lowestPricesData","subQueryKey","currentAskPrice","getAllPancakeBunniesRecentUpdatedAt","updatedAtData","getLowestPriceInCollection","nftSg","getUserActivity","askOrderHistory","buyTradeHistory","sellTradeHistory","getLatestListedNfts","fetchNftsFiltered","filters","getMetadataWithFallback","apiMetadata","original","thumbnail","getPancakeBunniesAttributesField","traitType","displayType","combineApiAndSgResponseToNftToken","marketData","fetchWalletTokenIdsForCollections","walletNftPromises","balanceOf","balanceOfResponse","getTokenId","tokenOfOwnerByIndex","tokenIdBn","tokenIdPromises","tokenIds","nftLocation","NftLocation","WALLET","tokensWithCollectionAddress","walletNfts","flat","combineCollectionData","collectionApiData","collectionSgData","collectionsMarketObj","prev","collectionMarket","attachMarketDataToWalletNfts","marketDataForWalletNfts","walletNft","marketNft","metadataUrl","transactionHistory","currentSeller","latestTradedPriceInBNB","tradeVolumeBNB","totalTrades","combineNftMarketAndMetadata","nftsWithMetadata","nftsForSale","tokenIdsInWallet","tokenIdsForSale","profileNftId","forSaleNft","location","PROFILE","FORSALE","getNftLocationForMarketNft","getCompleteAccountNftData","profileNftWithCollectionAddress","walletNftIdsWithCollectionAddress","unshift","uniqueCollectionAddresses","uniq","walletNftId","walletNftsByCollection","idWithCollectionAddress","walletMarketDataRequests","walletNftByCollection","tokenIdIn","walletMarketDataResponses","walletMarketData","walletNftsWithMarketData","walletTokenIds","marketDataForSaleNfts","forSaleNftIds","metadataForAllNfts","completeNftData","getCollectionDistributionApi","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","NFTMarketInitializationState","UserNftInitializationState","NftFilterLoadingState","AskOrderType","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsTotalStaking","nonBnbPools","stakingToken","callsPoolInfo","masterChefABI","totalAllocPoint","tokenPerBlock","forCallData","rawPoolInfos","totalStaked","rate","allocPoint","harvestInterval","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","fetchUserPendingRewards","pendingToken","pendingToken3","pendingToken4","pendingToken5","pendingRewards","fetchUserLastDepositTimes","userInfos","lastDepositTimes","lastDepositTime","fetchUserCanHarvests","rawCanHarvests","resCanHarvests","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","setPoolsPublicData","stakingLimitData","stakingTokenBalances","canHarvests","stakingTokenBalance","stakedBalance","pendingReward","canHarvest","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","useTheme","theme","StyledThemeContext","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","multiplyPriceByAmount","price","significantDigits","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","PoolIds","LotteryStatus","AuctionStatus","serializedTokens","CORE","harvest","sortOrder","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","StaticJsonRpcProvider","deserializeFarmUserData","farm","tokenBalance","earnings","deserializeFarm","lpAddresses","lpSymbol","pid","dual","multiplier","isCommunity","quoteTokenPriceBusd","tokenPriceBusd","quoteToken","tokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","tokenPriceVsQuote","poolWeight","withdrawLockPeriod","usePollFarmsPublicData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","deserializedFarmsData","loadArchivedFarmsData","useFarmFromPid","f","useFarmUser","useLpTokenPrice","useFarmFromLpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","usePriceCakeBusd","cakePriceBusdAsString","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","usePollBlockNumber","refreshTime","isWindowVisible","useIsWindowVisible","useInterval","setBlock","fetchBlock","useInitialBlock","initialBlock","lastPairDayId","pairHourDatas","pairDayDatasByIdsQuery","getPairSequentialId","getIdsByTimeWindow","pairLastId","idsCount","pairLastIdAsNumber","DAY","timeWindowGapMapping","pairHasEnoughLiquidity","WEEK","amountOfDataPoints","totalLiquidity","fetchPairEntry","reserveUSD","MONTH","YEAR","pairDayDatas","pairHourDatasByIds","lastPairHourId","fetchPairPriceData","client","GraphQLClient","headers","getHeaders","requestWithTimeout","timeWindowIdsCountMapping","lastPairHourIdData","lastId","pairHourId","pairHourIds","pairIds","pairHoursData","lastPairDayIdData","pairDayIds","pairDayData","normalizeChartData","time","hourStartUnix","token0Id","token1Id","reserve0","reserve1","date","normalizeDerivedChartData","token0DerivedBnb","token0DerivedBnbEntry","token1DerivedBnbEntry","token1DerivedBnb","token0DerivedBNB","derivedBNB","token1DerivedBNB","getDerivedPrices","blocks","getDerivedPricesQueryConstructor","subqueries","getTokenDerivedBnbPrices","multiQuery","tokenPrices","priceKey","b","getInterval","ONE_HOUR_SECONDS","ONE_DAY_UNIX","getSkipDaysToStart","fetchDerivedPriceData","interval","endTimestamp","getUnixTime","startOfHour","days","timestamps","getBlocksFromTimestamps","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","some","liquidityToken","useSingleTokenSwapInfo","inputCurrency","outputCurrency","getTokenAddress","parsedAmount","bestTradeExactIn","useTradeExactIn","inputTokenPrice","outputTokenPrice","useDerivedSwapInfo","inputError","recipientLookup","useENS","to","relevantTokenBalances","useCurrencyBalances","isExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","currencies","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","useFetchPairPrices","currentSwapPrice","setPairId","setIsLoading","pairByDataIdSelector","derivedPairData","derivedPairByDataIdSelector","fetchDerivedData","derivedData","normalizedDerivedData","hasEnoughLiquidity","newPairData","fetchAndUpdatePairPrice","getLpAddress","updatePairId","normalizedPairData","activeToken","pairPrice","fromUnixTime","reverse","normalizePairDataByActiveToken","normalizedDerivedPairData","normalizeDerivedPairDataByActiveToken","hasSwapPrice","normalizedPairDataWithCurrentSwapPrice","normalizedDerivedPairDataWithCurrentSwapPrice","hasNoDirectData","hasNoDerivedData","pairPrices","CollectionKey","PANCAKE","slug","SQUAD","nftsBaseUrl","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","callState","useTokenBalances","useTokenBalance","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","useAllTransactions","isTransactionRecent","allTransactions","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","EXISTS","usePair","getGasPrice","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","sm","Toast","toast","onRemove","ttl","timer","removeHandler","title","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","code","languageList","RefreshContext","slow","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","quoteTokenAmountMc","masterchefABI","lpTokenValue","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserLastDepositTimes","rawUserInfos","fetchFarmUserEarnings","rawEarnings","parsedEarnings","fetchFarmUserCanHarvest","rawCanHarvest","parsedCanHarvest","resItem","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","userFarmCanHarvest","userFarmLastDepositTimes","farmAllowance","farmsSlice","liveFarmData","farmData","userDataEl","getTimeWindowChange","lineChartData","firstValue","changeValue","min","MIN_VALUE_DISPLAYED","changePercentage","lowerCaseAddress","BNB_ADDRESS","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","FetchStatus","NOT_FETCHED","FAILED","fetchStatus","balanceState","setBalanceState","fetchBalance","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","useGetBnbBalance","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","refresh","useGetCakeBalance","isInitialized","hasRegistered","profileAvatars","fetchProfile","getProfile","fetchProfileAvatar","getProfileAvatar","fetchProfileUsername","username","getUsername","profileSlice","profileClear","addPoints","points","meta","arg","usernameFetchStatus","FETCHING","avatarFetchStatus","FETCHED","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","getTokenLogoURL","StyledLogo","uriLocations","endpoint","REACT_APP_SF_HEADER","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","message","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","isZero","hexNumberString","getItem","graphQLClient","variables","race","reject","startLength","endLength","substring","useDebounce","delay","debouncedValue","setDebouncedValue","handler","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","flexDirection","expanded","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","expectedRoi","setExpectedRoi","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","validity","roiAsString","target","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","toLocaleUpperCase","activeIndex","onItemClick","activate","deactivate","toastError","connectorID","connector","UnsupportedChainIdError","setupNetwork","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","resetUserNftState","close","uriToHttp","uri","substr","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","tokenAdded","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","teamsList","team","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","teamId","getTeam","fetchTeams","getTeams","usePreviousValue","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","DEFAULT_META","StyledPage","Container","lg","PageMeta","pathname","cakePriceUsd","useCakeBusdPrice","cakePriceUsdDisplay","pageMeta","startsWith","getCustomMeta","pageTitle","join","property","Page","initialNftFilterState","loadingState","IDLE","activeFilters","showOnlyOnSale","ordering","direction","initializationState","UNINITIALIZED","isUpdatingPancakeBunnies","latestPancakeBunniesUpdateAt","userNftsInitializationState","activity","fetchCollections","collectionsMarket","fetchCollection","fetchNftsFromCollections","nftsMarket","filterNftsFromCollection","nftFilters","attrParams","attr","isEmpty","attrFilters","apiToken","nftTokens","apiTokenMarketData","tokenMarketData","fetchNewPBAndUpdateExisting","existingTokensWithBunnyId","allExistingPBTokenIds","existingMetadata","updatedNfts","updatedNftsMarket","updatedTokens","newNfts","moreTokensWithRequestedBunnyId","fetchUserNfts","updateUserNft","marketDataForNft","metadataForNft","removeUserNft","addUserNft","fetchUserActivity","toLocaleLowerCase","userActivity","NftMarket","removeAllFilters","setOrdering","setShowOnlyOnSale","INITIALIZED","existingNftsWithoutNewOnes","nftToken","newToken","ERROR","INITIALIZING","userNftsState","nftToUpdate","indexInState","copyOfState","nftToRemove","splice","MINIMUM_SEARCH_CHARACTERS","WEEKS_IN_YEAR","TOTAL_FEE","LP_HOLDERS_FEE","PCS_V2_START","ITEMS_PER_INFO_TABLE_PAGE","TOKEN_BLACKLIST","StyledSVG","svg","stroke","CircleLoader","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","blockSlice","REACT_APP_NODE_PRODUCTION","sample","parseENSAddress","ensAddress","ensPath","SlippageError","DeadlineError","inputRegex","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","maxWidth","checked","userSelect","prompt","GasSettings","setGasPrice","SettingsModal","showConfirmExpertModal","showExpertModeAcknowledgement","pb","borderTop","TransactionSettings","GlobalSettings","useModal","onPresentSettingsModal","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","failure","Input","React","nextUserInput","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","val","transformProfileResponse","profileResponse","userId","numberPoints","profileContract","getUserProfile","apiRes","Cookies","avatar","domain","secure","expires","campaigns","badge","campaignMap","campaign","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubstrings","trim","Dots","span","Transactions","TransactionsModal","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","Link","show","BodyWrapper","AppBody","images","md","ipfs","textColor","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","serializedTokensMap","useFetchProfile","useProfileForAddress","profileState","setProfileState","hasAddressChanged","fetchProfileForAddress","useAchievementsForAddress","getAchievements","hasProfile","useGetProfileAvatar","queryConstructor","skipCount","fetchedData","allFound","subqueriesSlice","getDeltaTimestamps","utcCurrentTime","startOfMinute","subDays","subWeeks","setStateLastUpdated","previousLastUpdated","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","$removePadding","xs","removePadding","hideFooterOnDesktop","flexGrow","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","history","createBrowserHistory","stakeFarm","addrReff","deposit","wait","unstakeFarm","withdraw","harvestFarm","emergencyWithdraw","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","callback","leading","savedCallback","tick","setInterval","clearInterval","transformUserData","quoteTokenAddress","getUserPointIncreaseEvents","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","$isSide","BubbleWrapper","isSide","ImportToken","handleCurrencySelect","confirmed","setConfirmed","addToken","inactiveTokenList","gridGap","maxAmountSpend","greaterThan","TransactionState","IconWrapper","Transaction","renderTransactions","sortedRecentTransactions","clearAllTransactionsCallback","ens","resolvedContentHash","useENSContentHash","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","claimableCampaignId","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","selectedAddress","timePeriod","hasMoreResults","addressResults","initializePredictions","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","userRoundsLength","emptyResult","maxPages","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setHistoryPaneState","setChartPaneState","setHistoryFilter","setLastOraclePrice","markAsCollected","setSelectedAddress","newestRound","maxBy","futureRound","futureRounds","currentRound","BUSD_MAINNET","WBNB","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","ethBusdPrice","currencyEthPrice","busdPrice","useBNBBusdPrice","formatAmount","displayThreshold","tokenPrecision","isInteger","precision","repeat","amountWithPrecision","numeral","PageLoader","Outer","Inner","PageHeader","isTransitioning","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","mergedRounds","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","getBlockSubqueries","blocksQueryConstructor","sortDirection","sortingFunction","useBlocksFromTimestamps","setBlocks","setError","timestampsString","blocksString","fetchData","timestampsArray","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","rootMargin","threshold","observe","disconnect","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","onOptionChange","defaultOptionIndex","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","LineChartLoaderSVG","preserveAspectRatio","strokeDasharray","strokeDashoffset","opacity","attributeName","dur","begin","stdDeviation","in","BarChartLoaderSVG","keyTimes","repeatCount","CandleChartLoaderSVG","LoadingText","LoadingIndicator","BarChartLoader","LineChartLoader","CandleChartLoader","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","body","getAllVotes","proposalId","votesPerChunk","resolve","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","rewardTokenPrice","bnRate","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","TokenPerYear","cakeRewardsApr","NaN","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","achievementFetchStatus","fetchAchievements","achievementSlice","addAchievement","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","Loading","token2","token1AsTokenInstance","token2AsTokenInstance","String","checksummedToken1Address","checksummedToken2Address","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","e","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","Updater","fetchAllListsCallback","PATCH","MINOR","MAJOR","waitRandom","ms","random","CancelledError","RetryableError","fetchChunk","chunk","minBlockNumber","obj","blockTag","resultsBlockNumber","half","c0","c1","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","useUserAgent","documentElement","setAttribute","navigator","userAgent","useScrollOnRouteChange","unlisten","listen","scroll","left","behavior","GlobalStyle","createGlobalStyle","icon","showItemsOnMobile","hideSubNav","DropdownMenuItemType","DIVIDER","EXTERNAL_LINK","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","cakeFetchStatus","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","minHeight","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","lpPrice","farmsLP","activeMenuItem","menuConfig","menuItem","getActiveMenuItem","footerLinkValue","totalValue","tvl","totalStakedFarmsAmount","totalStakedPoolAmount","userMenu","globalMenu","banner","currentLang","langs","setLang","links","subLinks","footerLinks","activeItem","buyCakeLabel","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","AnniversaryImage","img","showConfetti","confetti","particleCount","startVelocity","gravity","spread","origin","y","AnniversaryAchievementModal","claimAnniversaryPoints","handleClick","endIcon","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","canClaimAnniversaryPoints","setCanClaimAnniversaryPoints","onPresentAnniversaryModal","canClaim","canClaimAnniversary","fetchClaimAnniversaryStatus","matchesSomeLocations","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","Divider","backgroundDisabled","EmWithdrawModal","PID","pendingTx","setPendingTx","cakePriceBusd","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","handleConfirmClick","cardHeader","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","getTotalStakedBalance","manualCakeTotalMinusAutoVault","totalStakedTooltip","totalStakedTooltipVisible","onEmergencyWithdraw","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","StyledLink","NotEnoughTokensModal","StyledButton","PercentageButton","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousEmergencyUnstake","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StakeModal","isBnbPool","isRemovingStake","onStaked","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","annualRoi","getTokenLink","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","withdrawLocked","setWidrawLocked","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","GlobalStyles","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","AnnualRoiContainer","AnnualRoiDisplay","callOptions","VaultStakeModal","stakingMax","formattedAnnualRoi","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","onToggle","handleToggle","CARD","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","totalStakedTargetRef","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","poolsCurrentlyVisible","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","estimatedText","transactionRevertText","truncatedRecipient","recipientSentToText","postSentToText","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","StyledPriceChart","$isDark","$isExpanded","BnbWbnbNotice","isChartExpanded","NoChartAvailable","wordSpacing","HoverUpdater","setHoverValue","setHoverDate","year","month","dateFormattingByTimewindow","LineChart","isChangePositive","gradient1","gradient2","dateFormatting","ResponsiveContainer","AreaChart","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","axisLine","tickLine","tickFormatter","minTickGap","YAxis","hide","contentStyle","formatter","tooltipValue","Area","formatOptions","PriceChart","setTimeWindow","setIsChartExpanded","hoverValue","hoverDate","currentDate","valueToDisplay","chartHeight","currentIsExpanded","SwapLineChart","PriceChartContainer","isPairReversed","setIsPairReversed","togglePairReversed","prePairReversed","isBadData","next","prevToken0Address","nextToken0Address","prevToken1Address","nextToken1Address","StyledSwapContainer","$isChartExpanded","xxl","StyledInputCurrencyWrapper","CurrencyInputContainer","CurrencyInputHeader","setIsChartDisplayed","currentIsChartDisplayed","Label","Swap","loadedUrlParams","userChartPreference","setUserChartPreference","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","singleTokenPrice","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmWord","word","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Farms","lazy","FarmAuction","Lottery","Ifos","NotFound","Teams","Team","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Info","ProfileCreation","PancakeSquad","handleDeactivate","addListener","removeListener","useInactiveListener","Global","exact","strict","iterations","ThemeProviderWrapper","dark","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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,cACA,wBAEFqB,IAAK,IAAIhB,IACPL,EACA,6CACA,GACA,MACA,oBACA,2BAEFsB,IAAK,IAAIjB,IACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFuB,KAAM,IAAIlB,IACRL,EACA,6CACA,GACA,OACA,uBACA,8BAEFwB,KAAM,IAAInB,IACRL,EACA,6CACA,GACA,OACA,eACA,sBAEFyB,IAAK,IAAIpB,IACPL,EACA,6CACA,GACA,MACA,eACA,4BAEF0B,SAAU,IAAIrB,IACZL,EACA,6CACA,GACA,WACA,iBACA,6BAEF2B,KAAM,IAAItB,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEF4B,MAAO,IAAIvB,IACTL,EACA,6CACA,GACA,QACA,mBACA,2BAEF6B,IAAK,IAAIxB,IACPL,EACA,6CACA,GACA,MACA,cACA,yBAEF8B,MAAO,IAAIzB,IACTL,EACA,6CACA,GACA,QACA,gBACA,4BAEF+B,OAAQ,IAAI1B,IACVL,EACA,6CACA,GACA,SACA,eACA,8BAEFgC,IAAK,IAAI3B,IACPL,EACA,6CACA,GACA,MACA,cACA,2BAEFiC,MAAO,IAAI5B,IACTL,EACA,6CACA,EACA,QACA,cACA,wBAEFkC,MAAO,IAAI7B,IACTL,EACA,6CACA,EACA,QACA,cACA,0BAEFmC,MAAO,IAAI9B,IACTL,EACA,6CACA,GACA,QACA,iBACA,gCAEFoC,IAAK,IAAI/B,IACPL,EACA,6CACA,GACA,MACA,cACA,yBAEFqC,SAAU,IAAIhC,IACZL,EACA,6CACA,GACA,WACA,kBACA,yBAEFsC,KAAM,IAAIjC,IACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEFuC,KAAM,IAAIlC,IACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFwC,IAAK,IAAInC,IACPL,EACA,6CACA,GACA,MACA,0BACA,mBAEFyC,KAAM,IAAIpC,IACRL,EACA,6CACA,GACA,OACA,oBACA,oCAEF0C,KAAM,IAAIrC,IACRL,EACA,6CACA,GACA,OACA,aACA,+BAEF2C,MAAO,IAAItC,IACTL,EACA,6CACA,GACA,QACA,qBACA,gCAEF4C,GAAI,IAAIvC,IACNL,EACA,6CACA,GACA,KACA,2BACA,+BAEF6C,IAAK,IAAIxC,IACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEF8C,MAAO,IAAIzC,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEF+C,MAAO,IAAI1C,IACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEFgD,QAAS,IAAI3C,IACXL,EACA,6CACA,GACA,MACA,oBACA,4BAEFiD,KAAM,IAAI5C,IAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGkD,IAAK,IAAI7C,IACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEFmD,IAAK,IAAI9C,IACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEFoD,OAAQ,IAAI/C,IACVL,EACA,6CACA,GACA,SACA,eACA,uBAEFqD,OAAQ,IAAIhD,IACVL,EACA,6CACA,GACA,SACA,uBACA,iCAEFsD,KAAM,IAAIjD,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFuD,IAAK,IAAIlD,IAAML,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/FwD,KAAM,IAAInD,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFyD,IAAK,IAAIpD,IACPL,EACA,6CACA,GACA,MACA,kBACA,6BAEF0D,MAAO,IAAIrD,IACTL,EACA,6CACA,GACA,QACA,qBACA,iCAEF2D,MAAO,IAAItD,IACTL,EACA,6CACA,EACA,QACA,0BACA,oCAEF4D,IAAK,IAAIvD,IACPL,EACA,6CACA,GACA,MACA,gBACA,6BAEF6D,IAAK,IAAIxD,IACPL,EACA,6CACA,GACA,MACA,mBACA,kCAEF8D,KAAM,IAAIzD,IACRL,EACA,6CACA,EACA,OACA,aACA,wBAEF+D,KAAM,IAAI1D,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFgE,IAAK,IAAI3D,IACPL,EACA,6CACA,GACA,MACA,iBACA,qBAEFiE,KAAM,IAAI5D,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFkE,IAAK,IAAI7D,IACPL,EACA,6CACA,GACA,MACA,uBACA,qBAEFmE,IAAK,IAAI9D,IACPL,EACA,6CACA,EACA,MACA,oBACA,gCAEFoE,MAAO,IAAI/D,IACTL,EACA,6CACA,EACA,QACA,2BACA,sCAEFqE,KAAM,IAAIhE,IACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEFsE,KAAM,IAAIjE,IACRL,EACA,6CACA,GACA,OACA,kCACA,qBAEFuE,IAAK,IAAIlE,IACPL,EACA,6CACA,GACA,MACA,kBACA,8BAEFwE,MAAO,IAAInE,IACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEFyE,KAAM,IAAIpE,IACRL,EACA,6CACA,GACA,OACA,aACA,sBAEF0E,QAAS,IAAIrE,IACXL,EACA,6CACA,GACA,UACA,wBACA,4BAEF2E,IAAK,IAAItE,IACPL,EACA,6CACA,GACA,MACA,iBACA,wBAEF4E,KAAM,IAAIvE,IACRL,EACA,6CACA,GACA,OACA,aACA,0BAEF6E,IAAK,IAAIxE,IACPL,EACA,6CACA,GACA,MACA,YACA,0BAEF8E,IAAK,IAAIzE,IACPL,EACA,6CACA,GACA,MACA,gBACA,2BAEF+E,KAAM,IAAI1E,IACRL,EACA,6CACA,GACA,OACA,uBACA,2BAEFgF,IAAK,IAAI3E,IACPL,EACA,6CACA,GACA,MACA,iBACA,6BAEFiF,KAAM,IAAI5E,IACRL,EACA,6CACA,EACA,OACA,eACA,2BAEFkF,IAAK,IAAI7E,IACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEFmF,KAAM,IAAI9E,IACRL,EACA,6CACA,GACA,OACA,eACA,uBAEFoF,MAAO,IAAI/E,IACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFqF,MAAO,IAAIhF,IACTL,EACA,6CACA,GACA,QACA,4BACA,uBAEFsF,KAAM,IAAIjF,IACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFuF,MAAO,IAAIlF,IACTL,EACA,6CACA,GACA,QACA,sBACA,6BAEFwF,IAAK,IAAInF,IACPL,EACA,6CACA,EACA,MACA,gBACA,0BAEFyF,IAAK,IAAIpF,IACPL,EACA,6CACA,EACA,MACA,yBACA,0BAEF0F,GAAI,IAAIrF,IACNL,EACA,6CACA,EACA,KACA,gBACA,0BAEF2F,KAAM,IAAItF,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEF4F,IAAK,IAAIvF,IACPL,EACA,6CACA,EACA,MACA,iBACA,0BAEF6F,IAAK,IAAIxF,IACPL,EACA,6CACA,EACA,MACA,4BACA,0BAEF8F,IAAK,IAAIzF,IACPL,EACA,6CACA,GACA,MACA,iBACA,8CAEF+F,KAAM,IAAI1F,IACRL,EACA,6CACA,GACA,OACA,aACA,6BAEFgG,IAAK,IAAI3F,IACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEFiG,KAAM,IAAI5F,IACRL,EACA,6CACA,EACA,OACA,aACA,wBAEFkG,QAAS,IAAI7F,IACXL,EACA,6CACA,GACA,UACA,eACA,sBAEFmG,KAAM,IAAI9F,IACRL,EACA,6CACA,GACA,OACA,gBACA,4BAEFoG,IAAK,IAAI/F,IACPL,EACA,6CACA,GACA,MACA,oBACA,4BAEFqG,IAAK,IAAIhG,IACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFsG,IAAK,IAAIjG,IACPL,EACA,6CACA,EACA,MACA,eACA,kCAEFuG,IAAK,IAAIlG,IACPL,EACA,6CACA,GACA,MACA,2BACA,kCAEFwG,IAAK,IAAInG,IAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGyG,MAAO,IAAIpG,IACTL,EACA,6CACA,GACA,QACA,sBACA,4BAEF0G,IAAK,IAAIrG,IAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChG2G,MAAO,IAAItG,IACTL,EACA,6CACA,GACA,QACA,yBACA,sBAEF4G,KAAM,IAAIvG,IACRL,EACA,6CACA,GACA,OACA,yBACA,6BAEF6G,KAAM,IAAIxG,IACRL,EACA,6CACA,GACA,OACA,sBACA,0BAEF8G,KAAM,IAAIzG,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEF+G,KAAM,IAAI1G,IACRL,EACA,6CACA,GACA,OACA,qBACA,8CAEFgH,MAAO,IAAI3G,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFiH,OAAQ,IAAI5G,IACVL,EACA,6CACA,GACA,SACA,6BACA,2BAEFkH,MAAO,IAAI7G,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFmH,MAAO,IAAI9G,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFoH,IAAK,IAAI/G,IACPL,EACA,6CACA,GACA,MACA,6BACA,yBAEFqH,IAAK,IAAIhH,IACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFsH,KAAM,IAAIjH,IACRL,EACA,6CACA,GACA,OACA,kCACA,6BAEFuH,IAAK,IAAIlH,IACPL,EACA,6CACA,GACA,MACA,6BACA,6BAEFwH,IAAK,IAAInH,IACPL,EACA,6CACA,GACA,MACA,wBACA,mBAEFyH,KAAM,IAAIpH,IACRL,EACA,6CACA,GACA,OACA,8BACA,uBAEF0H,IAAK,IAAIrH,IACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEF2H,KAAM,IAAItH,IACRL,EACA,6CACA,GACA,OACA,2BACA,2BAEF4H,KAAM,IAAIvH,IACRL,EACA,6CACA,GACA,OACA,iCACA,wBAEF6H,IAAK,IAAIxH,IACPL,EACA,6CACA,GACA,MACA,0BACA,0BAEF8H,IAAK,IAAIzH,IACPL,EACA,6CACA,GACA,MACA,iCACA,qBAEF+H,IAAK,IAAI1H,IACPL,EACA,6CACA,GACA,MACA,kCACA,0BAEFgI,IAAK,IAAI3H,IACPL,EACA,6CACA,GACA,MACA,4BACA,wBAEFiI,IAAK,IAAI5H,IACPL,EACA,6CACA,GACA,MACA,6BACA,wBAEFkI,KAAM,IAAI7H,IACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEFmI,OAAQ,IAAI9H,IACVL,EACA,6CACA,GACA,SACA,mBACA,2BAEFoI,MAAO,IAAI/H,IACTL,EACA,6CACA,GACA,QACA,yBACA,2BAEFqI,QAAS,IAAIhI,IACXL,EACA,6CACA,GACA,UACA,2BACA,2BAEFsI,MAAO,IAAIjI,IACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFuI,IAAK,IAAIlI,IACPL,EACA,6CACA,GACA,MACA,iBACA,uBAEFwI,IAAK,IAAInI,IACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEFyI,KAAM,IAAIpI,IACRL,EACA,6CACA,GACA,OACA,oBACA,uBAEF0I,IAAK,IAAIrI,IACPL,EACA,6CACA,GACA,MACA,oBACA,2BAEF2I,KAAM,IAAItI,IACRL,EACA,6CACA,GACA,OACA,mBACA,kCAEF4I,IAAK,IAAIvI,IACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEF6I,KAAM,IAAIxI,IACRL,EACA,6CACA,EACA,OACA,qBACA,yBAEF8I,KAAM,IAAIzI,IACRL,EACA,6CACA,EACA,OACA,yBACA,6BAEF+I,IAAK,IAAI1I,IACPL,EACA,6CACA,GACA,MACA,gBACA,gCAEFgJ,IAAK,IAAI3I,IACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEFiJ,KAAM,IAAI5I,IACRL,EACA,6CACA,GACA,OACA,qBACA,iCAEFkJ,IAAK,IAAI7I,IACPL,EACA,6CACA,GACA,MACA,sBACA,qBAEFmJ,KAAM,IAAI9I,IACRL,EACA,6CACA,GACA,OACA,aACA,2BAEFoJ,KAAM,IAAI/I,IAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGqJ,IAAK,IAAIhJ,IAAML,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7FsJ,KAAM,IAAIjJ,IACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFuJ,OAAQ,IAAIlJ,IACVL,EACA,6CACA,GACA,SACA,eACA,+BAEFwJ,IAAK,IAAInJ,IACPL,EACA,6CACA,GACA,MACA,mBACA,+BAEFyJ,KAAM,IAAIpJ,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEF0J,KAAM,IAAIrJ,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEF2J,IAAK,IAAItJ,IACPL,EACA,6CACA,GACA,MACA,yBACA,6BAEF4J,IAAK,IAAIvJ,IACPL,EACA,6CACA,GACA,MACA,wBACA,wBAEF6J,IAAK,IAAIxJ,IACPL,EACA,6CACA,EACA,MACA,6BACA,2BAEF8J,KAAM,IAAIzJ,IACRL,EACA,6CACA,GACA,OACA,SACA,4BAEF+J,KAAM,IAAI1J,IACRL,EACA,6CACA,GACA,OACA,YACA,4BAEFgK,IAAK,IAAI3J,IACPL,EACA,6CACA,GACA,MACA,yBACA,gCAEFiK,MAAO,IAAI5J,IACTL,EACA,6CACA,GACA,QACA,iBACA,+BAEFkK,IAAK,IAAI7J,IACPL,EACA,6CACA,GACA,MACA,oBACA,8BAEFmK,IAAK,IAAI9J,IACPL,EACA,6CACA,GACA,MACA,YACA,oCAEFoK,MAAO,IAAI/J,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEFqK,IAAK,IAAIhK,IACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEFsK,YAAM,IAAIjK,IACRL,EACA,6CACA,EACA,YACA,sBACA,8BAEFuK,OAAQ,IAAIlK,IACVL,EACA,6CACA,GACA,SACA,cACA,kCAEFwK,IAAK,IAAInK,IACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFyK,IAAK,IAAIpK,IACPL,EACA,6CACA,GACA,MACA,qBACA,yBAEF0K,IAAK,IAAIrK,IACPL,EACA,6CACA,GACA,MACA,+BACA,+BAEF2K,IAAK,IAAItK,IACPL,EACA,6CACA,GACA,MACA,aACA,yBAEF4K,IAAK,IAAIvK,IACPL,EACA,6CACA,GACA,MACA,YACA,yBAEF6K,MAAO,IAAIxK,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF8K,KAAM,IAAIzK,IACRL,EACA,6CACA,GACA,OACA,aACA,2BAEF+K,IAAK,IAAI1K,IACPL,EACA,6CACA,GACA,MACA,wBACA,0BAEFgL,IAAK,IAAI3K,IACPL,EACA,6CACA,GACA,MACA,gCACA,0BAEFiL,KAAM,IAAI5K,IACRL,EACA,6CACA,GACA,OACA,aACA,uBAEFkL,IAAK,IAAI7K,IACPL,EACA,6CACA,EACA,MACA,mBACA,wBAEFmL,KAAM,IAAI9K,IACRL,EACA,6CACA,EACA,OACA,uBACA,yBAEFoL,KAAM,IAAI/K,IACRL,EACA,6CACA,GACA,OACA,kBACA,0BAEFqL,IAAK,IAAIhL,IACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFsL,KAAM,IAAIjL,IACRL,EACA,6CACA,GACA,OACA,iBACA,yBAEFuL,aAAO,IAAIlL,IACTL,EACA,6CACA,EACA,aACA,iBACA,8BAEFwL,IAAK,IAAInL,IACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFyL,KAAM,IAAIpL,IACRL,EACA,6CACA,GACA,OACA,eACA,uBAEF0L,MAAO,IAAIrL,IACTL,EACA,6CACA,EACA,QACA,qBACA,2BAEF2L,KAAM,IAAItL,IACRL,EACA,6CACA,GACA,OACA,aACA,8BAEF4L,KAAM,IAAIvL,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEF6L,IAAK,IAAIxL,IAAML,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9F8L,IAAK,IAAIzL,IACPL,EACA,6CACA,EACA,MACA,eACA,wBAEF+L,KAAM,IAAI1L,IACRL,EACA,6CACA,GACA,OACA,aACA,gCAEFgM,KAAM,IAAI3L,IACRL,EACA,6CACA,GACA,OACA,gBACA,8BAEFiM,IAAK,IAAI5L,IACPL,EACA,6CACA,GACA,MACA,kBACA,0BAEFkM,OAAQ,IAAI7L,IACVL,EACA,6CACA,GACA,SACA,cACA,0BAEFmM,MAAO,IAAI9L,IACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEFoM,GAAI,IAAI/L,IACNL,EACA,6CACA,GACA,KACA,gBACA,2BAEFqM,IAAK,IAAIhM,IACPL,EACA,6CACA,GACA,MACA,qBACA,qBAEFsM,KAAM,IAAIjM,IACRL,EACA,6CACA,GACA,OACA,4BACA,4BAEFuM,KAAM,IAAIlM,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFwM,IAAK,IAAInM,IACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEFyM,IAAK,IAAIpM,IACPL,EACA,6CACA,GACA,MACA,mBACA,0BAEF0M,KAAM,IAAIrM,IACRL,EACA,6CACA,GACA,OACA,oBACA,mCAEF2M,GAAI,IAAItM,IAAML,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3F4M,IAAK,IAAIvM,IACPL,EACA,6CACA,GACA,MACA,iBACA,4BAEF6M,KAAM,IAAIxM,IACRL,EACA,6CACA,GACA,OACA,cACA,2BAEF8M,OAAQ,IAAIzM,IACVL,EACA,6CACA,GACA,SACA,kBACA,8BAEF+M,MAAO,IAAI1M,IACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEFgN,KAAM,IAAI3M,IACRL,EACA,6CACA,EACA,OACA,aACA,+BAEFiN,GAAI,IAAI5M,IACNL,EACA,6CACA,GACA,KACA,gBACA,uBAEFkN,IAAK,IAAI7M,IAAML,EAAS,6CAA8C,EAAG,MAAO,eAAgB,sBAChGmN,IAAK,IAAI9M,IACPL,EACA,6CACA,GACA,MACA,eACA,0BAEFoN,IAAK,IAAI/M,IACPL,EACA,6CACA,GACA,MACA,yBACA,wBAEFqN,IAAK,IAAIhN,IACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEFsN,SAAU,IAAIjN,IACZL,EACA,6CACA,EACA,WACA,iBACA,yBAEFuN,IAAK,IAAIlN,IACPL,EACA,6CACA,GACA,MACA,qCACA,6BAEFwN,IAAK,IAAInN,IACPL,EACA,6CACA,GACA,MACA,eACA,uBAEFyN,KAAM,IAAIpN,IACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEF0N,IAAK,IAAIrN,IACPL,EACA,6CACA,GACA,MACA,mBACA,oCAEF2N,KAAM,IAAItN,IACRL,EACA,6CACA,GACA,OACA,aACA,iCAEF4N,GAAI,IAAIvN,IACNL,EACA,6CACA,GACA,KACA,kBACA,8BAEF6N,MAAO,IAAIxN,IACTL,EACA,6CACA,GACA,QACA,qBACA,yBAEF8N,KAAM,IAAIzN,IACRL,EACA,6CACA,GACA,OACA,YACA,yBAEF+N,KAAM,IAAI1N,IACRL,EACA,6CACA,GACA,OACA,eACA,yBAEFgO,MAAO,IAAI3N,IACTL,EACA,6CACA,GACA,QACA,YACA,sCAEFiO,IAAK,IAAI5N,IACPL,EACA,6CACA,GACA,MACA,mBACA,oCAEFkO,IAAK,IAAI7N,IACPL,EACA,6CACA,GACA,MACA,QACA,8BAEFmO,MAAO,IAAI9N,IACTL,EACA,6CACA,EACA,QACA,qBACA,2DAEFoO,IAAK,IAAI/N,IAAML,EAAS,6CAA8C,EAAG,MAAO,QAAS,yBACzFqO,KAAM,IAAIhO,IACRL,EACA,6CACA,GACA,OACA,kBACA,+BAEFsO,IAAK,IAAIjO,IACPL,EACA,6CACA,GACA,MACA,iBACA,8BAEFuO,IAAK,IAAIlO,IACPL,EACA,6CACA,GACA,MACA,mBACA,4BAEFwO,KAAM,IAAInO,IACRL,EACA,6CACA,GACA,OACA,iBACA,2BAEFyO,IAAK,IAAIpO,IACPL,EACA,6CACA,EACA,MACA,oBACA,oCAEF0O,IAAK,IAAIrO,IACPL,EACA,6CACA,GACA,MACA,gBACA,sBAEF2O,QAAS,IAAItO,IACXL,EACA,6CACA,GACA,UACA,sBACA,4BAEF4O,MAAO,IAAIvO,IACTL,EACA,6CACA,EACA,QACA,qBACA,2DAEF6O,KAAM,IAAIxO,IACRL,EACA,6CACA,GACA,OACA,cACA,2BAEF8O,GAAI,IAAIzO,IAAML,EAAS,6CAA8C,GAAI,KAAM,QAAS,qBACxF+O,QAAS,IAAI1O,IACXL,EACA,6CACA,GACA,UACA,kBACA,kCAEFgP,MAAO,IAAI3O,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEFiP,MAAO,IAAI5O,IACTL,EACA,6CACA,GACA,QACA,cACA,gCAISkP,EAAgB,CAC3B9O,KAAM,IAAIC,IACRH,EACA,6CACA,GACA,OACA,cACA,4BAEFI,IAAK,IAAID,IACPH,EACA,6CACA,GACA,MACA,YACA,6BAEFM,KAAM,IAAIH,IACRH,EACA,6CACA,GACA,OACA,oBACA,gCAEFe,KAAM,IAAIZ,IACRH,EACA,6CACA,GACA,OACA,cACA,+BAEFiC,MAAO,IAAI9B,IACTH,EACA,6CACA,GACA,QACA,iBACA,gCAEFgI,KAAM,IAAI7H,IACRH,EACA,6CACA,GACA,OACA,mBACA,gCA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","file":"static/js/main.d2d4a56c.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { Language } from '@pancakeswap/uikit'\r\nimport { EN, languages } from 'config/localization/languages'\r\nimport translations from 'config/localization/translations.json'\r\nimport { ContextApi, ContextData, ProviderState } from './types'\r\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\r\n\r\nconst initialState: ProviderState = {\r\n  isFetching: true,\r\n  currentLanguage: EN,\r\n}\r\n\r\n// Export the translations directly\r\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\r\nlanguageMap.set(EN.locale, translations)\r\n\r\nexport const LanguageContext = createContext<ContextApi>(undefined)\r\n\r\nexport const LanguageProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<ProviderState>(() => {\r\n    const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n    return {\r\n      ...initialState,\r\n      currentLanguage: languages[codeFromStorage],\r\n    }\r\n  })\r\n  const { currentLanguage } = state\r\n\r\n  useEffect(() => {\r\n    const fetchInitialLocales = async () => {\r\n      const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n      if (codeFromStorage !== EN.locale) {\r\n        const enLocale = languageMap.get(EN.locale)\r\n        const currentLocale = await fetchLocale(codeFromStorage)\r\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n      }))\r\n    }\r\n\r\n    fetchInitialLocales()\r\n  }, [setState])\r\n\r\n  const setLanguage = async (language: Language) => {\r\n    if (!languageMap.has(language.locale)) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: true,\r\n      }))\r\n\r\n      const locale = await fetchLocale(language.locale)\r\n      const enLocale = languageMap.get(EN.locale)\r\n\r\n      // Merge the EN locale to ensure that any locale fetched has all the keys\r\n      languageMap.set(language.locale, { ...enLocale, ...locale })\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    } else {\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const translate = useCallback(\r\n    (key: string, data?: ContextData) => {\r\n      const translationSet = languageMap.has(currentLanguage.locale)\r\n        ? languageMap.get(currentLanguage.locale)\r\n        : languageMap.get(EN.locale)\r\n      const translatedText = translationSet[key] || key\r\n\r\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\r\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\r\n\r\n      if (includesVariable && data) {\r\n        let interpolatedText = translatedText\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return translatedText\r\n    },\r\n    [currentLanguage],\r\n  )\r\n\r\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\r\n}\r\n","import { useContext } from 'react'\r\nimport { LanguageContext } from './Provider'\r\n\r\nconst useTranslation = () => {\r\n  const languageContext = useContext(LanguageContext)\r\n\r\n  if (languageContext === undefined) {\r\n    throw new Error('Language context is undefined')\r\n  }\r\n\r\n  return languageContext\r\n}\r\n\r\nexport default useTranslation\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\n\r\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\r\n  const { library, chainId, ...web3React } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setProvider(library || simpleRpcProvider)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\r\n}\r\n\r\nexport default useActiveWeb3React\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { DerivedPairDataNormalized, PairDataNormalized, PairDataTimeWindowEnum } from './types'\r\n\r\nexport enum Field {\r\n  INPUT = 'INPUT',\r\n  OUTPUT = 'OUTPUT',\r\n}\r\n\r\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\r\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\r\nexport const replaceSwapState = createAction<{\r\n  field: Field\r\n  typedValue: string\r\n  inputCurrencyId?: string\r\n  outputCurrencyId?: string\r\n  recipient: string | null\r\n}>('swap/replaceSwapState')\r\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\r\nexport const updatePairData =\r\n  createAction<{ pairData: PairDataNormalized; pairId: string; timeWindow: PairDataTimeWindowEnum }>(\r\n    'swap/updatePairData',\r\n  )\r\nexport const updateDerivedPairData =\r\n  createAction<{ pairData: DerivedPairDataNormalized; pairId: string; timeWindow: PairDataTimeWindowEnum }>(\r\n    'swap/updateDerivedPairData',\r\n  )\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n\r\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\r\n  ethersToBigNumber(ethersBn).toJSON()\r\n\r\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B',\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\r\nexport const resetMintState = createAction<void>('mint/resetMintState')\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Row = styled(Box)<{\r\n  width?: string\r\n  align?: string\r\n  justify?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align ?? 'center'};\r\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */\r\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\r\n  return formatUnits(number.sub(remainder), decimals)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */\r\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const formattedString = formatUnits(number, decimals)\r\n  return (+formattedString).toFixed(displayDecimals)\r\n}\r\n\r\n/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */\r\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\r\n  // Remove decimal\r\n  const [leftSide] = number.toString().split('.')\r\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\r\n}\r\n\r\nexport const formatLocalisedCompactNumber = (number: number): string => {\r\n  const codeFromStorage = getLanguageCodeFromLS()\r\n  return new Intl.NumberFormat(codeFromStorage, {\r\n    notation: 'compact',\r\n    compactDisplay: 'long',\r\n    maximumSignificantDigits: 2,\r\n  }).format(number)\r\n}\r\n\r\nexport default formatLocalisedCompactNumber\r\n","import { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { serializeToken } from 'state/user/hooks/helpers'\r\nimport { SerializedToken } from './types'\r\n\r\nconst { MAINNET, TESTNET } = ChainId\r\n\r\ninterface TokenList {\r\n  [symbol: string]: Token\r\n}\r\n\r\ninterface SerializedTokenList {\r\n  [symbol: string]: SerializedToken\r\n}\r\n\r\nexport const mainnetTokens = {\r\n  wbnb: new Token(\r\n    MAINNET,\r\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    18,\r\n    'WBNB',\r\n    'Wrapped BNB',\r\n    'https://www.binance.com/',\r\n  ),\r\n  zlt: new Token(\r\n    MAINNET,\r\n    '0x05d8762946fa7620b263e1e77003927addf5f7e6',\r\n    18,\r\n    'ZLT',\r\n    'Zero loss',\r\n    'https://app.zeroloss.com',\r\n  ),\r\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\r\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\r\n  cake: new Token(\r\n    MAINNET,\r\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n    18,\r\n    'CAKE',\r\n    'PancakeSwap Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\r\n  beta: new Token(\r\n    MAINNET,\r\n    '0xBe1a001FE942f96Eea22bA08783140B9Dcc09D28',\r\n    18,\r\n    'BETA',\r\n    'Beta Finance',\r\n    'https://betafinance.org',\r\n  ),\r\n  nft: new Token(MAINNET, '0x1fC9004eC7E5722891f5f38baE7678efCB11d34D', 6, 'NFT', 'APENFT', 'https://apenft.org'),\r\n  stephero: new Token(\r\n    MAINNET,\r\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\r\n    18,\r\n    'HERO',\r\n    'StepHero',\r\n    'https://stephero.io/',\r\n  ),\r\n  pros: new Token(MAINNET, '0xEd8c8Aa8299C10f067496BB66f8cC7Fb338A3405', 18, 'PROS', 'Prosper', 'https://prosper.so/'),\r\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\r\n  cvp: new Token(\r\n    MAINNET,\r\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\r\n    18,\r\n    'CVP',\r\n    'Concentrated Voting Power Token',\r\n    'https://powerpool.finance/',\r\n  ),\r\n  bscdefi: new Token(\r\n    MAINNET,\r\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\r\n    18,\r\n    'BSCDEFI',\r\n    'BSC Defi blue chips token',\r\n    'https://powerpool.finance/',\r\n  ),\r\n  busd: new Token(\r\n    MAINNET,\r\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    18,\r\n    'BUSD',\r\n    'Binance USD',\r\n    'https://www.paxos.com/busd/',\r\n  ),\r\n  dai: new Token(\r\n    MAINNET,\r\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\r\n    18,\r\n    'DAI',\r\n    'Dai Stablecoin',\r\n    'https://www.makerdao.com/',\r\n  ),\r\n  usdt: new Token(\r\n    MAINNET,\r\n    '0x55d398326f99059fF775485246999027B3197955',\r\n    18,\r\n    'USDT',\r\n    'Tether USD',\r\n    'https://tether.to/',\r\n  ),\r\n  btcb: new Token(\r\n    MAINNET,\r\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n    18,\r\n    'BTCB',\r\n    'Binance BTC',\r\n    'https://bitcoin.org/',\r\n  ),\r\n  ust: new Token(\r\n    MAINNET,\r\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\r\n    18,\r\n    'UST',\r\n    'Wrapped UST Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  eth: new Token(\r\n    MAINNET,\r\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n    18,\r\n    'ETH',\r\n    'Binance-Peg Ethereum Token',\r\n    'https://ethereum.org/en/',\r\n  ),\r\n  usdc: new Token(\r\n    MAINNET,\r\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n    18,\r\n    'USDC',\r\n    'Binance-Peg USD Coin',\r\n    'https://www.centre.io/usdc',\r\n  ),\r\n  kalm: new Token(\r\n    MAINNET,\r\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\r\n    18,\r\n    'KALM',\r\n    'Kalmar Token',\r\n    'https://kalmar.io/',\r\n  ),\r\n  dkt: new Token(\r\n    MAINNET,\r\n    '0x7Ceb519718A80Dd78a8545AD8e7f401dE4f2faA7',\r\n    18,\r\n    'DKT',\r\n    'Duelist King',\r\n    'https://duelistking.com/',\r\n  ),\r\n  hotcross: new Token(\r\n    MAINNET,\r\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\r\n    18,\r\n    'HOTCROSS',\r\n    'Hotcross Token',\r\n    'https://www.hotcross.com/',\r\n  ),\r\n  belt: new Token(\r\n    MAINNET,\r\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\r\n    18,\r\n    'BELT',\r\n    'Belt Token',\r\n    'https://beta.belt.fi/',\r\n  ),\r\n  watch: new Token(\r\n    MAINNET,\r\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\r\n    18,\r\n    'WATCH',\r\n    'Yieldwatch Token',\r\n    'https://yieldwatch.net/',\r\n  ),\r\n  bry: new Token(\r\n    MAINNET,\r\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\r\n    18,\r\n    'BRY',\r\n    'Berry Token',\r\n    'https://berrydata.co/',\r\n  ),\r\n  wsote: new Token(\r\n    MAINNET,\r\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\r\n    18,\r\n    'wSOTE',\r\n    'Soteria Token',\r\n    'https://soteria.finance/',\r\n  ),\r\n  helmet: new Token(\r\n    MAINNET,\r\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\r\n    18,\r\n    'Helmet',\r\n    'Helmet Token',\r\n    'https://www.helmet.insure/',\r\n  ),\r\n  ten: new Token(\r\n    MAINNET,\r\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\r\n    18,\r\n    'TEN',\r\n    'Tenet Token',\r\n    'https://www.tenet.farm/',\r\n  ),\r\n  ditto: new Token(\r\n    MAINNET,\r\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\r\n    9,\r\n    'DITTO',\r\n    'Ditto Token',\r\n    'https://ditto.money/',\r\n  ),\r\n  blink: new Token(\r\n    MAINNET,\r\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\r\n    6,\r\n    'BLINK',\r\n    'Blink Token',\r\n    'https://blink.wink.org',\r\n  ),\r\n  syrup: new Token(\r\n    MAINNET,\r\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n    18,\r\n    'SYRUP',\r\n    'SyrupBar Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  pha: new Token(\r\n    MAINNET,\r\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\r\n    18,\r\n    'PHA',\r\n    'Phala Token',\r\n    'https://phala.network',\r\n  ),\r\n  babycake: new Token(\r\n    MAINNET,\r\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\r\n    18,\r\n    'BABYCAKE',\r\n    'Baby Cake Token',\r\n    'https://babycake.app/',\r\n  ),\r\n  bmon: new Token(\r\n    MAINNET,\r\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\r\n    18,\r\n    'BMON',\r\n    'Binamon Token',\r\n    'https://binamon.org/',\r\n  ),\r\n  hero: new Token(\r\n    MAINNET,\r\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\r\n    18,\r\n    'HERO',\r\n    'Metahero Token',\r\n    'https://metahero.io/',\r\n  ),\r\n  wsg: new Token(\r\n    MAINNET,\r\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\r\n    18,\r\n    'WSG',\r\n    'Wall Street Games Token',\r\n    'https://wsg.gg/',\r\n  ),\r\n  mcrn: new Token(\r\n    MAINNET,\r\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\r\n    18,\r\n    'MCRN',\r\n    'Macaronswap Token',\r\n    'https://www.macaronswap.finance/',\r\n  ),\r\n  revv: new Token(\r\n    MAINNET,\r\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\r\n    18,\r\n    'REVV',\r\n    'REVV Token',\r\n    'https://revvmotorsport.com/',\r\n  ),\r\n  skill: new Token(\r\n    MAINNET,\r\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\r\n    18,\r\n    'SKILL',\r\n    'Cryptoblades Token',\r\n    'https://www.cryptoblades.io/',\r\n  ),\r\n  if: new Token(\r\n    MAINNET,\r\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\r\n    18,\r\n    'IF',\r\n    'Impossible Finance Token',\r\n    'https://impossible.finance/',\r\n  ),\r\n  sps: new Token(\r\n    MAINNET,\r\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\r\n    18,\r\n    'SPS',\r\n    'Splinterlands Token',\r\n    'https://splinterlands.com',\r\n  ),\r\n  chess: new Token(\r\n    MAINNET,\r\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\r\n    18,\r\n    'CHESS',\r\n    'Chess Token',\r\n    'https://tranchess.com/',\r\n  ),\r\n  titan: new Token(\r\n    MAINNET,\r\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\r\n    18,\r\n    'TITAN',\r\n    'Titanswap Token',\r\n    'https://titanswap.org',\r\n  ),\r\n  harmony: new Token(\r\n    MAINNET,\r\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\r\n    18,\r\n    'ONE',\r\n    'Harmony ONE Token',\r\n    'https://www.harmony.one/',\r\n  ),\r\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\r\n  dvi: new Token(\r\n    MAINNET,\r\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\r\n    18,\r\n    'DVI',\r\n    'Dvision Network Token',\r\n    'https://dvision.network/',\r\n  ),\r\n  adx: new Token(\r\n    MAINNET,\r\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\r\n    18,\r\n    'ADX',\r\n    'Adex Network Token',\r\n    'https://www.adex.network',\r\n  ),\r\n  bscpad: new Token(\r\n    MAINNET,\r\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\r\n    18,\r\n    'BSCPAD',\r\n    'Bscpad Token',\r\n    'https://bscpad.com/',\r\n  ),\r\n  rabbit: new Token(\r\n    MAINNET,\r\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\r\n    18,\r\n    'RABBIT',\r\n    'Rabbit Finance Token',\r\n    'https://rabbitfinance.io/earn',\r\n  ),\r\n  form: new Token(\r\n    MAINNET,\r\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\r\n    18,\r\n    'FORM',\r\n    'Formation Token',\r\n    'https://formation.fi/',\r\n  ),\r\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\r\n  orbs: new Token(\r\n    MAINNET,\r\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\r\n    18,\r\n    'ORBS',\r\n    'Orbs Token',\r\n    'https://www.orbs.com/',\r\n  ),\r\n  cos: new Token(\r\n    MAINNET,\r\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\r\n    18,\r\n    'COS',\r\n    'Contentos Token',\r\n    'https://www.contentos.io/',\r\n  ),\r\n  bunny: new Token(\r\n    MAINNET,\r\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\r\n    18,\r\n    'BUNNY',\r\n    'Pancakebunny Token',\r\n    'https://pancakebunny.finance/',\r\n  ),\r\n  alice: new Token(\r\n    MAINNET,\r\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\r\n    6,\r\n    'ALICE',\r\n    'My Neighbor Alice Token',\r\n    'https://www.myneighboralice.com/',\r\n  ),\r\n  for: new Token(\r\n    MAINNET,\r\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\r\n    18,\r\n    'FOR',\r\n    'Fortube Token',\r\n    'https://www.for.tube/home',\r\n  ),\r\n  bux: new Token(\r\n    MAINNET,\r\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\r\n    18,\r\n    'BUX',\r\n    'Bux Crypto Token',\r\n    'https://getbux.com/bux-crypto/',\r\n  ),\r\n  nuls: new Token(\r\n    MAINNET,\r\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\r\n    8,\r\n    'NULS',\r\n    'Nuls Token',\r\n    'https://www.nuls.io/',\r\n  ),\r\n  ramp: new Token(\r\n    MAINNET,\r\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\r\n    18,\r\n    'RAMP',\r\n    'RAMP DEFI Token',\r\n    'https://rampdefi.com/',\r\n  ),\r\n  bfi: new Token(\r\n    MAINNET,\r\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\r\n    18,\r\n    'BFI',\r\n    'bearn.fi Token',\r\n    'https://bearn.fi/',\r\n  ),\r\n  dexe: new Token(\r\n    MAINNET,\r\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\r\n    18,\r\n    'DEXE',\r\n    'DeXe Token',\r\n    'https://dexe.network/',\r\n  ),\r\n  bel: new Token(\r\n    MAINNET,\r\n    '0x8443f091997f06a61670B735ED92734F5628692F',\r\n    18,\r\n    'BEL',\r\n    'Bella Protocol Token',\r\n    'https://bella.fi/',\r\n  ),\r\n  tpt: new Token(\r\n    MAINNET,\r\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\r\n    4,\r\n    'TPT',\r\n    'Tokenpocket Token',\r\n    'https://www.tokenpocket.pro/',\r\n  ),\r\n  xmark: new Token(\r\n    MAINNET,\r\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\r\n    9,\r\n    'xMARK',\r\n    'Benchmark Protocol Token',\r\n    'https://benchmarkprotocol.finance/',\r\n  ),\r\n  bmxx: new Token(\r\n    MAINNET,\r\n    '0x4131b87F74415190425ccD873048C708F8005823',\r\n    18,\r\n    'bMXX',\r\n    'Multiplier Token',\r\n    'https://multiplier.finance/',\r\n  ),\r\n  iotx: new Token(\r\n    MAINNET,\r\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\r\n    18,\r\n    'IOTX',\r\n    'Binance-Peg IoTeX Network Token',\r\n    'https://iotex.io/',\r\n  ),\r\n  bor: new Token(\r\n    MAINNET,\r\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\r\n    18,\r\n    'BOR',\r\n    'BoringDAO Token',\r\n    'https://www.boringdao.com/',\r\n  ),\r\n  bopen: new Token(\r\n    MAINNET,\r\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\r\n    18,\r\n    'bOPEN',\r\n    'OPEN Governance Token',\r\n    'https://opendao.io/',\r\n  ),\r\n  dodo: new Token(\r\n    MAINNET,\r\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\r\n    18,\r\n    'DODO',\r\n    'Dodo Token',\r\n    'https://dodoex.io/',\r\n  ),\r\n  swingby: new Token(\r\n    MAINNET,\r\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\r\n    18,\r\n    'SWINGBY',\r\n    'Swingby Network Token',\r\n    'https://swingby.network/',\r\n  ),\r\n  zee: new Token(\r\n    MAINNET,\r\n    '0x44754455564474A89358B2C2265883DF993b12F0',\r\n    18,\r\n    'ZEE',\r\n    'Zeroswap Token',\r\n    'https://zeroswap.io/',\r\n  ),\r\n  swgb: new Token(\r\n    MAINNET,\r\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\r\n    18,\r\n    'SWGb',\r\n    'SWGb Token',\r\n    'https://swirgepay.com/',\r\n  ),\r\n  swg: new Token(\r\n    MAINNET,\r\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\r\n    18,\r\n    'SWG',\r\n    'SWG Token',\r\n    'https://swirgepay.com/',\r\n  ),\r\n  sfp: new Token(\r\n    MAINNET,\r\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\r\n    18,\r\n    'SFP',\r\n    'Safepal Token',\r\n    'https://www.safepal.io/',\r\n  ),\r\n  lina: new Token(\r\n    MAINNET,\r\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\r\n    18,\r\n    'LINA',\r\n    'Linear Finance Token',\r\n    'https://linear.finance/',\r\n  ),\r\n  lit: new Token(\r\n    MAINNET,\r\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\r\n    18,\r\n    'LIT',\r\n    'Litentry Token',\r\n    'https://www.litentry.com/',\r\n  ),\r\n  hget: new Token(\r\n    MAINNET,\r\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\r\n    6,\r\n    'HGET',\r\n    'Hedget Token',\r\n    'https://www.hedget.com/',\r\n  ),\r\n  bdo: new Token(\r\n    MAINNET,\r\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\r\n    18,\r\n    'BDO',\r\n    'Bdollar Token',\r\n    'https://bdollar.fi/',\r\n  ),\r\n  egld: new Token(\r\n    MAINNET,\r\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\r\n    18,\r\n    'EGLD',\r\n    'Elrond Token',\r\n    'https://elrond.com/',\r\n  ),\r\n  front: new Token(\r\n    MAINNET,\r\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\r\n    18,\r\n    'FRONT',\r\n    'Frontier Token',\r\n    'https://frontier.xyz/',\r\n  ),\r\n  btcst: new Token(\r\n    MAINNET,\r\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\r\n    17,\r\n    'BTCST',\r\n    'StandardBTCHashrate Token',\r\n    'https://www.1-b.tc/',\r\n  ),\r\n  bscx: new Token(\r\n    MAINNET,\r\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\r\n    18,\r\n    'BSCX',\r\n    'BSCX Token',\r\n    'https://bscex.org/',\r\n  ),\r\n  balbt: new Token(\r\n    MAINNET,\r\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\r\n    18,\r\n    'bALBT',\r\n    'AllianceBlock Token',\r\n    'https://allianceblock.io/',\r\n  ),\r\n  asr: new Token(\r\n    MAINNET,\r\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\r\n    2,\r\n    'ASR',\r\n    'AS Roma Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  atm: new Token(\r\n    MAINNET,\r\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\r\n    2,\r\n    'ATM',\r\n    'Athletico Madrid Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  og: new Token(\r\n    MAINNET,\r\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\r\n    2,\r\n    'OG',\r\n    'OG Nice Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  reef: new Token(\r\n    MAINNET,\r\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\r\n    18,\r\n    'REEF',\r\n    'Reef.finance Token',\r\n    'https://reef.finance/',\r\n  ),\r\n  juv: new Token(\r\n    MAINNET,\r\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\r\n    2,\r\n    'JUV',\r\n    'Juventus Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  psg: new Token(\r\n    MAINNET,\r\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\r\n    2,\r\n    'PSG',\r\n    'Paris Saint-Germain Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  vai: new Token(\r\n    MAINNET,\r\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n    18,\r\n    'VAI',\r\n    'VAI Stablecoin',\r\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n  ),\r\n  unfi: new Token(\r\n    MAINNET,\r\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\r\n    18,\r\n    'UNFI',\r\n    'UNFI Token',\r\n    'https://unifiprotocol.com',\r\n  ),\r\n  twt: new Token(\r\n    MAINNET,\r\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\r\n    18,\r\n    'TWT',\r\n    'Trust Wallet Token',\r\n    'https://trustwallet.com/',\r\n  ),\r\n  hard: new Token(\r\n    MAINNET,\r\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\r\n    6,\r\n    'HARD',\r\n    'HARD Token',\r\n    'https://hard.kava.io',\r\n  ),\r\n  broobee: new Token(\r\n    MAINNET,\r\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\r\n    18,\r\n    'bROOBEE',\r\n    'ROOBEE Token',\r\n    'https://roobee.io/',\r\n  ),\r\n  stax: new Token(\r\n    MAINNET,\r\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\r\n    18,\r\n    'STAX',\r\n    'StableX Token',\r\n    'https://stablexswap.com/',\r\n  ),\r\n  nar: new Token(\r\n    MAINNET,\r\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\r\n    18,\r\n    'NAR',\r\n    'Narwhalswap Token',\r\n    'https://narwhalswap.org/',\r\n  ),\r\n  nya: new Token(\r\n    MAINNET,\r\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\r\n    18,\r\n    'NYA',\r\n    'Nyanswop Token',\r\n    'https://nyanswop.org/',\r\n  ),\r\n  ctk: new Token(\r\n    MAINNET,\r\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\r\n    6,\r\n    'CTK',\r\n    'Certik Token',\r\n    'https://www.certik.foundation/',\r\n  ),\r\n  inj: new Token(\r\n    MAINNET,\r\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\r\n    18,\r\n    'INJ',\r\n    'Injective Protocol Token',\r\n    'https://injectiveprotocol.com/',\r\n  ),\r\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\r\n  alpha: new Token(\r\n    MAINNET,\r\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\r\n    18,\r\n    'ALPHA',\r\n    'Alpha Finance Token',\r\n    'https://alphafinance.io/',\r\n  ),\r\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\r\n  sushi: new Token(\r\n    MAINNET,\r\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\r\n    18,\r\n    'SUSHI',\r\n    'Binance-Peg SushiToken',\r\n    'https://sushi.com/',\r\n  ),\r\n  comp: new Token(\r\n    MAINNET,\r\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\r\n    18,\r\n    'COMP',\r\n    'Compound Finance Token',\r\n    'https://compound.finance/',\r\n  ),\r\n  bifi: new Token(\r\n    MAINNET,\r\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\r\n    18,\r\n    'BIFI',\r\n    'Beefy Finance Token',\r\n    'https://beefy.finance/',\r\n  ),\r\n  dusk: new Token(\r\n    MAINNET,\r\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\r\n    18,\r\n    'DUSK',\r\n    'Dusk Network Token',\r\n    'https://dusk.network/',\r\n  ),\r\n  beth: new Token(\r\n    MAINNET,\r\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\r\n    18,\r\n    'BETH',\r\n    'Binance Beacon ETH',\r\n    'https://ethereum.org/en/eth2/beacon-chain/',\r\n  ),\r\n  mamzn: new Token(\r\n    MAINNET,\r\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\r\n    18,\r\n    'mAMZN',\r\n    'Wrapped Mirror AMZN Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mgoogl: new Token(\r\n    MAINNET,\r\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\r\n    18,\r\n    'mGOOGL',\r\n    'Wrapped Mirror GOOGL Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mnflx: new Token(\r\n    MAINNET,\r\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\r\n    18,\r\n    'mNFLX',\r\n    'Wrapped Mirror NFLX Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mtsla: new Token(\r\n    MAINNET,\r\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\r\n    18,\r\n    'mTSLA',\r\n    'Wrapped Mirror TSLA Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  ltc: new Token(\r\n    MAINNET,\r\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\r\n    18,\r\n    'LTC',\r\n    'Binance-Peg Litecoin Token',\r\n    'https://litecoin.org/',\r\n  ),\r\n  ada: new Token(\r\n    MAINNET,\r\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\r\n    18,\r\n    'ADA',\r\n    ' Binance-Peg Cardano Token',\r\n    'https://www.cardano.org/',\r\n  ),\r\n  band: new Token(\r\n    MAINNET,\r\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\r\n    18,\r\n    'BAND',\r\n    'Binance-Peg Band Protocol Token',\r\n    'https://bandprotocol.com/',\r\n  ),\r\n  dot: new Token(\r\n    MAINNET,\r\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\r\n    18,\r\n    'DOT',\r\n    'Binance-Peg Polkadot Token',\r\n    'https://polkadot.network/',\r\n  ),\r\n  eos: new Token(\r\n    MAINNET,\r\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\r\n    18,\r\n    'EOS',\r\n    'Binance-Peg EOS Token',\r\n    'https://eos.io/',\r\n  ),\r\n  link: new Token(\r\n    MAINNET,\r\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\r\n    18,\r\n    'LINK',\r\n    'Binance-Peg Chainlink Token',\r\n    'https://chain.link/',\r\n  ),\r\n  xrp: new Token(\r\n    MAINNET,\r\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\r\n    18,\r\n    'XRP',\r\n    'Binance-Peg XRP Token',\r\n    'https://ripple.com/xrp/',\r\n  ),\r\n  atom: new Token(\r\n    MAINNET,\r\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\r\n    18,\r\n    'ATOM',\r\n    'Binance-Peg Cosmos Token',\r\n    'https://cosmos.network/',\r\n  ),\r\n  yfii: new Token(\r\n    MAINNET,\r\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\r\n    18,\r\n    'YFII',\r\n    'Binance-Peg YFII.finance Token',\r\n    'https://dfi.money/#/',\r\n  ),\r\n  xtz: new Token(\r\n    MAINNET,\r\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\r\n    18,\r\n    'XTZ',\r\n    'Binance-Peg Tezos Token',\r\n    'https://www.tezos.com/',\r\n  ),\r\n  bch: new Token(\r\n    MAINNET,\r\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\r\n    18,\r\n    'BCH',\r\n    'Binance-Peg Bitcoin Cash Token',\r\n    'https://bch.info/',\r\n  ),\r\n  yfi: new Token(\r\n    MAINNET,\r\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\r\n    18,\r\n    'YFI',\r\n    'Binance-Peg yearn.finance Token',\r\n    'https://yearn.finance/',\r\n  ),\r\n  uni: new Token(\r\n    MAINNET,\r\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\r\n    18,\r\n    'UNI',\r\n    'Binance-Peg Uniswap Token',\r\n    'https://uniswap.org/',\r\n  ),\r\n  fil: new Token(\r\n    MAINNET,\r\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\r\n    18,\r\n    'FIL',\r\n    'Binance-Peg Filecoin Token',\r\n    'https://filecoin.io/',\r\n  ),\r\n  bake: new Token(\r\n    MAINNET,\r\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    18,\r\n    'BAKE',\r\n    'Bakeryswap Token',\r\n    'https://www.bakeryswap.org/',\r\n  ),\r\n  burger: new Token(\r\n    MAINNET,\r\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\r\n    18,\r\n    'BURGER',\r\n    'Burgerswap Token',\r\n    'https://burgerswap.org/',\r\n  ),\r\n  bdigg: new Token(\r\n    MAINNET,\r\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\r\n    18,\r\n    'bDIGG',\r\n    'Badger Sett Digg Token',\r\n    'https://badger.finance/',\r\n  ),\r\n  bbadger: new Token(\r\n    MAINNET,\r\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\r\n    18,\r\n    'bBadger',\r\n    'Badger Sett Badger Token',\r\n    'https://badger.finance/',\r\n  ),\r\n  trade: new Token(\r\n    MAINNET,\r\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\r\n    18,\r\n    'TRADE',\r\n    'Unitrade Token',\r\n    'https://unitrade.app/',\r\n  ),\r\n  pnt: new Token(\r\n    MAINNET,\r\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\r\n    18,\r\n    'PNT',\r\n    'pNetwork Token',\r\n    'https://ptokens.io/',\r\n  ),\r\n  mir: new Token(\r\n    MAINNET,\r\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\r\n    18,\r\n    'MIR',\r\n    'Mirror Protocol Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  pbtc: new Token(\r\n    MAINNET,\r\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\r\n    18,\r\n    'pBTC',\r\n    'pTokens BTC Token',\r\n    'https://ptokens.io/',\r\n  ),\r\n  lto: new Token(\r\n    MAINNET,\r\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\r\n    18,\r\n    'LTO',\r\n    'LTO Network Token',\r\n    'https://ltonetwork.com/',\r\n  ),\r\n  pcws: new Token(\r\n    MAINNET,\r\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\r\n    18,\r\n    'pCWS',\r\n    'PolyCrowns Token',\r\n    'https://game.seascape.network/',\r\n  ),\r\n  zil: new Token(\r\n    MAINNET,\r\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\r\n    12,\r\n    'ZIL',\r\n    'Zilliqa Token',\r\n    'https://www.zilliqa.com/',\r\n  ),\r\n  lien: new Token(\r\n    MAINNET,\r\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\r\n    8,\r\n    'LIEN',\r\n    'Lien Finance Token',\r\n    'https://lien.finance/',\r\n  ),\r\n  swth: new Token(\r\n    MAINNET,\r\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\r\n    8,\r\n    'SWTH',\r\n    'Switcheo Network Token',\r\n    'https://switcheo.network/',\r\n  ),\r\n  dft: new Token(\r\n    MAINNET,\r\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\r\n    18,\r\n    'DFT',\r\n    'Dfuture Token',\r\n    'https://www.dfuture.com/home',\r\n  ),\r\n  gum: new Token(\r\n    MAINNET,\r\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\r\n    18,\r\n    'GUM',\r\n    'GourmetGalaxy Token',\r\n    'https://gourmetgalaxy.io/',\r\n  ),\r\n  dego: new Token(\r\n    MAINNET,\r\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\r\n    18,\r\n    'DEGO',\r\n    'Dego Finance Token',\r\n    'https://bsc.dego.finance/home',\r\n  ),\r\n  nrv: new Token(\r\n    MAINNET,\r\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\r\n    18,\r\n    'NRV',\r\n    'Nerve Finance Token',\r\n    'https://nerve.fi/',\r\n  ),\r\n  easy: new Token(\r\n    MAINNET,\r\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\r\n    18,\r\n    'EASY',\r\n    'EASY Token',\r\n    'https://easyfi.network/',\r\n  ),\r\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\r\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\r\n  apys: new Token(\r\n    MAINNET,\r\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\r\n    18,\r\n    'APYS',\r\n    'APY Swap Token',\r\n    'https://apyswap.com/',\r\n  ),\r\n  bondly: new Token(\r\n    MAINNET,\r\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\r\n    18,\r\n    'BONDLY',\r\n    'Bondly Token',\r\n    'https://www.bondly.finance/',\r\n  ),\r\n  tko: new Token(\r\n    MAINNET,\r\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\r\n    18,\r\n    'TKO',\r\n    'Tokocrypto Token',\r\n    'https://www.tokocrypto.com/',\r\n  ),\r\n  itam: new Token(\r\n    MAINNET,\r\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\r\n    18,\r\n    'ITAM',\r\n    'Itam Network Token',\r\n    'https://itam.network/',\r\n  ),\r\n  arpa: new Token(\r\n    MAINNET,\r\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\r\n    18,\r\n    'ARPA',\r\n    'Arpachain Token',\r\n    'https://arpachain.io/',\r\n  ),\r\n  eps: new Token(\r\n    MAINNET,\r\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\r\n    18,\r\n    'EPS',\r\n    'Ellipsis Finance Token',\r\n    'https://ellipsis.finance/',\r\n  ),\r\n  jgn: new Token(\r\n    MAINNET,\r\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\r\n    18,\r\n    'JGN',\r\n    'Juggernaut DeFi Token',\r\n    'https://jgndefi.com/',\r\n  ),\r\n  tlm: new Token(\r\n    MAINNET,\r\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\r\n    4,\r\n    'TLM',\r\n    'Alien Worlds Trilium Token',\r\n    'https://alienworlds.io/',\r\n  ),\r\n  perl: new Token(\r\n    MAINNET,\r\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\r\n    18,\r\n    'PERL',\r\n    'Perlin',\r\n    'https://perlinx.finance/',\r\n  ),\r\n  alpa: new Token(\r\n    MAINNET,\r\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\r\n    18,\r\n    'ALPA',\r\n    'AlpaToken',\r\n    'https://bsc.alpaca.city/',\r\n  ),\r\n  hzn: new Token(\r\n    MAINNET,\r\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\r\n    18,\r\n    'HZN',\r\n    'Horizon Protocol Token',\r\n    'https://horizonprotocol.com/',\r\n  ),\r\n  suter: new Token(\r\n    MAINNET,\r\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\r\n    18,\r\n    'SUTER',\r\n    'Suterusu Token',\r\n    'https://shield.suterusu.io/',\r\n  ),\r\n  cgg: new Token(\r\n    MAINNET,\r\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\r\n    18,\r\n    'CGG',\r\n    'pTokens CGG Token',\r\n    'https://chainguardians.io/',\r\n  ),\r\n  mix: new Token(\r\n    MAINNET,\r\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\r\n    18,\r\n    'MIX',\r\n    'Mix Token',\r\n    'https://mixie.chainguardians.io/',\r\n  ),\r\n  hakka: new Token(\r\n    MAINNET,\r\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\r\n    18,\r\n    'HAKKA',\r\n    'Hakka Token',\r\n    'https://hakka.finance/',\r\n  ),\r\n  xed: new Token(\r\n    MAINNET,\r\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\r\n    18,\r\n    'XED',\r\n    'Exeedme Token',\r\n    'https://www.exeedme.com/',\r\n  ),\r\n  τbtc: new Token(\r\n    MAINNET,\r\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\r\n    9,\r\n    'τBTC',\r\n    'τBitcoin Token',\r\n    'https://www.btcst.finance/',\r\n  ),\r\n  alpaca: new Token(\r\n    MAINNET,\r\n    '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\r\n    18,\r\n    'ALPACA',\r\n    'AlpacaToken',\r\n    'https://www.alpacafinance.org/',\r\n  ),\r\n  dfd: new Token(\r\n    MAINNET,\r\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\r\n    18,\r\n    'DFD',\r\n    'DefiDollar DAO',\r\n    'https://dusd.finance/',\r\n  ),\r\n  lmt: new Token(\r\n    MAINNET,\r\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\r\n    18,\r\n    'LMT',\r\n    'Lympo Market Token',\r\n    'https://lympo.io/lmt/',\r\n  ),\r\n  btt: new Token(\r\n    MAINNET,\r\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\r\n    18,\r\n    'BTT',\r\n    'Binance-Peg BitTorrent Token',\r\n    'https://www.bittorrent.com/',\r\n  ),\r\n  trx: new Token(\r\n    MAINNET,\r\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\r\n    18,\r\n    'TRX',\r\n    'TRON Token',\r\n    'https://tron.network/',\r\n  ),\r\n  win: new Token(\r\n    MAINNET,\r\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\r\n    18,\r\n    'WIN',\r\n    'WIN Token',\r\n    'https://winklink.org/',\r\n  ),\r\n  mcoin: new Token(\r\n    MAINNET,\r\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\r\n    18,\r\n    'MCOIN',\r\n    'Wrapped Mirror COIN Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  math: new Token(\r\n    MAINNET,\r\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\r\n    18,\r\n    'MATH',\r\n    'MATH Token',\r\n    'https://mathwallet.org/',\r\n  ),\r\n  kun: new Token(\r\n    MAINNET,\r\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\r\n    18,\r\n    'KUN',\r\n    'QIAN governance token',\r\n    'https://chemix.io/home',\r\n  ),\r\n  qsd: new Token(\r\n    MAINNET,\r\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\r\n    18,\r\n    'QSD',\r\n    'QIAN second generation dollar',\r\n    'https://chemix.io/home',\r\n  ),\r\n  hyfi: new Token(\r\n    MAINNET,\r\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\r\n    18,\r\n    'HYFI',\r\n    'HYFI Token',\r\n    'https://hyfi.pro/#/',\r\n  ),\r\n  oin: new Token(\r\n    MAINNET,\r\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\r\n    8,\r\n    'OIN',\r\n    'oinfinance Token',\r\n    'https://oin.finance/',\r\n  ),\r\n  doge: new Token(\r\n    MAINNET,\r\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\r\n    8,\r\n    'DOGE',\r\n    'Binance-Peg Dogecoin',\r\n    'https://dogecoin.com/',\r\n  ),\r\n  fine: new Token(\r\n    MAINNET,\r\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\r\n    18,\r\n    'FINE',\r\n    'Refinable Token',\r\n    'https://refinable.com/',\r\n  ),\r\n  one: new Token(\r\n    MAINNET,\r\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\r\n    18,\r\n    'ONE',\r\n    'BigONE Token',\r\n    'https://www.bigone.com/',\r\n  ),\r\n  pmon: new Token(\r\n    MAINNET,\r\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\r\n    18,\r\n    'PMON',\r\n    'Polkamon Token',\r\n    'https://polkamon.com/',\r\n  ),\r\n  τdoge: new Token(\r\n    MAINNET,\r\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\r\n    8,\r\n    'τDOGE',\r\n    'τDogecoin',\r\n    'https://www.btcst.finance/',\r\n  ),\r\n  btr: new Token(\r\n    MAINNET,\r\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\r\n    18,\r\n    'BTR',\r\n    'Bitrue Token',\r\n    'https://www.bitrue.com/',\r\n  ),\r\n  ubxt: new Token(\r\n    MAINNET,\r\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\r\n    18,\r\n    'UBXT',\r\n    'UpBots Token',\r\n    'https://upbots.com/',\r\n  ),\r\n  wmass: new Token(\r\n    MAINNET,\r\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\r\n    8,\r\n    'WMASS',\r\n    'Wrapped MASS Token',\r\n    'https://massnet.org/en/',\r\n  ),\r\n  rfox: new Token(\r\n    MAINNET,\r\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\r\n    18,\r\n    'RFOX',\r\n    'RFOX Token',\r\n    'https://www.redfoxlabs.io/',\r\n  ),\r\n  xend: new Token(\r\n    MAINNET,\r\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\r\n    18,\r\n    'XEND',\r\n    'XEND Token',\r\n    'https://xend.finance/',\r\n  ),\r\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\r\n  chr: new Token(\r\n    MAINNET,\r\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\r\n    6,\r\n    'CHR',\r\n    'Chroma Token',\r\n    'https://chromia.com/',\r\n  ),\r\n  deri: new Token(\r\n    MAINNET,\r\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n    18,\r\n    'DERI',\r\n    'Deri Token',\r\n    'https://deri.finance/#/index',\r\n  ),\r\n  well: new Token(\r\n    MAINNET,\r\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\r\n    18,\r\n    'WELL',\r\n    'BitWell Token',\r\n    'https://www.bitwellex.com/',\r\n  ),\r\n  wex: new Token(\r\n    MAINNET,\r\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\r\n    18,\r\n    'WEX',\r\n    'WaultSwap Token',\r\n    'https://wault.finance/',\r\n  ),\r\n  waultx: new Token(\r\n    MAINNET,\r\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\r\n    18,\r\n    'WAULTx',\r\n    'Wault Token',\r\n    'https://wault.finance/',\r\n  ),\r\n  popen: new Token(\r\n    MAINNET,\r\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\r\n    18,\r\n    'pOPEN',\r\n    'OPEN Governance Token',\r\n    'https://opendao.io/',\r\n  ),\r\n  ez: new Token(\r\n    MAINNET,\r\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\r\n    18,\r\n    'EZ',\r\n    'Easy V2 Token',\r\n    'https://easyfi.network/',\r\n  ),\r\n  vrt: new Token(\r\n    MAINNET,\r\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\r\n    18,\r\n    'VRT',\r\n    'Venus Reward Token',\r\n    'https://venus.io/',\r\n  ),\r\n  tusd: new Token(\r\n    MAINNET,\r\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\r\n    18,\r\n    'TUSD',\r\n    'Binance-Peg TrueUSD Token',\r\n    'https://www.trueusd.com/',\r\n  ),\r\n  mtrg: new Token(\r\n    MAINNET,\r\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\r\n    18,\r\n    'MTRG',\r\n    'Wrapped MTRG Token',\r\n    'https://www.meter.io/',\r\n  ),\r\n  ktn: new Token(\r\n    MAINNET,\r\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\r\n    18,\r\n    'KTN',\r\n    'Kattana Token',\r\n    'https://kattana.io/',\r\n  ),\r\n  qkc: new Token(\r\n    MAINNET,\r\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\r\n    18,\r\n    'QKC',\r\n    'QuarkChain Token',\r\n    'https://quarkchain.io/',\r\n  ),\r\n  bcfx: new Token(\r\n    MAINNET,\r\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\r\n    18,\r\n    'bCFX',\r\n    'BSC Conflux Token',\r\n    'https://www.confluxnetwork.org/',\r\n  ),\r\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\r\n  ata: new Token(\r\n    MAINNET,\r\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\r\n    18,\r\n    'ATA',\r\n    'Automata Token',\r\n    'https://www.ata.network/',\r\n  ),\r\n  mbox: new Token(\r\n    MAINNET,\r\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\r\n    18,\r\n    'MBOX',\r\n    'Mobox Token',\r\n    'https://www.mobox.io/#/',\r\n  ),\r\n  boring: new Token(\r\n    MAINNET,\r\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\r\n    18,\r\n    'BORING',\r\n    'BoringDAO Token',\r\n    'https://www.boringdao.com/',\r\n  ),\r\n  marsh: new Token(\r\n    MAINNET,\r\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\r\n    18,\r\n    'MARSH',\r\n    'Unmarshal Token',\r\n    'https://unmarshal.io/',\r\n  ),\r\n  ampl: new Token(\r\n    MAINNET,\r\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\r\n    9,\r\n    'AMPL',\r\n    'AMPL Token',\r\n    'https://www.ampleforth.org/',\r\n  ),\r\n  o3: new Token(\r\n    MAINNET,\r\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\r\n    18,\r\n    'O3',\r\n    'O3 Swap Token',\r\n    'https://o3swap.com/',\r\n  ),\r\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\r\n  htb: new Token(\r\n    MAINNET,\r\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\r\n    18,\r\n    'HTB',\r\n    'Hotbit Token',\r\n    'https://www.hotbit.io/',\r\n  ),\r\n  woo: new Token(\r\n    MAINNET,\r\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\r\n    18,\r\n    'WOO',\r\n    'Wootrade Network Token',\r\n    'https://woo.network/',\r\n  ),\r\n  $dg: new Token(\r\n    MAINNET,\r\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\r\n    18,\r\n    '$DG',\r\n    'Decentral Games Token',\r\n    'https://decentral.games/',\r\n  ),\r\n  safemoon: new Token(\r\n    MAINNET,\r\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\r\n    9,\r\n    'SAFEMOON',\r\n    'Safemoon Token',\r\n    'https://safemoon.net/',\r\n  ),\r\n  axs: new Token(\r\n    MAINNET,\r\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\r\n    18,\r\n    'AXS',\r\n    'Binance-Pegged Axie Infinity Shard',\r\n    'https://axieinfinity.com/',\r\n  ),\r\n  c98: new Token(\r\n    MAINNET,\r\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\r\n    18,\r\n    'c98',\r\n    'Coin98 Token',\r\n    'https://coin98.com/',\r\n  ),\r\n  pots: new Token(\r\n    MAINNET,\r\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\r\n    18,\r\n    'POTS',\r\n    'Moonpot Token',\r\n    'https://moonpot.com/',\r\n  ),\r\n  gnt: new Token(\r\n    MAINNET,\r\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\r\n    18,\r\n    'GNT',\r\n    'GreenTrust Token',\r\n    'https://www.greentrusttoken.com/',\r\n  ),\r\n  rusd: new Token(\r\n    MAINNET,\r\n    '0x07663837218A003e66310a01596af4bf4e44623D',\r\n    18,\r\n    'rUSD',\r\n    'rUSD Token',\r\n    'https://appv2.rampdefi.com/#/',\r\n  ),\r\n  bp: new Token(\r\n    MAINNET,\r\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\r\n    18,\r\n    'BP',\r\n    'BunnyPark Token',\r\n    'https://www.bunnypark.com/',\r\n  ),\r\n  sfund: new Token(\r\n    MAINNET,\r\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\r\n    18,\r\n    'SFUND',\r\n    'Seedify Fund Token',\r\n    'https://seedify.fund/',\r\n  ),\r\n  naos: new Token(\r\n    MAINNET,\r\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\r\n    18,\r\n    'NAOS',\r\n    'NAOSToken',\r\n    'https://naos.finance/',\r\n  ),\r\n  cart: new Token(\r\n    MAINNET,\r\n    '0x5C8C8D560048F34E5f7f8ad71f2f81a89DBd273e',\r\n    18,\r\n    'CART',\r\n    'CryptoArt.ai',\r\n    'https://cryptoart.ai/',\r\n  ),\r\n  light: new Token(\r\n    MAINNET,\r\n    '0x037838b556d9c9d654148a284682C55bB5f56eF4',\r\n    18,\r\n    'LIGHT',\r\n    'Lightning',\r\n    'https://lightningprotocol.finance/',\r\n  ),\r\n  rpg: new Token(\r\n    MAINNET,\r\n    '0xc2098a8938119A52B1F7661893c0153A6CB116d5',\r\n    18,\r\n    'RPG',\r\n    'Rangers Protocol',\r\n    'https://www.rangersprotocol.com/',\r\n  ),\r\n  mcb: new Token(\r\n    MAINNET,\r\n    '0x5fE80d2CD054645b9419657d3d10d26391780A7B',\r\n    18,\r\n    'MCB',\r\n    'MCDEX',\r\n    'https://mcdex.io/homepage/',\r\n  ),\r\n  lazio: new Token(\r\n    MAINNET,\r\n    '0x77d547256A2cD95F32F67aE0313E450Ac200648d',\r\n    8,\r\n    'LAZIO',\r\n    'FC Lazio Fan Token',\r\n    'https://launchpad.binance.com/en/subscription/LAZIO_BNB',\r\n  ),\r\n  arv: new Token(MAINNET, '0x6679eB24F59dFe111864AEc72B443d1Da666B360', 8, 'ARV', 'ARIVA', 'https://ariva.digital'),\r\n  moni: new Token(\r\n    MAINNET,\r\n    '0x9573c88aE3e37508f87649f87c4dd5373C9F31e0',\r\n    18,\r\n    'MONI',\r\n    'Monsta Infinite',\r\n    'https://monstainfinite.com/',\r\n  ),\r\n  xms: new Token(\r\n    MAINNET,\r\n    '0x7859B01BbF675d67Da8cD128a50D155cd881B576',\r\n    18,\r\n    'XMS',\r\n    'Mars Ecosystem',\r\n    'https://marsecosystem.com/',\r\n  ),\r\n  zoo: new Token(\r\n    MAINNET,\r\n    '0x1D229B958D5DDFca92146585a8711aECbE56F095',\r\n    18,\r\n    'ZOO',\r\n    'ZOO Crypto World',\r\n    'https://zoogame.finance/',\r\n  ),\r\n  fina: new Token(\r\n    MAINNET,\r\n    '0x426c72701833fdDBdFc06c944737C6031645c708',\r\n    18,\r\n    'FINA',\r\n    'Defina Finance',\r\n    'https://defina.finance/',\r\n  ),\r\n  dar: new Token(\r\n    MAINNET,\r\n    '0x23CE9e926048273eF83be0A3A8Ba9Cb6D45cd978',\r\n    6,\r\n    'DAR',\r\n    'Mines of Dalarnia',\r\n    'https://www.minesofdalarnia.com/',\r\n  ),\r\n  xwg: new Token(\r\n    MAINNET,\r\n    '0x6b23C89196DeB721e6Fd9726E6C76E4810a464bc',\r\n    18,\r\n    'XWG',\r\n    'X World Games',\r\n    'https://xwg.games/',\r\n  ),\r\n  eternal: new Token(\r\n    MAINNET,\r\n    '0xD44FD09d74cd13838F137B590497595d6b3FEeA4',\r\n    18,\r\n    'ETERNAL',\r\n    'CryptoMines Eternal',\r\n    'https://cryptomines.app/',\r\n  ),\r\n  porto: new Token(\r\n    MAINNET,\r\n    '0x49f2145d6366099e13B10FbF80646C0F377eE7f6',\r\n    8,\r\n    'PORTO',\r\n    'FC Porto Fan Token',\r\n    'https://launchpad.binance.com/en/subscription/PORTO_BNB',\r\n  ),\r\n  kart: new Token(\r\n    MAINNET,\r\n    '0x8BDd8DBcBDf0C066cA5f3286d33673aA7A553C10',\r\n    18,\r\n    'KART',\r\n    'Dragon Kart',\r\n    'https://dragonkart.com/',\r\n  ),\r\n  qi: new Token(MAINNET, '0x8729438EB15e2C8B576fCc6AeCdA6A148776C0F5', 18, 'QI', 'BENQI', 'https://benqi.fi/'),\r\n  sheesha: new Token(\r\n    MAINNET,\r\n    '0x232FB065D9d24c34708eeDbF03724f2e95ABE768',\r\n    18,\r\n    'SHEESHA',\r\n    'Sheesha Finance',\r\n    'https://www.sheeshafinance.io/',\r\n  ),\r\n  bcoin: new Token(\r\n    MAINNET,\r\n    '0x00e1656e45f18ec6747F5a8496Fd39B50b38396D',\r\n    18,\r\n    'BCOIN',\r\n    'Bomb Crypto',\r\n    'https://bombcrypto.io/',\r\n  ),\r\n  quidd: new Token(\r\n    MAINNET,\r\n    '0x7961Ade0a767c0E5B67Dd1a1F78ba44F727642Ed',\r\n    18,\r\n    'QUIDD',\r\n    'Quidd Token',\r\n    'https://www.quiddtoken.com/',\r\n  ),\r\n}\r\n\r\nexport const testnetTokens = {\r\n  wbnb: new Token(\r\n    TESTNET,\r\n    '0x094616F0BdFB0b526bD735Bf66Eca0Ad254ca81F',\r\n    18,\r\n    'WBNB',\r\n    'Wrapped BNB',\r\n    'https://www.binance.com/',\r\n  ),\r\n  zlt: new Token(\r\n    TESTNET,\r\n    '0x05d8762946fa7620b263e1e77003927addf5f7e6',\r\n    18,\r\n    'ZLT',\r\n    'Zero Loss',\r\n    'https://app.zeroloss.org/',\r\n  ),\r\n  cake: new Token(\r\n    TESTNET,\r\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    18,\r\n    'CAKE',\r\n    'PancakeSwap Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  busd: new Token(\r\n    TESTNET,\r\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\r\n    18,\r\n    'BUSD',\r\n    'Binance USD',\r\n    'https://www.paxos.com/busd/',\r\n  ),\r\n  syrup: new Token(\r\n    TESTNET,\r\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\r\n    18,\r\n    'SYRUP',\r\n    'SyrupBar Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  bake: new Token(\r\n    TESTNET,\r\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    18,\r\n    'BAKE',\r\n    'Bakeryswap Token',\r\n    'https://www.bakeryswap.org/',\r\n  ),\r\n}\r\n\r\nconst tokens = (): TokenList => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n\r\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\r\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\r\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\r\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\r\n    }, {})\r\n  }\r\n\r\n  return mainnetTokens\r\n}\r\n\r\nexport const serializeTokens = (): SerializedTokenList => {\r\n  const unserializedTokens = tokens()\r\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\r\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\r\n  }, {})\r\n\r\n  return serializedTokens\r\n}\r\n\r\nexport default tokens()\r\n","export default {\r\n  masterChef: {\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n/*    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E', */\r\n    56: '0x4817444E6162a3BA10b6E42D9ac85F857b3c49b9',\r\n  },\r\n  sousChef: {\r\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n/*    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95', */\r\n    56: '0x4817444E6162a3BA10b6E42D9ac85F857b3c49b9',\r\n  },\r\n  lotteryV2: {\r\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\r\n    // 56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n    56: '0x4817444E6162a3BA10b6E42D9ac85F857b3c49b9',\r\n  },\r\n  multiCall: {\r\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\r\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\r\n  },\r\n  pancakeProfile: {\r\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\r\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\r\n  },\r\n  pancakeRabbits: {\r\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n  },\r\n  bunnyFactory: {\r\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\r\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\r\n  },\r\n  claimRefund: {\r\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\r\n    97: '',\r\n  },\r\n  pointCenterIfo: {\r\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\r\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\r\n  },\r\n  bunnySpecial: {\r\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\r\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\r\n  },\r\n  tradingCompetition: {\r\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\r\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\r\n  },\r\n  easterNft: {\r\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\r\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\r\n  },\r\n  cakeVault: {\r\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\r\n    97: '',\r\n  },\r\n  predictions: {\r\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\r\n    97: '',\r\n  },\r\n  chainlinkOracle: {\r\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\r\n    97: '',\r\n  },\r\n  bunnySpecialCakeVault: {\r\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\r\n    97: '',\r\n  },\r\n  bunnySpecialPrediction: {\r\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\r\n    97: '',\r\n  },\r\n  bunnySpecialLottery: {\r\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\r\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\r\n  },\r\n  farmAuction: {\r\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\r\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\r\n  },\r\n  AnniversaryAchievement: {\r\n    56: '0x787980da5491118C3cB33B21aB50c8c379D2C552',\r\n    97: '0x981aE96378e770DE44F89cD9175E708f9EDB70a9',\r\n  },\r\n  nftMarket: {\r\n    56: '0x17539cCa21C7933Df5c980172d22659B8C345C5A',\r\n    97: '0x7f9f37ddcaa33893f9beb3d8748c8d6bfbde6ab2',\r\n  },\r\n  nftSale: {\r\n    56: '0x29fE7148636b7Ae0b1E53777b28dfbaA9327af8E',\r\n    97: '0xe486De509c5381cbdBF3e71F57D7F1f7570f5c46',\r\n  },\r\n  pancakeSquad: {\r\n    56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\r\n    97: '0xfC0c3F11fDA72Cb9A56F28Ec8D44C0ae4B3ABF86',\r\n  },\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport addresses from 'config/constants/contracts'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\r\n}\r\n\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.multiCall)\r\n}\r\nexport const getLotteryV2Address = () => {\r\n  return getAddress(addresses.lotteryV2)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\nexport const getTradingCompetitionAddress = () => {\r\n  return getAddress(addresses.tradingCompetition)\r\n}\r\nexport const getEasterNftAddress = () => {\r\n  return getAddress(addresses.easterNft)\r\n}\r\nexport const getCakeVaultAddress = () => {\r\n  return getAddress(addresses.cakeVault)\r\n}\r\nexport const getPredictionsAddress = () => {\r\n  return getAddress(addresses.predictions)\r\n}\r\nexport const getChainlinkOracleAddress = () => {\r\n  return getAddress(addresses.chainlinkOracle)\r\n}\r\nexport const getBunnySpecialCakeVaultAddress = () => {\r\n  return getAddress(addresses.bunnySpecialCakeVault)\r\n}\r\nexport const getBunnySpecialPredictionAddress = () => {\r\n  return getAddress(addresses.bunnySpecialPrediction)\r\n}\r\nexport const getBunnySpecialLotteryAddress = () => {\r\n  return getAddress(addresses.bunnySpecialLottery)\r\n}\r\nexport const getFarmAuctionAddress = () => {\r\n  return getAddress(addresses.farmAuction)\r\n}\r\nexport const getAnniversaryAchievement = () => {\r\n  return getAddress(addresses.AnniversaryAchievement)\r\n}\r\nexport const getNftMarketAddress = () => {\r\n  return getAddress(addresses.nftMarket)\r\n}\r\nexport const getNftSaleAddress = () => {\r\n  return getAddress(addresses.nftSale)\r\n}\r\nexport const getPancakeSquadAddress = () => {\r\n  return getAddress(addresses.pancakeSquad)\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\r\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport { BASE_BSC_SCAN_URLS } from '../config'\r\nimport { TokenAddressMap } from '../state/lists/hooks'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport function getBscScanLink(\r\n  data: string | number,\r\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\r\n  chainId: ChainId = ChainId.MAINNET,\r\n): string {\r\n  switch (type) {\r\n    case 'transaction': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\r\n    }\r\n    case 'token': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\r\n    }\r\n    case 'block': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\r\n    }\r\n    case 'countdown': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\r\n    }\r\n    default: {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\r\n    }\r\n  }\r\n}\r\n\r\nexport function getBscScanLinkForNft(\r\n  collectionAddress: string,\r\n  tokenId: string,\r\n  chainId: ChainId = ChainId.MAINNET,\r\n): string {\r\n  return `${BASE_BSC_SCAN_URLS[chainId]}/token/${collectionAddress}?a=${tokenId}`\r\n}\r\n\r\n// add 10%\r\nexport function calculateGasMargin(value: BigNumber): BigNumber {\r\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\r\n}\r\n\r\n// converts a basis points value to a sdk percent\r\nexport function basisPointsToPercent(num: number): Percent {\r\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\r\n}\r\n\r\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\r\n  if (slippage < 0 || slippage > 10000) {\r\n    throw Error(`Unexpected slippage value: ${slippage}`)\r\n  }\r\n  return [\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\r\n  ]\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n\r\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\r\n}\r\n\r\n// account is optional\r\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\r\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n}\r\n\r\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\r\n  if (currency === ETHER) return true\r\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import { ThunkAction } from 'redux-thunk'\r\nimport { AnyAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport {\r\n  CampaignType,\r\n  SerializedFarmConfig,\r\n  LotteryStatus,\r\n  LotteryTicket,\r\n  DeserializedPoolConfig,\r\n  SerializedPoolConfig,\r\n  Team,\r\n  TranslatableText,\r\n  DeserializedFarmConfig,\r\n} from 'config/constants/types'\r\nimport { NftToken, State as NftMarketState } from './nftMarket/types'\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\r\n\r\nexport interface BigNumberToJson {\r\n  type: 'BigNumber'\r\n  hex: string\r\n}\r\n\r\nexport type SerializedBigNumber = string\r\n\r\ninterface SerializedFarmUserData {\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n  canHarvest: boolean\r\n  lastDepositTime: string\r\n}\r\n\r\nexport interface DeserializedFarmUserData {\r\n  allowance: BigNumber\r\n  tokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  earnings: BigNumber\r\n  canHarvest: boolean\r\n  lastDepositTime: BigNumber\r\n}\r\n\r\nexport interface SerializedFarm extends SerializedFarmConfig {\r\n  tokenPriceBusd?: string\r\n  quoteTokenPriceBusd?: string\r\n  tokenAmountTotal?: SerializedBigNumber\r\n  lpTotalInQuoteToken?: SerializedBigNumber\r\n  lpTotalSupply?: SerializedBigNumber\r\n  tokenPriceVsQuote?: SerializedBigNumber\r\n  poolWeight?: SerializedBigNumber\r\n  lpTokenValue?: SerializedBigNumber\r\n  userData?: SerializedFarmUserData\r\n  tokenPerBlock?: SerializedBigNumber\r\n  withdrawLockPeriod?: SerializedBigNumber\r\n}\r\n\r\nexport interface DeserializedFarm extends DeserializedFarmConfig {\r\n  tokenPriceBusd?: string\r\n  quoteTokenPriceBusd?: string\r\n  tokenAmountTotal?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  lpTotalSupply?: BigNumber\r\n  lpTokenValue?: BigNumber\r\n  tokenPriceVsQuote?: BigNumber\r\n  poolWeight?: BigNumber\r\n  userData?: DeserializedFarmUserData\r\n  tokenPerBlock?: BigNumber\r\n  withdrawLockPeriod?: BigNumber\r\n}\r\n\r\ninterface CorePoolProps {\r\n  startBlock?: number\r\n  endBlock?: number\r\n  apr?: number\r\n  stakingTokenPrice?: number\r\n  earningTokenPrice?: number\r\n  isAutoVault?: boolean\r\n}\r\n\r\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\r\n  totalStaked?: BigNumber\r\n  stakingLimit?: BigNumber\r\n  userData?: {\r\n    allowance: BigNumber\r\n    stakingTokenBalance: BigNumber\r\n    stakedBalance: BigNumber\r\n    pendingReward: BigNumber\r\n    lastDepositTime: BigNumber\r\n    canHarvest: boolean\r\n  }\r\n}\r\n\r\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\r\n  totalStaked?: SerializedBigNumber\r\n  stakingLimit?: SerializedBigNumber\r\n  userData?: {\r\n    allowance: SerializedBigNumber\r\n    stakingTokenBalance: SerializedBigNumber\r\n    stakedBalance: SerializedBigNumber\r\n    pendingReward: SerializedBigNumber\r\n    lastDepositTime: SerializedBigNumber\r\n    canHarvest: boolean\r\n  }\r\n}\r\n\r\nexport interface Profile {\r\n  userId: number\r\n  points: number\r\n  teamId: number\r\n  collectionAddress: string\r\n  tokenId: number\r\n  isActive: boolean\r\n  username: string\r\n  nft?: NftToken\r\n  team: Team\r\n  hasRegistered: boolean\r\n}\r\n\r\n// Slices states\r\n\r\nexport interface SerializedFarmsState {\r\n  data: SerializedFarm[]\r\n  loadArchivedFarmsData: boolean\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface DeserializedFarmsState {\r\n  data: DeserializedFarm[]\r\n  loadArchivedFarmsData: boolean\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface VaultFees {\r\n  performanceFee: number\r\n  callFee: number\r\n  withdrawalFee: number\r\n  withdrawalFeePeriod: number\r\n}\r\n\r\nexport interface VaultUser {\r\n  isLoading: boolean\r\n  userShares: string\r\n  cakeAtLastUserAction: string\r\n  lastDepositedTime: string\r\n  lastUserActionTime: string\r\n}\r\nexport interface CakeVault {\r\n  totalShares?: string\r\n  pricePerFullShare?: string\r\n  totalCakeInVault?: string\r\n  estimatedCakeBountyReward?: string\r\n  totalPendingCakeHarvest?: string\r\n  fees?: VaultFees\r\n  userData?: VaultUser\r\n}\r\n\r\nexport interface PoolsState {\r\n  data: SerializedPool[]\r\n  cakeVault: CakeVault\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport enum ProfileAvatarFetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  FETCHING = 'fetching',\r\n  FETCHED = 'fetched',\r\n}\r\n\r\nexport interface ProfileState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  hasRegistered: boolean\r\n  data: Profile\r\n  profileAvatars: {\r\n    [key: string]: {\r\n      username: string\r\n      nft: NftToken\r\n      hasRegistered: boolean\r\n      usernameFetchStatus: ProfileAvatarFetchStatus\r\n      avatarFetchStatus: ProfileAvatarFetchStatus\r\n    }\r\n  }\r\n}\r\n\r\nexport type TeamResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: boolean\r\n}\r\n\r\nexport type TeamsById = {\r\n  [key: string]: Team\r\n}\r\n\r\nexport interface TeamsState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: TeamsById\r\n}\r\n\r\nexport interface Achievement {\r\n  id: string\r\n  type: CampaignType\r\n  address: string\r\n  title: TranslatableText\r\n  description?: TranslatableText\r\n  badge: string\r\n  points: number\r\n}\r\n\r\nexport enum AchievementFetchStatus {\r\n  ERROR = 'error',\r\n  NOT_FETCHED = 'not-fetched',\r\n  FETCHING = 'fetching',\r\n  FETCHED = 'fetched',\r\n}\r\n\r\nexport interface AchievementState {\r\n  achievements: Achievement[]\r\n  achievementFetchStatus: AchievementFetchStatus\r\n}\r\n\r\n// Block\r\n\r\nexport interface BlockState {\r\n  currentBlock: number\r\n  initialBlock: number\r\n}\r\n\r\n// Predictions\r\n\r\nexport enum BetPosition {\r\n  BULL = 'Bull',\r\n  BEAR = 'Bear',\r\n  HOUSE = 'House',\r\n}\r\n\r\nexport enum PredictionStatus {\r\n  INITIAL = 'initial',\r\n  LIVE = 'live',\r\n  PAUSED = 'paused',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface Round {\r\n  id: string\r\n  epoch: number\r\n  position: BetPosition\r\n  failed: boolean\r\n  startAt: number\r\n  startBlock: number\r\n  startHash: string\r\n  lockAt: number\r\n  lockBlock: number\r\n  lockHash: string\r\n  lockPrice: number\r\n  lockRoundId: string\r\n  closeAt: number\r\n  closeBlock: number\r\n  closeHash: string\r\n  closePrice: number\r\n  closeRoundId: string\r\n  totalBets: number\r\n  totalAmount: number\r\n  bullBets: number\r\n  bullAmount: number\r\n  bearBets: number\r\n  bearAmount: number\r\n  bets?: Bet[]\r\n}\r\n\r\nexport interface Market {\r\n  paused: boolean\r\n  epoch: number\r\n}\r\n\r\nexport interface Bet {\r\n  id?: string\r\n  hash?: string\r\n  amount: number\r\n  position: BetPosition\r\n  claimed: boolean\r\n  claimedAt: number\r\n  claimedBlock: number\r\n  claimedHash: string\r\n  claimedBNB: number\r\n  claimedNetBNB: number\r\n  createdAt: number\r\n  updatedAt: number\r\n  user?: PredictionUser\r\n  round?: Round\r\n}\r\n\r\nexport interface PredictionUser {\r\n  id: string\r\n  createdAt: number\r\n  updatedAt: number\r\n  block: number\r\n  totalBets: number\r\n  totalBetsBull: number\r\n  totalBetsBear: number\r\n  totalBNB: number\r\n  totalBNBBull: number\r\n  totalBNBBear: number\r\n  totalBetsClaimed: number\r\n  totalBNBClaimed: number\r\n  winRate: number\r\n  averageBNB: number\r\n  netBNB: number\r\n  bets?: Bet[]\r\n}\r\n\r\nexport enum HistoryFilter {\r\n  ALL = 'all',\r\n  COLLECTED = 'collected',\r\n  UNCOLLECTED = 'uncollected',\r\n}\r\n\r\nexport interface LedgerData {\r\n  [key: string]: {\r\n    [key: string]: ReduxNodeLedger\r\n  }\r\n}\r\n\r\nexport interface RoundData {\r\n  [key: string]: ReduxNodeRound\r\n}\r\n\r\nexport interface ReduxNodeLedger {\r\n  position: BetPosition\r\n  amount: BigNumberToJson\r\n  claimed: boolean\r\n}\r\n\r\nexport interface NodeLedger {\r\n  position: BetPosition\r\n  amount: ethers.BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface ReduxNodeRound {\r\n  epoch: number\r\n  startTimestamp: number | null\r\n  lockTimestamp: number | null\r\n  closeTimestamp: number | null\r\n  lockPrice: BigNumberToJson | null\r\n  closePrice: BigNumberToJson | null\r\n  totalAmount: BigNumberToJson\r\n  bullAmount: BigNumberToJson\r\n  bearAmount: BigNumberToJson\r\n  rewardBaseCalAmount: BigNumberToJson\r\n  rewardAmount: BigNumberToJson\r\n  oracleCalled: boolean\r\n  lockOracleId: string\r\n  closeOracleId: string\r\n}\r\n\r\nexport interface NodeRound {\r\n  epoch: number\r\n  startTimestamp: number | null\r\n  lockTimestamp: number | null\r\n  closeTimestamp: number | null\r\n  lockPrice: ethers.BigNumber | null\r\n  closePrice: ethers.BigNumber | null\r\n  totalAmount: ethers.BigNumber\r\n  bullAmount: ethers.BigNumber\r\n  bearAmount: ethers.BigNumber\r\n  rewardBaseCalAmount: ethers.BigNumber\r\n  rewardAmount: ethers.BigNumber\r\n  oracleCalled: boolean\r\n  closeOracleId: string\r\n  lockOracleId: string\r\n}\r\n\r\nexport enum LeaderboardLoadingState {\r\n  INITIAL,\r\n  LOADING,\r\n  IDLE,\r\n}\r\n\r\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\r\n\r\nexport interface LeaderboardFilter {\r\n  address?: string\r\n  orderBy?: string\r\n  timePeriod?: LeaderboardFilterTimePeriod\r\n}\r\n\r\nexport interface PredictionsState {\r\n  status: PredictionStatus\r\n  isLoading: boolean\r\n  isHistoryPaneOpen: boolean\r\n  isChartPaneOpen: boolean\r\n  isFetchingHistory: boolean\r\n  historyFilter: HistoryFilter\r\n  currentEpoch: number\r\n  intervalSeconds: number\r\n  minBetAmount: string\r\n  bufferSeconds: number\r\n  lastOraclePrice: string\r\n  history: Bet[]\r\n  totalHistory: number\r\n  currentHistoryPage: number\r\n  hasHistoryLoaded: boolean\r\n  rounds?: RoundData\r\n  ledgers?: LedgerData\r\n  claimableStatuses: {\r\n    [key: string]: boolean\r\n  }\r\n  leaderboard: {\r\n    selectedAddress: string\r\n    loadingState: LeaderboardLoadingState\r\n    filters: LeaderboardFilter\r\n    skip: number\r\n    hasMoreResults: boolean\r\n    addressResults: {\r\n      [key: string]: PredictionUser\r\n    }\r\n    results: PredictionUser[]\r\n  }\r\n}\r\n\r\n// Voting\r\n\r\n/* eslint-disable camelcase */\r\n/**\r\n * @see https://hub.snapshot.page/graphql\r\n */\r\nexport interface VoteWhere {\r\n  id?: string\r\n  id_in?: string[]\r\n  voter?: string\r\n  voter_in?: string[]\r\n  proposal?: string\r\n  proposal_in?: string[]\r\n}\r\n\r\nexport enum SnapshotCommand {\r\n  PROPOSAL = 'proposal',\r\n  VOTE = 'vote',\r\n}\r\n\r\nexport enum ProposalType {\r\n  ALL = 'all',\r\n  CORE = 'core',\r\n  COMMUNITY = 'community',\r\n}\r\n\r\nexport enum ProposalState {\r\n  ACTIVE = 'active',\r\n  PENDING = 'pending',\r\n  CLOSED = 'closed',\r\n}\r\n\r\nexport interface Space {\r\n  id: string\r\n  name: string\r\n}\r\n\r\nexport interface Proposal {\r\n  author: string\r\n  body: string\r\n  choices: string[]\r\n  end: number\r\n  id: string\r\n  snapshot: string\r\n  space: Space\r\n  start: number\r\n  state: ProposalState\r\n  title: string\r\n}\r\n\r\nexport interface Vote {\r\n  id: string\r\n  voter: string\r\n  created: number\r\n  space: Space\r\n  proposal: {\r\n    choices: Proposal['choices']\r\n  }\r\n  choice: number\r\n  metadata?: {\r\n    votingPower: string\r\n    verificationHash: string\r\n  }\r\n  _inValid?: boolean\r\n}\r\n\r\nexport enum VotingStateLoadingStatus {\r\n  INITIAL = 'initial',\r\n  IDLE = 'idle',\r\n  LOADING = 'loading',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface VotingState {\r\n  proposalLoadingStatus: VotingStateLoadingStatus\r\n  proposals: {\r\n    [key: string]: Proposal\r\n  }\r\n  voteLoadingStatus: VotingStateLoadingStatus\r\n  votes: {\r\n    [key: string]: Vote[]\r\n  }\r\n}\r\n\r\nexport interface LotteryRoundUserTickets {\r\n  isLoading?: boolean\r\n  tickets?: LotteryTicket[]\r\n}\r\n\r\ninterface LotteryRoundGenerics {\r\n  isLoading?: boolean\r\n  lotteryId: string\r\n  status: LotteryStatus\r\n  startTime: string\r\n  endTime: string\r\n  treasuryFee: string\r\n  firstTicketId: string\r\n  lastTicketId: string\r\n  finalNumber: number\r\n}\r\n\r\nexport interface LotteryRound extends LotteryRoundGenerics {\r\n  userTickets?: LotteryRoundUserTickets\r\n  priceTicketInCake: BigNumber\r\n  discountDivisor: BigNumber\r\n  amountCollectedInCake: BigNumber\r\n  cakePerBracket: string[]\r\n  countWinnersPerBracket: string[]\r\n  rewardsBreakdown: string[]\r\n}\r\n\r\nexport interface LotteryResponse extends LotteryRoundGenerics {\r\n  priceTicketInCake: SerializedBigNumber\r\n  discountDivisor: SerializedBigNumber\r\n  amountCollectedInCake: SerializedBigNumber\r\n  cakePerBracket: SerializedBigNumber[]\r\n  countWinnersPerBracket: SerializedBigNumber[]\r\n  rewardsBreakdown: SerializedBigNumber[]\r\n}\r\n\r\nexport interface LotteryState {\r\n  currentLotteryId: string\r\n  maxNumberTicketsPerBuyOrClaim: string\r\n  isTransitioning: boolean\r\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\r\n  lotteriesData?: LotteryRoundGraphEntity[]\r\n  userLotteryData?: LotteryUserGraphEntity\r\n}\r\n\r\nexport interface LotteryRoundGraphEntity {\r\n  id: string\r\n  totalUsers: string\r\n  totalTickets: string\r\n  winningTickets: string\r\n  status: LotteryStatus\r\n  finalNumber: string\r\n  startTime: string\r\n  endTime: string\r\n  ticketPrice: SerializedBigNumber\r\n}\r\n\r\nexport interface LotteryUserGraphEntity {\r\n  account: string\r\n  totalCake: string\r\n  totalTickets: string\r\n  rounds: UserRound[]\r\n}\r\n\r\nexport interface UserRound {\r\n  claimed: boolean\r\n  lotteryId: string\r\n  status: LotteryStatus\r\n  endTime: string\r\n  totalTickets: string\r\n  tickets?: LotteryTicket[]\r\n}\r\n\r\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\r\n\r\n// Global state\r\n\r\nexport interface State {\r\n  achievements: AchievementState\r\n  block: BlockState\r\n  farms: SerializedFarmsState\r\n  pools: PoolsState\r\n  predictions: PredictionsState\r\n  profile: ProfileState\r\n  teams: TeamsState\r\n  voting: VotingState\r\n  lottery: LotteryState\r\n  nftMarket: NftMarketState\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { SerializedToken } from 'config/constants/types'\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken\r\n  token1: SerializedToken\r\n}\r\n\r\nexport enum FarmStakedOnly {\r\n  ON_FINISHED = 'onFinished',\r\n  TRUE = 'true',\r\n  FALSE = 'false',\r\n}\r\n\r\nexport enum ViewMode {\r\n  TABLE = 'TABLE',\r\n  CARD = 'CARD',\r\n}\r\n\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\r\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance',\r\n)\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\r\nexport const removeSerializedPair =\r\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\r\n\r\nexport const muteAudio = createAction<void>('user/muteAudio')\r\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\r\nexport const toggleTheme = createAction<void>('user/toggleTheme')\r\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\r\n  'user/updateUserFarmStakedOnly',\r\n)\r\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\r\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\r\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\r\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\r\n  'user/updateUserPredictionAcceptedRisk',\r\n)\r\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\r\n  'user/updateUserPredictionChartDisclaimerShow',\r\n)\r\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\r\n  'user/updateUserExpertModeAcknowledgementShow',\r\n)\r\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\r\n  'user/updateUserUsernameVisibility',\r\n)\r\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\r\n\r\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\r\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\r\n\r\nexport const hidePhishingWarningBanner = createAction<void>('user/hidePhishingWarningBanner')\r\n\r\nexport const setIsExchangeChartDisplayed = createAction<boolean>('user/toggleIsExchangeChartDisplayed')\r\n","import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\r\nimport { mainnetTokens, testnetTokens } from './tokens'\r\n\r\n// export const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\r\nexport const ROUTER_ADDRESS = '0x8F8Dd7DB1bDA5eD3da8C9daf3bfa471c12d58486'\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  [ChainId.MAINNET]: [\r\n    mainnetTokens.wbnb,\r\n    mainnetTokens.cake,\r\n    mainnetTokens.busd,\r\n    mainnetTokens.usdt,\r\n    mainnetTokens.btcb,\r\n    mainnetTokens.ust,\r\n    mainnetTokens.eth,\r\n    mainnetTokens.usdc,\r\n  ],\r\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\r\n}\r\n\r\n/**\r\n * Addittional bases for specific tokens\r\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\r\n */\r\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\r\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\r\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [mainnetTokens.cake, mainnetTokens.wbnb],\r\n    [mainnetTokens.busd, mainnetTokens.usdt],\r\n    [mainnetTokens.dai, mainnetTokens.usdt],\r\n  ],\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much BNB so they end up with <.01\r\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\r\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\r\n\r\nexport const ZERO_PERCENT = new Percent('0')\r\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\r\n\r\n// SDN OFAC addresses\r\nexport const BLOCKED_ADDRESSES: string[] = [\r\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\r\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\r\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\r\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\r\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\r\n]\r\n\r\nexport { default as farmsConfig } from './farms'\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n\r\n// added new\r\nexport const StakingContractAddress = {\r\n  56: '0x4817444E6162a3BA10b6E42D9ac85F857b3c49b9'\r\n}","import { ethers } from 'ethers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport tokens from 'config/constants/tokens'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getLotteryV2Address,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n  getTradingCompetitionAddress,\r\n  getEasterNftAddress,\r\n  getCakeVaultAddress,\r\n  getPredictionsAddress,\r\n  getChainlinkOracleAddress,\r\n  getMulticallAddress,\r\n  getBunnySpecialCakeVaultAddress,\r\n  getBunnySpecialPredictionAddress,\r\n  getBunnySpecialLotteryAddress,\r\n  getFarmAuctionAddress,\r\n  getAnniversaryAchievement,\r\n  getNftMarketAddress,\r\n  getNftSaleAddress,\r\n  getPancakeSquadAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport erc721Abi from 'config/abi/erc721.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoV1Abi from 'config/abi/ifoV1.json'\r\nimport ifoV2Abi from 'config/abi/ifoV2.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\n/* import masterChef from 'config/abi/masterchef.json' */\r\nimport masterChef from 'config/abi/metaRewards.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\r\nimport easterNftAbi from 'config/abi/easterNft.json'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\r\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\r\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\r\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\r\nimport anniversaryAchievementAbi from 'config/abi/anniversaryAchievement.json'\r\nimport nftMarketAbi from 'config/abi/nftMarket.json'\r\nimport nftSaleAbi from 'config/abi/nftSale.json'\r\nimport pancakeSquadAbi from 'config/abi/pancakeSquad.json'\r\nimport erc721CollectionAbi from 'config/abi/erc721collection.json'\r\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\r\n\r\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const signerOrProvider = signer ?? simpleRpcProvider\r\n  return new ethers.Contract(address, abi, signerOrProvider)\r\n}\r\n\r\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bep20Abi, address, signer)\r\n}\r\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(erc721Abi, address, signer)\r\n}\r\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lpTokenAbi, address, signer)\r\n}\r\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV1Abi, address, signer)\r\n}\r\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV2Abi, address, signer)\r\n}\r\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\r\n}\r\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeAbi, tokens.cake.address, signer)\r\n}\r\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\r\n}\r\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\r\n}\r\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\r\n}\r\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\r\n}\r\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\r\n}\r\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(masterChef, getMasterChefAddress(), signer)\r\n}\r\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\r\n}\r\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\r\n}\r\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\r\n}\r\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\r\n}\r\n\r\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\r\n}\r\n\r\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\r\n}\r\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\r\n}\r\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\r\n}\r\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\r\n}\r\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\r\n}\r\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\r\n}\r\nexport const getAnniversaryAchievementContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(anniversaryAchievementAbi, getAnniversaryAchievement(), signer)\r\n}\r\nexport const getNftMarketContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(nftMarketAbi, getNftMarketAddress(), signer)\r\n}\r\nexport const getNftSaleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(nftSaleAbi, getNftSaleAddress(), signer)\r\n}\r\nexport const getPancakeSquadContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pancakeSquadAbi, getPancakeSquadAddress(), signer)\r\n}\r\nexport const getErc721CollectionContract = (signer?: ethers.Signer | ethers.providers.Provider, address?: string) => {\r\n  return getContract(erc721CollectionAbi, address, signer)\r\n}\r\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\r\nimport flatMap from 'lodash/flatMap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  FarmStakedOnly,\r\n  muteAudio,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  toggleTheme as toggleThemeAction,\r\n  unmuteAudio,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserFarmStakedOnly,\r\n  updateUserSingleHopOnly,\r\n  updateUserSlippageTolerance,\r\n  updateGasPrice,\r\n  addWatchlistToken,\r\n  addWatchlistPool,\r\n  updateUserPoolStakedOnly,\r\n  updateUserPoolsViewMode,\r\n  ViewMode,\r\n  updateUserFarmsViewMode,\r\n  updateUserPredictionChartDisclaimerShow,\r\n  updateUserPredictionAcceptedRisk,\r\n  updateUserUsernameVisibility,\r\n  updateUserExpertModeAcknowledgementShow,\r\n  hidePhishingWarningBanner,\r\n  setIsExchangeChartDisplayed,\r\n} from '../actions'\r\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function usePhishingBannerManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const showPhishingWarningBanner = useSelector<AppState, AppState['user']['showPhishingWarningBanner']>(\r\n    (state) => state.user.showPhishingWarningBanner,\r\n  )\r\n\r\n  const hideBanner = useCallback(() => {\r\n    dispatch(hidePhishingWarningBanner())\r\n  }, [dispatch])\r\n\r\n  return [showPhishingWarningBanner, hideBanner]\r\n}\r\n\r\n// Get user preference for exchange price chart\r\n// For mobile layout chart is hidden by default\r\nexport function useExchangeChartManager(isMobile: boolean): [boolean, (isDisplayed: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const isChartDisplayed = useSelector<AppState, AppState['user']['isExchangeChartDisplayed']>(\r\n    (state) => state.user.isExchangeChartDisplayed,\r\n  )\r\n\r\n  const setUserChartPreference = useCallback(\r\n    (isDisplayed: boolean) => {\r\n      dispatch(setIsExchangeChartDisplayed(isDisplayed))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [isMobile ? false : isChartDisplayed, setUserChartPreference]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useThemeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    dispatch(toggleThemeAction())\r\n  }, [dispatch])\r\n\r\n  return [isDark, toggleTheme]\r\n}\r\n\r\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\r\n    (state) => state.user.userSingleHopOnly,\r\n  )\r\n\r\n  const setSingleHopOnly = useCallback(\r\n    (newSingleHopOnly: boolean) => {\r\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [singleHopOnly, setSingleHopOnly]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippage: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\r\n    return state.user.userFarmStakedOnly\r\n  })\r\n\r\n  const setUserFarmStakedOnly = useCallback(\r\n    (stakedOnly: boolean) => {\r\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\r\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [\r\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\r\n    setUserFarmStakedOnly,\r\n  ]\r\n}\r\n\r\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\r\n    return state.user.userPoolStakedOnly\r\n  })\r\n\r\n  const setUserPoolStakedOnly = useCallback(\r\n    (stakedOnly: boolean) => {\r\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\r\n}\r\n\r\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\r\n    return state.user.userPoolsViewMode\r\n  })\r\n\r\n  const setUserPoolsViewMode = useCallback(\r\n    (viewMode: ViewMode) => {\r\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPoolsViewMode, setUserPoolsViewMode]\r\n}\r\n\r\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\r\n    return state.user.userFarmsViewMode\r\n  })\r\n\r\n  const setUserFarmsViewMode = useCallback(\r\n    (viewMode: ViewMode) => {\r\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userFarmsViewMode, setUserFarmsViewMode]\r\n}\r\n\r\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\r\n    return state.user.userPredictionAcceptedRisk\r\n  })\r\n\r\n  const setUserPredictionAcceptedRisk = useCallback(\r\n    (acceptedRisk: boolean) => {\r\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\r\n}\r\n\r\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPredictionChartDisclaimerShow = useSelector<\r\n    AppState,\r\n    AppState['user']['userPredictionChartDisclaimerShow']\r\n  >((state) => {\r\n    return state.user.userPredictionChartDisclaimerShow\r\n  })\r\n\r\n  const setPredictionUserChartDisclaimerShow = useCallback(\r\n    (showDisclaimer: boolean) => {\r\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\r\n}\r\n\r\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userExpertModeAcknowledgementShow = useSelector<\r\n    AppState,\r\n    AppState['user']['userExpertModeAcknowledgementShow']\r\n  >((state) => {\r\n    return state.user.userExpertModeAcknowledgementShow\r\n  })\r\n\r\n  const setUserExpertModeAcknowledgementShow = useCallback(\r\n    (showAcknowledgement: boolean) => {\r\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\r\n}\r\n\r\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\r\n    return state.user.userUsernameVisibility\r\n  })\r\n\r\n  const setUserUsernameVisibility = useCallback(\r\n    (usernameVisibility: boolean) => {\r\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userUsernameVisibility, setUserUsernameVisibility]\r\n}\r\n\r\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useGasPrice(): string {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userGasPrice = useGasPrice()\r\n\r\n  const setGasPrice = useCallback(\r\n    (gasPrice: string) => {\r\n      dispatch(updateGasPrice({ gasPrice }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userGasPrice, setGasPrice]\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId],\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(\r\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\r\n    [generatedPairs, pinnedPairs, userPairs],\r\n  )\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n\r\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\r\n  const updatedSavedTokens = useCallback(\r\n    (address: string) => {\r\n      dispatch(addWatchlistToken({ address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n  return [savedTokens, updatedSavedTokens]\r\n}\r\n\r\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\r\n  const updateSavedPools = useCallback(\r\n    (address: string) => {\r\n      dispatch(addWatchlistPool({ address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n  return [savedPools, updateSavedPools]\r\n}\r\n","import { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoV1Contract,\r\n  getIfoV2Contract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n  getTradingCompetitionContract,\r\n  getEasterNftContract,\r\n  getErc721Contract,\r\n  getCakeVaultContract,\r\n  getPredictionsContract,\r\n  getChainlinkOracleContract,\r\n  getSouschefV2Contract,\r\n  getLotteryV2Contract,\r\n  getBunnySpecialCakeVaultContract,\r\n  getBunnySpecialPredictionContract,\r\n  getFarmAuctionContract,\r\n  getBunnySpecialLotteryContract,\r\n  getAnniversaryAchievementContract,\r\n  getNftMarketContract,\r\n  getNftSaleContract,\r\n  getPancakeSquadContract,\r\n  getErc721CollectionContract,\r\n} from 'utils/contractHelpers'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\n// Imports below migrated from Exchange useContract.ts\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, WETH } from '@pancakeswap/sdk'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\r\nimport ENS_ABI from '../config/abi/ens-registrar.json'\r\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\r\nimport ERC20_ABI from '../config/abi/erc20.json'\r\nimport WETH_ABI from '../config/abi/weth.json'\r\nimport multiCallAbi from '../config/abi/Multicall.json'\r\nimport { getContract, getProviderOrSigner } from '../utils'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoV1Contract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useIfoV2Contract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\n/**\r\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\r\n */\r\nexport const useERC721 = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useLotteryV2Contract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\r\n}\r\n\r\nexport const useSousChefV2 = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useTradingCompetitionContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useEasterNftContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useCakeVaultContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePredictionsContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useChainlinkOracleContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSpecialBunnyCakeVaultContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSpecialBunnyPredictionContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnySpecialLotteryContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useAnniversaryAchievementContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getAnniversaryAchievementContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useNftSaleContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getNftSaleContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePancakeSquadContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPancakeSquadContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useFarmAuctionContract = () => {\r\n  const { account, library } = useActiveWeb3React()\r\n  // This hook is slightly different from others\r\n  // Calls were failing if unconnected user goes to farm auction page\r\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\r\n  // However, this fix is not ideal, it currently has following behavior:\r\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\r\n  // - If you go directly to Farm Auction page\r\n  //   - as unconnected user you don't see any console errors\r\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\r\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\r\n  //\r\n  // Similar behavior was also noticed on Trading Competition page.\r\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\r\n}\r\n\r\nexport const useNftMarketContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getNftMarketContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useErc721CollectionContract = (collectionAddress: string) => {\r\n  const { library, account } = useActiveWeb3React()\r\n  return useMemo(() => {\r\n    return getErc721CollectionContract(getProviderOrSigner(library, account), collectionAddress)\r\n  }, [account, library, collectionAddress])\r\n}\r\n\r\n// Code below migrated from Exchange useContract.ts\r\n\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address: string | undefined\r\n  if (chainId) {\r\n    // eslint-disable-next-line default-case\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.TESTNET:\r\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n        break\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  return useContract(getMulticallAddress(), multiCallAbi, false)\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      <CountUp\r\n        start={previousValue.current}\r\n        end={value}\r\n        prefix={prefix}\r\n        suffix={unit}\r\n        decimals={decimals}\r\n        duration={1}\r\n        separator=\",\"\r\n      />\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\r\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\r\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\r\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\r\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\r\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\r\nexport const API_NFT = process.env.REACT_APP_API_NFT\r\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\r\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\r\n\r\n/**\r\n * V1 will be deprecated but is still used to claim old rounds\r\n */\r\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\r\n\r\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\r\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\r\nexport const GRAPH_API_NFTMARKET = process.env.REACT_APP_GRAPH_API_NFT_MARKET\r\n","export type PairDataNormalized = {\r\n  time: number\r\n  token0Id: string\r\n  token1Id: string\r\n  reserve0: number\r\n  reserve1: number\r\n}[]\r\n\r\nexport type DerivedPairDataNormalized = {\r\n  time: number\r\n  token0Id: string\r\n  token1Id: string\r\n  token0DerivedBNB: number\r\n  token1DerivedBNB: number\r\n}[]\r\n\r\nexport type PairPricesNormalized = {\r\n  time: Date\r\n  value: number\r\n}[]\r\n\r\nexport enum PairDataTimeWindowEnum {\r\n  DAY,\r\n  WEEK,\r\n  MONTH,\r\n  YEAR,\r\n}\r\n","import { ethers } from 'ethers'\r\nimport { getMulticallContract } from 'utils/contractHelpers'\r\nimport { MultiCallResponse } from './types'\r\n\r\nexport interface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (example: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\ninterface MulticallOptions {\r\n  requireSuccess?: boolean\r\n}\r\n\r\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\r\n  try {\r\n    const multi = getMulticallContract()\r\n    const itf = new ethers.utils.Interface(abi)\r\n\r\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n    const { returnData } = await multi.aggregate(calldata)\r\n\r\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n    return res\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\n/**\r\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\r\n *\r\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\r\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\r\n */\r\nexport const multicallv2 = async <T = any>(\r\n  abi: any[],\r\n  calls: Call[],\r\n  options: MulticallOptions = { requireSuccess: true },\r\n): Promise<MultiCallResponse<T>> => {\r\n  const { requireSuccess } = options\r\n  const multi = getMulticallContract()\r\n  const itf = new ethers.utils.Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\r\n  const res = returnData.map((call, i) => {\r\n    const [result, data] = call\r\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchCakeVaultFees,\r\n  fetchPoolsStakingLimitsAsync,\r\n} from '.'\r\nimport { State, DeserializedPool } from '../types'\r\nimport { transformPool } from './helpers'\r\n\r\nexport const useFetchPublicPoolsData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchPoolsPublicData = async () => {\r\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\r\n    }\r\n\r\n    fetchPoolsPublicData()\r\n    dispatch(fetchPoolsStakingLimitsAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useFetchUserPools = (account) => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n}\r\n\r\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\r\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\r\n    pools: state.pools.data,\r\n    userDataLoaded: state.pools.userDataLoaded,\r\n  }))\r\n  return { pools: pools.map(transformPool), userDataLoaded }\r\n}\r\n\r\nexport const useFetchCakeVault = () => {\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultPublicData())\r\n  }, [dispatch, fastRefresh])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultUserData({ account }))\r\n  }, [dispatch, fastRefresh, account])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultFees())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useCakeVault = () => {\r\n  const {\r\n    totalShares: totalSharesAsString,\r\n    pricePerFullShare: pricePerFullShareAsString,\r\n    totalCakeInVault: totalCakeInVaultAsString,\r\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\r\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\r\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\r\n    userData: {\r\n      isLoading,\r\n      userShares: userSharesAsString,\r\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  } = useSelector((state: State) => state.pools.cakeVault)\r\n\r\n  const estimatedCakeBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyRewardAsString)\r\n  }, [estimatedCakeBountyRewardAsString])\r\n\r\n  const totalPendingCakeHarvest = useMemo(() => {\r\n    return new BigNumber(totalPendingCakeHarvestAsString)\r\n  }, [totalPendingCakeHarvestAsString])\r\n\r\n  const totalShares = useMemo(() => {\r\n    return new BigNumber(totalSharesAsString)\r\n  }, [totalSharesAsString])\r\n\r\n  const pricePerFullShare = useMemo(() => {\r\n    return new BigNumber(pricePerFullShareAsString)\r\n  }, [pricePerFullShareAsString])\r\n\r\n  const totalCakeInVault = useMemo(() => {\r\n    return new BigNumber(totalCakeInVaultAsString)\r\n  }, [totalCakeInVaultAsString])\r\n\r\n  const userShares = useMemo(() => {\r\n    return new BigNumber(userSharesAsString)\r\n  }, [userSharesAsString])\r\n\r\n  const cakeAtLastUserAction = useMemo(() => {\r\n    return new BigNumber(cakeAtLastUserActionAsString)\r\n  }, [cakeAtLastUserActionAsString])\r\n\r\n  return {\r\n    totalShares,\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: {\r\n      performanceFee,\r\n      callFee,\r\n      withdrawalFee,\r\n      withdrawalFeePeriod,\r\n    },\r\n    userData: {\r\n      isLoading,\r\n      userShares,\r\n      cakeAtLastUserAction,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  }\r\n}\r\n","import { Currency } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from './CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ margin }) => margin && '4px'};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  currency0?: Currency\r\n  currency1?: Currency\r\n}\r\n\r\nexport default function DoubleCurrencyLogo({\r\n  currency0,\r\n  currency1,\r\n  size = 20,\r\n  margin = false,\r\n}: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper margin={margin}>\r\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\r\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport Logo from './Logo'\r\n\r\nconst StyledListLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function ListLogo({\r\n  logoURI,\r\n  style,\r\n  size = '24px',\r\n  alt,\r\n}: {\r\n  logoURI: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n  alt?: string\r\n}) {\r\n  const srcs: string[] = useHttpLocations(logoURI)\r\n\r\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { parseBytes32String } from '@ethersproject/strings'\r\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { arrayify } from 'ethers/lib/utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport {\r\n  TokenAddressMap,\r\n  useDefaultTokenList,\r\n  useUnsupportedTokenList,\r\n  useCombinedActiveList,\r\n  useCombinedInactiveList,\r\n} from '../state/lists/hooks'\r\n\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\r\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\r\nimport { isAddress } from '../utils'\r\n\r\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\r\nimport { filterTokens } from '../components/SearchModal/filtering'\r\n\r\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\r\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\r\n  const { chainId } = useActiveWeb3React()\r\n  const userAddedTokens = useUserAddedTokens()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return {}\r\n\r\n    // reduce to just tokens\r\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n      newMap[address] = tokenMap[chainId][address].token\r\n      return newMap\r\n    }, {})\r\n\r\n    if (includeUserAdded) {\r\n      return (\r\n        userAddedTokens\r\n          // reduce into all ALL_TOKENS filtered by the current chain\r\n          .reduce<{ [address: string]: Token }>(\r\n            (tokenMap_, token) => {\r\n              tokenMap_[token.address] = token\r\n              return tokenMap_\r\n            },\r\n            // must make a copy because reduce modifies the map, and we do not\r\n            // want to make a copy in every iteration\r\n            { ...mapWithoutUrls },\r\n          )\r\n      )\r\n    }\r\n\r\n    return mapWithoutUrls\r\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\r\n}\r\n\r\nexport function useDefaultTokens(): { [address: string]: Token } {\r\n  const defaultList = useDefaultTokenList()\r\n  return useTokensFromMap(defaultList, false)\r\n}\r\n\r\nexport function useAllTokens(): { [address: string]: Token } {\r\n  const allTokens = useCombinedActiveList()\r\n  return useTokensFromMap(allTokens, true)\r\n}\r\n\r\nexport function useAllInactiveTokens(): { [address: string]: Token } {\r\n  // get inactive tokens\r\n  const inactiveTokensMap = useCombinedInactiveList()\r\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\r\n\r\n  // filter out any token that are on active list\r\n  const activeTokensAddresses = Object.keys(useAllTokens())\r\n  const filteredInactive = activeTokensAddresses\r\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n        if (!activeTokensAddresses.includes(address)) {\r\n          newMap[address] = inactiveTokens[address]\r\n        }\r\n        return newMap\r\n      }, {})\r\n    : inactiveTokens\r\n\r\n  return filteredInactive\r\n}\r\n\r\nexport function useUnsupportedTokens(): { [address: string]: Token } {\r\n  const unsupportedTokensMap = useUnsupportedTokenList()\r\n  return useTokensFromMap(unsupportedTokensMap, false)\r\n}\r\n\r\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\r\n  const activeTokens = useAllTokens()\r\n\r\n  if (!activeTokens || !token) {\r\n    return false\r\n  }\r\n\r\n  return !!activeTokens[token.address]\r\n}\r\n\r\n// used to detect extra search results\r\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const inactiveTokens = useAllInactiveTokens()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId || searchQuery === '') {\r\n      return undefined\r\n    }\r\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\r\n    return tokens\r\n  }, [chainId, inactiveTokens, searchQuery])\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\r\n  const userAddedTokens = useUserAddedTokens()\r\n\r\n  if (!currency) {\r\n    return false\r\n  }\r\n\r\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\r\n\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n  return str && str.length > 0\r\n    ? str\r\n    : // need to check for proper bytes string and valid terminator\r\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\r\n    ? parseBytes32String(bytes32)\r\n    : defaultValue\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): Token | undefined | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  const address = isAddress(tokenAddress)\r\n\r\n  const tokenContract = useTokenContract(address || undefined, false)\r\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\r\n  const token: Token | undefined = address ? tokens[address] : undefined\r\n\r\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\r\n  const tokenNameBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'name',\r\n    undefined,\r\n    NEVER_RELOAD,\r\n  )\r\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\r\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\r\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\r\n\r\n  return useMemo(() => {\r\n    if (token) return token\r\n    if (!chainId || !address) return undefined\r\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\r\n    if (decimals.result) {\r\n      return new Token(\r\n        chainId,\r\n        address,\r\n        decimals.result[0],\r\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\r\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\r\n      )\r\n    }\r\n    return undefined\r\n  }, [\r\n    address,\r\n    chainId,\r\n    decimals.loading,\r\n    decimals.result,\r\n    symbol.loading,\r\n    symbol.result,\r\n    symbolBytes32.result,\r\n    token,\r\n    tokenName.loading,\r\n    tokenName.result,\r\n    tokenNameBytes32.result,\r\n  ])\r\n}\r\n\r\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\r\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\r\n  const token = useToken(isBNB ? undefined : currencyId)\r\n  return isBNB ? ETHER : token\r\n}\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined,\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getApy } from 'utils/compoundApyHelpers'\r\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\r\n\r\nexport const convertSharesToCake = (\r\n  shares: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\r\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\r\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\r\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\r\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\r\n}\r\n\r\nexport const convertCakeToShares = (\r\n  cake: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\r\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\r\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\r\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\r\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\r\n}\r\n\r\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\r\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\r\n\r\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\r\n  const { isAutoVault, apr } = pool\r\n\r\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\r\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\r\n\r\n  if (isAutoVault) {\r\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\r\n    return { apr: autoApr, autoCompoundFrequency }\r\n  }\r\n  return { apr, autoCompoundFrequency }\r\n}\r\n\r\nexport const getCakeVaultEarnings = (\r\n  account: string,\r\n  cakeAtLastUserAction: BigNumber,\r\n  userShares: BigNumber,\r\n  pricePerFullShare: BigNumber,\r\n  earningTokenPrice: number,\r\n) => {\r\n  const hasAutoEarnings =\r\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\r\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\r\n\r\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\r\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\r\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\r\n}\r\n\r\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\r\n  const { startBlock, endBlock, isFinished } = pool\r\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\r\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\r\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\r\nimport { ethers } from 'ethers'\r\nimport {\r\n  Bet,\r\n  LedgerData,\r\n  BetPosition,\r\n  PredictionsState,\r\n  PredictionStatus,\r\n  ReduxNodeLedger,\r\n  ReduxNodeRound,\r\n  Round,\r\n  RoundData,\r\n  PredictionUser,\r\n  HistoryFilter,\r\n} from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { getPredictionsContract } from 'utils/contractHelpers'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport { getPredictionsAddress } from 'utils/addressHelpers'\r\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\r\nimport {\r\n  BetResponse,\r\n  getRoundBaseFields,\r\n  getBetBaseFields,\r\n  getUserBaseFields,\r\n  RoundResponse,\r\n  TotalWonMarketResponse,\r\n  UserResponse,\r\n} from './queries'\r\nimport { ROUNDS_PER_PAGE } from './config'\r\n\r\nexport enum Result {\r\n  WIN = 'win',\r\n  LOSE = 'lose',\r\n  CANCELED = 'canceled',\r\n  HOUSE = 'house',\r\n  LIVE = 'live',\r\n}\r\n\r\nexport const numberOrNull = (value: string) => {\r\n  if (value === null) {\r\n    return null\r\n  }\r\n\r\n  const valueNum = Number(value)\r\n  return Number.isNaN(valueNum) ? null : valueNum\r\n}\r\n\r\nconst getRoundPosition = (positionResponse: string) => {\r\n  if (positionResponse === 'Bull') {\r\n    return BetPosition.BULL\r\n  }\r\n\r\n  if (positionResponse === 'Bear') {\r\n    return BetPosition.BEAR\r\n  }\r\n\r\n  if (positionResponse === 'House') {\r\n    return BetPosition.HOUSE\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\r\n  const bet = {\r\n    id: betResponse.id,\r\n    hash: betResponse.hash,\r\n    block: numberOrNull(betResponse.block),\r\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\r\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\r\n    claimed: betResponse.claimed,\r\n    claimedAt: numberOrNull(betResponse.claimedAt),\r\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\r\n    claimedHash: betResponse.claimedHash,\r\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\r\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\r\n    createdAt: numberOrNull(betResponse.createdAt),\r\n    updatedAt: numberOrNull(betResponse.updatedAt),\r\n  } as Bet\r\n\r\n  if (betResponse.user) {\r\n    bet.user = transformUserResponse(betResponse.user)\r\n  }\r\n\r\n  if (betResponse.round) {\r\n    bet.round = transformRoundResponse(betResponse.round)\r\n  }\r\n\r\n  return bet\r\n}\r\n\r\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\r\n  const {\r\n    id,\r\n    createdAt,\r\n    updatedAt,\r\n    block,\r\n    totalBets,\r\n    totalBetsBull,\r\n    totalBetsBear,\r\n    totalBNB,\r\n    totalBNBBull,\r\n    totalBNBBear,\r\n    totalBetsClaimed,\r\n    totalBNBClaimed,\r\n    winRate,\r\n    averageBNB,\r\n    netBNB,\r\n  } = userResponse\r\n\r\n  return {\r\n    id,\r\n    createdAt: numberOrNull(createdAt),\r\n    updatedAt: numberOrNull(updatedAt),\r\n    block: numberOrNull(block),\r\n    totalBets: numberOrNull(totalBets),\r\n    totalBetsBull: numberOrNull(totalBetsBull),\r\n    totalBetsBear: numberOrNull(totalBetsBear),\r\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\r\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\r\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\r\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\r\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\r\n    winRate: winRate ? parseFloat(winRate) : 0,\r\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\r\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\r\n  }\r\n}\r\n\r\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\r\n  const {\r\n    id,\r\n    epoch,\r\n    failed,\r\n    position,\r\n    startAt,\r\n    startBlock,\r\n    startHash,\r\n    lockAt,\r\n    lockBlock,\r\n    lockHash,\r\n    lockPrice,\r\n    lockRoundId,\r\n    closeAt,\r\n    closeBlock,\r\n    closeHash,\r\n    closePrice,\r\n    closeRoundId,\r\n    totalBets,\r\n    totalAmount,\r\n    bullBets,\r\n    bullAmount,\r\n    bearBets,\r\n    bearAmount,\r\n    bets = [],\r\n  } = roundResponse\r\n\r\n  return {\r\n    id,\r\n    failed,\r\n    startHash,\r\n    lockHash,\r\n    lockRoundId,\r\n    closeRoundId,\r\n    closeHash,\r\n    position: getRoundPosition(position),\r\n    epoch: numberOrNull(epoch),\r\n    startAt: numberOrNull(startAt),\r\n    startBlock: numberOrNull(startBlock),\r\n    lockAt: numberOrNull(lockAt),\r\n    lockBlock: numberOrNull(lockBlock),\r\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\r\n    closeAt: numberOrNull(closeAt),\r\n    closeBlock: numberOrNull(closeBlock),\r\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\r\n    totalBets: numberOrNull(totalBets),\r\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\r\n    bullBets: numberOrNull(bullBets),\r\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\r\n    bearBets: numberOrNull(bearBets),\r\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\r\n    bets: bets.map(transformBetResponse),\r\n  }\r\n}\r\n\r\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\r\n  const { round } = bet\r\n  if (round.failed) {\r\n    return Result.CANCELED\r\n  }\r\n\r\n  if (round.epoch >= currentEpoch - 1) {\r\n    return Result.LIVE\r\n  }\r\n\r\n  if (bet.round.position === BetPosition.HOUSE) {\r\n    return Result.HOUSE\r\n  }\r\n\r\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n\r\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\r\n}\r\n\r\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\r\n  switch (filter) {\r\n    case HistoryFilter.COLLECTED:\r\n      return bets.filter((bet) => bet.claimed === true)\r\n    case HistoryFilter.UNCOLLECTED:\r\n      return bets.filter((bet) => {\r\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\r\n      })\r\n    case HistoryFilter.ALL:\r\n    default:\r\n      return bets\r\n  }\r\n}\r\n\r\nexport const getTotalWon = async (): Promise<number> => {\r\n  const { market } = (await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getTotalWonData {\r\n        market(id: 1) {\r\n          totalBNB\r\n          totalBNBTreasury\r\n        }\r\n      }\r\n    `,\r\n  )) as { market: TotalWonMarketResponse }\r\n\r\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\r\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\r\n\r\n  return Math.max(totalBNB - totalBNBTreasury, 0)\r\n}\r\n\r\ntype WhereClause = Record<string, string | number | boolean | string[]>\r\n\r\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\r\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.bets\r\n}\r\n\r\nexport const getBet = async (betId: string): Promise<BetResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBet($id: ID!) {\r\n        bet(id: $id) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: betId.toLowerCase(),\r\n    },\r\n  )\r\n  return response.bet\r\n}\r\n\r\nexport const getLedgerData = async (account: string, epochs: number[]) => {\r\n  const address = getPredictionsAddress()\r\n  const ledgerCalls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'ledger',\r\n    params: [epoch, account],\r\n  }))\r\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\r\n  return response\r\n}\r\n\r\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\r\n\r\ninterface GetPredictionUsersOptions {\r\n  skip?: number\r\n  first?: number\r\n  orderBy?: string\r\n  orderDir?: string\r\n  where?: WhereClause\r\n}\r\n\r\nconst defaultPredictionUserOptions = {\r\n  skip: 0,\r\n  first: LEADERBOARD_RESULTS_PER_PAGE,\r\n  orderBy: 'createdAt',\r\n  orderDir: 'desc',\r\n}\r\n\r\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\r\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\r\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\r\n          ${getUserBaseFields()} \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where, orderBy, orderDir },\r\n  )\r\n  return response.users\r\n}\r\n\r\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getUser($id: ID!) {\r\n        user(id: $id) {\r\n          ${getUserBaseFields()}\r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: account.toLowerCase(),\r\n    },\r\n  )\r\n  return response.user\r\n}\r\n\r\nexport const getClaimStatuses = async (\r\n  account: string,\r\n  epochs: number[],\r\n): Promise<PredictionsState['claimableStatuses']> => {\r\n  const address = getPredictionsAddress()\r\n  const claimableCalls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'claimable',\r\n    params: [epoch, account],\r\n  }))\r\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\r\n\r\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\r\n    const epoch = epochs[index]\r\n    const [claimable] = claimableResponse\r\n\r\n    return {\r\n      ...accum,\r\n      [epoch]: claimable,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport type MarketData = Pick<\r\n  PredictionsState,\r\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\r\n>\r\nexport const getPredictionData = async (): Promise<MarketData> => {\r\n  const address = getPredictionsAddress()\r\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\r\n    address,\r\n    name: method,\r\n  }))\r\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\r\n    predictionsAbi,\r\n    staticCalls,\r\n  )\r\n\r\n  return {\r\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\r\n    currentEpoch: currentEpoch.toNumber(),\r\n    intervalSeconds: intervalSeconds.toNumber(),\r\n    minBetAmount: minBetAmount.toString(),\r\n    bufferSeconds: bufferSeconds.toNumber(),\r\n  }\r\n}\r\n\r\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\r\n  const address = getPredictionsAddress()\r\n  const calls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'rounds',\r\n    params: [epoch],\r\n  }))\r\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\r\n  return response\r\n}\r\n\r\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\r\n  return {\r\n    epoch,\r\n    startTimestamp,\r\n    lockTimestamp: null,\r\n    closeTimestamp: null,\r\n    lockPrice: null,\r\n    closePrice: null,\r\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\r\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\r\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\r\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\r\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\r\n    oracleCalled: false,\r\n    lockOracleId: null,\r\n    closeOracleId: null,\r\n  }\r\n}\r\n\r\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\r\n  return rounds.reduce((accum, round) => {\r\n    return {\r\n      ...accum,\r\n      [round.epoch.toString()]: round,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\r\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\r\n  amount: ledgerResponse.amount.toJSON(),\r\n  claimed: ledgerResponse.claimed,\r\n})\r\n\r\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\r\n  return ledgers.reduce((accum, ledgerResponse, index) => {\r\n    if (!ledgerResponse) {\r\n      return accum\r\n    }\r\n\r\n    // If the amount is zero that means the user did not bet\r\n    if (ledgerResponse.amount.eq(0)) {\r\n      return accum\r\n    }\r\n\r\n    const epoch = epochs[index].toString()\r\n\r\n    return {\r\n      ...accum,\r\n      [account]: {\r\n        ...accum[account],\r\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\r\n      },\r\n    }\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Serializes the return from the \"rounds\" call for redux\r\n */\r\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\r\n  const {\r\n    epoch,\r\n    startTimestamp,\r\n    lockTimestamp,\r\n    closeTimestamp,\r\n    lockPrice,\r\n    closePrice,\r\n    totalAmount,\r\n    bullAmount,\r\n    bearAmount,\r\n    rewardBaseCalAmount,\r\n    rewardAmount,\r\n    oracleCalled,\r\n    lockOracleId,\r\n    closeOracleId,\r\n  } = response\r\n\r\n  return {\r\n    oracleCalled,\r\n    epoch: epoch.toNumber(),\r\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\r\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\r\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\r\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\r\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\r\n    totalAmount: totalAmount.toJSON(),\r\n    bullAmount: bullAmount.toJSON(),\r\n    bearAmount: bearAmount.toJSON(),\r\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\r\n    rewardAmount: rewardAmount.toJSON(),\r\n    lockOracleId: lockOracleId.toString(),\r\n    closeOracleId: closeOracleId.toString(),\r\n  }\r\n}\r\n\r\n/**\r\n * Parse serialized values back into ethers.BigNumber\r\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\r\n */\r\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\r\n  return Object.keys(data).reduce((accum, key) => {\r\n    const value = data[key]\r\n\r\n    if (value && value?.type === 'BigNumber') {\r\n      return {\r\n        ...accum,\r\n        [key]: ethers.BigNumber.from(value),\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...accum,\r\n      [key]: value,\r\n    }\r\n  }, {}) as K\r\n}\r\n\r\nexport const fetchUsersRoundsLength = async (account: string) => {\r\n  try {\r\n    const contract = getPredictionsContract()\r\n    const length = await contract.getUserRoundsLength(account)\r\n    return length\r\n  } catch {\r\n    return ethers.BigNumber.from(0)\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches rounds a user has participated in\r\n */\r\nexport const fetchUserRounds = async (\r\n  account: string,\r\n  cursor = 0,\r\n  size = ROUNDS_PER_PAGE,\r\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\r\n  const contract = getPredictionsContract()\r\n\r\n  try {\r\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\r\n\r\n    return rounds.reduce((accum, round, index) => {\r\n      return {\r\n        ...accum,\r\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\r\n      }\r\n    }, {})\r\n  } catch {\r\n    // When the results run out the contract throws an error.\r\n    return null\r\n  }\r\n}\r\n","export interface UserResponse {\r\n  id: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  block: string\r\n  totalBets: string\r\n  totalBetsBull: string\r\n  totalBetsBear: string\r\n  totalBNB: string\r\n  totalBNBBull: string\r\n  totalBNBBear: string\r\n  totalBetsClaimed: string\r\n  totalBNBClaimed: string\r\n  winRate: string\r\n  averageBNB: string\r\n  netBNB: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface BetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  claimedAt: string\r\n  claimedBlock: string\r\n  claimedHash: string\r\n  claimedBNB: string\r\n  claimedNetBNB: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  block: string\r\n  user?: UserResponse\r\n  round?: RoundResponse\r\n}\r\n\r\nexport interface HistoricalBetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  user?: UserResponse\r\n  round: {\r\n    id: string\r\n    epoch: string\r\n  }\r\n}\r\n\r\nexport interface RoundResponse {\r\n  id: string\r\n  epoch: string\r\n  position: string\r\n  failed: boolean\r\n  startAt: string\r\n  startBlock: string\r\n  startHash: string\r\n  lockAt: string\r\n  lockBlock: string\r\n  lockHash: string\r\n  lockPrice: string\r\n  lockRoundId: string\r\n  closeAt: string\r\n  closeBlock: string\r\n  closeHash: string\r\n  closePrice: string\r\n  closeRoundId: string\r\n  totalBets: string\r\n  totalAmount: string\r\n  bullBets: string\r\n  bullAmount: string\r\n  bearBets: string\r\n  bearAmount: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface TotalWonMarketResponse {\r\n  totalBNB: string\r\n  totalBNBTreasury: string\r\n}\r\n\r\n/**\r\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\r\n */\r\nexport const getRoundBaseFields = () => `\r\n  id\r\n  epoch\r\n  position\r\n  failed\r\n  startAt\r\n  startBlock\r\n  startHash\r\n  lockAt\r\n  lockBlock\r\n  lockHash\r\n  lockPrice\r\n  lockRoundId\r\n  closeAt\r\n  closeBlock\r\n  closeHash\r\n  closePrice\r\n  closeRoundId\r\n  totalBets\r\n  totalAmount\r\n  bullBets\r\n  bullAmount\r\n  bearBets\r\n  bearAmount\r\n`\r\n\r\nexport const getBetBaseFields = () => `\r\n id\r\n hash  \r\n amount\r\n position\r\n claimed\r\n claimedAt\r\n claimedHash\r\n claimedBlock\r\n claimedBNB\r\n claimedNetBNB\r\n createdAt\r\n updatedAt\r\n`\r\n\r\nexport const getUserBaseFields = () => `\r\n  id\r\n  createdAt\r\n  updatedAt\r\n  block\r\n  totalBets\r\n  totalBetsBull\r\n  totalBetsBear\r\n  totalBNB\r\n  totalBNBBull\r\n  totalBNBBear\r\n  totalBetsClaimed\r\n  totalBNBClaimed\r\n  winRate\r\n  averageBNB\r\n  netBNB\r\n`\r\n","import { Token } from '@pancakeswap/sdk'\r\nimport { SerializedToken } from 'config/constants/types'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\n\r\nexport function serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n    projectLink: token.projectLink,\r\n  }\r\n}\r\n\r\nexport function deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name,\r\n    serializedToken.projectLink,\r\n  )\r\n}\r\n\r\nexport enum GAS_PRICE {\r\n  default = '5',\r\n  fast = '6',\r\n  instant = '7',\r\n  testnet = '10',\r\n}\r\n\r\nexport const GAS_PRICE_GWEI = {\r\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\r\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\r\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\r\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { InfoState } from './types'\r\nimport {\r\n  updateProtocolData,\r\n  updateProtocolChartData,\r\n  updateProtocolTransactions,\r\n  updatePoolData,\r\n  addPoolKeys,\r\n  updatePoolChartData,\r\n  updatePoolTransactions,\r\n  updateTokenData,\r\n  addTokenKeys,\r\n  addTokenPoolAddresses,\r\n  updateTokenChartData,\r\n  updateTokenPriceData,\r\n  updateTokenTransactions,\r\n} from './actions'\r\n\r\nconst initialState: InfoState = {\r\n  protocol: {\r\n    overview: undefined,\r\n    chartData: undefined,\r\n    transactions: undefined,\r\n  },\r\n  pools: { byAddress: {} },\r\n  tokens: { byAddress: {} },\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    // Protocol actions\r\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\r\n      state.protocol.overview = protocolData\r\n    })\r\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\r\n      state.protocol.chartData = chartData\r\n    })\r\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\r\n      state.protocol.transactions = transactions\r\n    })\r\n    // Pools actions\r\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\r\n      pools.forEach((poolData) => {\r\n        state.pools.byAddress[poolData.address] = {\r\n          ...state.pools.byAddress[poolData.address],\r\n          data: poolData,\r\n        }\r\n      })\r\n    })\r\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\r\n      poolAddresses.forEach((address) => {\r\n        if (!state.pools.byAddress[address]) {\r\n          state.pools.byAddress[address] = {\r\n            data: undefined,\r\n            chartData: undefined,\r\n            transactions: undefined,\r\n          }\r\n        }\r\n      })\r\n    })\r\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\r\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\r\n    })\r\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\r\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\r\n    })\r\n    // Tokens actions\r\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\r\n      tokens.forEach((tokenData) => {\r\n        state.tokens.byAddress[tokenData.address] = {\r\n          ...state.tokens.byAddress[tokenData.address],\r\n          data: tokenData,\r\n        }\r\n      })\r\n    })\r\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\r\n      tokenAddresses.forEach((address) => {\r\n        if (!state.tokens.byAddress[address]) {\r\n          state.tokens.byAddress[address] = {\r\n            poolAddresses: undefined,\r\n            data: undefined,\r\n            chartData: undefined,\r\n            priceData: {},\r\n            transactions: undefined,\r\n          }\r\n        }\r\n      })\r\n    })\r\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\r\n    })\r\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\r\n    })\r\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\r\n    })\r\n    .addCase(\r\n      updateTokenPriceData,\r\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\r\n        state.tokens.byAddress[tokenAddress] = {\r\n          ...state.tokens.byAddress[tokenAddress],\r\n          priceData: {\r\n            ...state.tokens.byAddress[tokenAddress]?.priceData,\r\n            [secondsInterval]: priceData,\r\n            oldestFetchedTimestamp,\r\n          },\r\n        }\r\n      },\r\n    ),\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion')\r\n\r\nexport default updateVersion\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { SerializedToken } from 'config/constants/types'\r\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  addWatchlistPool,\r\n  addWatchlistToken,\r\n  FarmStakedOnly,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  muteAudio,\r\n  toggleTheme,\r\n  unmuteAudio,\r\n  updateGasPrice,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserFarmStakedOnly,\r\n  updateUserFarmsViewMode,\r\n  updateUserPoolStakedOnly,\r\n  updateUserPoolsViewMode,\r\n  updateUserSingleHopOnly,\r\n  updateUserSlippageTolerance,\r\n  ViewMode,\r\n  updateUserPredictionAcceptedRisk,\r\n  updateUserPredictionChartDisclaimerShow,\r\n  updateUserUsernameVisibility,\r\n  updateUserExpertModeAcknowledgementShow,\r\n  hidePhishingWarningBanner,\r\n  setIsExchangeChartDisplayed,\r\n} from './actions'\r\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userExpertMode: boolean\r\n\r\n  // only allow swaps on direct pairs\r\n  userSingleHopOnly: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n  audioPlay: boolean\r\n  isDark: boolean\r\n  isExchangeChartDisplayed: boolean\r\n  userFarmStakedOnly: FarmStakedOnly\r\n  userPoolStakedOnly: boolean\r\n  userPoolsViewMode: ViewMode\r\n  userFarmsViewMode: ViewMode\r\n  userPredictionAcceptedRisk: boolean\r\n  userPredictionChartDisclaimerShow: boolean\r\n  userExpertModeAcknowledgementShow: boolean\r\n  userUsernameVisibility: boolean\r\n  gasPrice: string\r\n  watchlistTokens: string[]\r\n  watchlistPools: string[]\r\n  showPhishingWarningBanner: boolean\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userExpertMode: false,\r\n  userSingleHopOnly: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true,\r\n  isDark: false,\r\n  isExchangeChartDisplayed: true,\r\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\r\n  userPoolStakedOnly: false,\r\n  userPoolsViewMode: ViewMode.TABLE,\r\n  userFarmsViewMode: ViewMode.TABLE,\r\n  userPredictionAcceptedRisk: false,\r\n  userPredictionChartDisclaimerShow: true,\r\n  userExpertModeAcknowledgementShow: true,\r\n  userUsernameVisibility: false,\r\n  gasPrice: GAS_PRICE_GWEI.default,\r\n  watchlistTokens: [],\r\n  watchlistPools: [],\r\n  showPhishingWarningBanner: true,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSingleHopOnly, (state, action) => {\r\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const { chainId } = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, (state) => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, (state) => {\r\n      state.audioPlay = true\r\n    })\r\n    .addCase(toggleTheme, (state) => {\r\n      state.isDark = !state.isDark\r\n    })\r\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\r\n      state.userFarmStakedOnly = userFarmStakedOnly\r\n    })\r\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\r\n      state.userPoolStakedOnly = userPoolStakedOnly\r\n    })\r\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\r\n      state.userPoolsViewMode = userPoolsViewMode\r\n    })\r\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\r\n      state.userFarmsViewMode = userFarmsViewMode\r\n    })\r\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\r\n      state.userPredictionAcceptedRisk = userAcceptedRisk\r\n    })\r\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\r\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\r\n    })\r\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\r\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\r\n    })\r\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\r\n      state.userUsernameVisibility = userUsernameVisibility\r\n    })\r\n    .addCase(updateGasPrice, (state, action) => {\r\n      state.gasPrice = action.payload.gasPrice\r\n    })\r\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\r\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\r\n      const tokenWatchlist = state.watchlistTokens ?? []\r\n      if (!tokenWatchlist.includes(address)) {\r\n        state.watchlistTokens = [...tokenWatchlist, address]\r\n      } else {\r\n        // Remove token from watchlist\r\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\r\n        state.watchlistTokens = newTokens\r\n      }\r\n    })\r\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\r\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\r\n      const poolsWatchlist = state.watchlistPools ?? []\r\n      if (!poolsWatchlist.includes(address)) {\r\n        state.watchlistPools = [...poolsWatchlist, address]\r\n      } else {\r\n        // Remove pool from watchlist\r\n        const newPools = state.watchlistPools.filter((x) => x !== address)\r\n        state.watchlistPools = newPools\r\n      }\r\n    })\r\n    .addCase(hidePhishingWarningBanner, (state) => {\r\n      state.showPhishingWarningBanner = false\r\n    })\r\n    .addCase(setIsExchangeChartDisplayed, (state, { payload }) => {\r\n      state.isExchangeChartDisplayed = payload\r\n    }),\r\n)\r\n","/* eslint-disable no-param-reassign */\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt,\r\n} from './actions'\r\n\r\nconst now = () => new Date().getTime()\r\n\r\nexport interface TransactionDetails {\r\n  hash: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  summary?: string\r\n  claim?: { recipient: string }\r\n  receipt?: SerializableTransactionReceipt\r\n  lastCheckedBlockNumber?: number\r\n  addedTime: number\r\n  confirmedTime?: number\r\n  from: string\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails\r\n  }\r\n}\r\n\r\nexport const initialState: TransactionState = {}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.')\r\n      }\r\n      const txs = transactions[chainId] ?? {}\r\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\r\n      transactions[chainId] = txs\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return\r\n      transactions[chainId] = {}\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      tx.receipt = receipt\r\n      tx.confirmedTime = now()\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  Field,\r\n  replaceSwapState,\r\n  selectCurrency,\r\n  setRecipient,\r\n  switchCurrencies,\r\n  typeInput,\r\n  updateDerivedPairData,\r\n  updatePairData,\r\n} from './actions'\r\nimport { DerivedPairDataNormalized, PairDataNormalized } from './types'\r\n\r\nexport interface SwapState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly [Field.INPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  readonly [Field.OUTPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  // the typed recipient address or ENS name, or null if swap should go to sender\r\n  readonly recipient: string | null\r\n  readonly pairDataById: Record<number, Record<string, PairDataNormalized>> | null\r\n  readonly derivedPairDataById: Record<number, Record<string, DerivedPairDataNormalized>> | null\r\n}\r\n\r\nconst initialState: SwapState = {\r\n  independentField: Field.INPUT,\r\n  typedValue: '',\r\n  [Field.INPUT]: {\r\n    currencyId: '',\r\n  },\r\n  [Field.OUTPUT]: {\r\n    currencyId: '',\r\n  },\r\n  pairDataById: {},\r\n  derivedPairDataById: {},\r\n  recipient: null,\r\n}\r\n\r\nexport default createReducer<SwapState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(\r\n      replaceSwapState,\r\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\r\n        return {\r\n          [Field.INPUT]: {\r\n            currencyId: inputCurrencyId,\r\n          },\r\n          [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId,\r\n          },\r\n          independentField: field,\r\n          typedValue,\r\n          recipient,\r\n          pairDataById: state.pairDataById,\r\n          derivedPairDataById: state.derivedPairDataById,\r\n        }\r\n      },\r\n    )\r\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\r\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n      if (currencyId === state[otherField].currencyId) {\r\n        // the case where we have to swap the order\r\n        return {\r\n          ...state,\r\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n          [field]: { currencyId },\r\n          [otherField]: { currencyId: state[field].currencyId },\r\n        }\r\n      }\r\n      // the normal case\r\n      return {\r\n        ...state,\r\n        [field]: { currencyId },\r\n      }\r\n    })\r\n    .addCase(switchCurrencies, (state) => {\r\n      return {\r\n        ...state,\r\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\r\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\r\n      }\r\n    })\r\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n      }\r\n    })\r\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\r\n      state.recipient = recipient\r\n    })\r\n    .addCase(updatePairData, (state, { payload: { pairData, pairId, timeWindow } }) => {\r\n      if (!state.pairDataById[pairId]) {\r\n        state.pairDataById[pairId] = {}\r\n      }\r\n      state.pairDataById[pairId][timeWindow] = pairData\r\n    })\r\n    .addCase(updateDerivedPairData, (state, { payload: { pairData, pairId, timeWindow } }) => {\r\n      if (!state.derivedPairDataById[pairId]) {\r\n        state.derivedPairDataById[pairId] = {}\r\n      }\r\n      state.derivedPairDataById[pairId][timeWindow] = pairData\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, resetMintState, typeInput } from './actions'\r\n\r\nexport interface MintState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly otherTypedValue: string // for the case when there's no liquidity\r\n}\r\n\r\nconst initialState: MintState = {\r\n  independentField: Field.CURRENCY_A,\r\n  typedValue: '',\r\n  otherTypedValue: '',\r\n}\r\n\r\nexport default createReducer<MintState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(resetMintState, () => initialState)\r\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\r\n      if (noLiquidity) {\r\n        // they're typing into the field they've last typed in\r\n        if (field === state.independentField) {\r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue,\r\n          }\r\n        }\r\n        // they're typing into a new field, store the other value\r\n\r\n        return {\r\n          ...state,\r\n          independentField: field,\r\n          typedValue,\r\n          otherTypedValue: state.typedValue,\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n        otherTypedValue: '',\r\n      }\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { TokenList } from '@uniswap/token-lists/dist/types'\r\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\r\n\r\nimport { updateVersion } from '../global/actions'\r\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\r\n\r\nexport interface ListsState {\r\n  readonly byUrl: {\r\n    readonly [url: string]: {\r\n      readonly current: TokenList | null\r\n      readonly pendingUpdate: TokenList | null\r\n      readonly loadingRequestId: string | null\r\n      readonly error: string | null\r\n    }\r\n  }\r\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n  readonly lastInitializedDefaultListOfLists?: string[]\r\n\r\n  // currently active lists\r\n  readonly activeListUrls: string[] | undefined\r\n}\r\n\r\ntype ListState = ListsState['byUrl'][string]\r\n\r\nconst NEW_LIST_STATE: ListState = {\r\n  error: null,\r\n  current: null,\r\n  loadingRequestId: null,\r\n  pendingUpdate: null,\r\n}\r\n\r\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\r\n\r\nexport const initialState: ListsState = {\r\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n  byUrl: {\r\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\r\n      memo[listUrl] = NEW_LIST_STATE\r\n      return memo\r\n    }, {}),\r\n  },\r\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n      state.byUrl[url] = {\r\n        current: null,\r\n        pendingUpdate: null,\r\n        ...state.byUrl[url],\r\n        loadingRequestId: requestId,\r\n        error: null,\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n      const current = state.byUrl[url]?.current\r\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\r\n\r\n      // no-op if update does nothing\r\n      if (current) {\r\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\r\n\r\n        if (upgradeType === VersionUpgrade.NONE) return\r\n        if (loadingRequestId === null || loadingRequestId === requestId) {\r\n          state.byUrl[url] = {\r\n            ...state.byUrl[url],\r\n            loadingRequestId: null,\r\n            error: null,\r\n            current,\r\n            pendingUpdate: tokenList,\r\n          }\r\n        }\r\n      } else {\r\n        // activate if on default active\r\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\r\n          state.activeListUrls?.push(url)\r\n        }\r\n\r\n        state.byUrl[url] = {\r\n          ...state.byUrl[url],\r\n          loadingRequestId: null,\r\n          error: null,\r\n          current: tokenList,\r\n          pendingUpdate: null,\r\n        }\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n        // no-op since it's not the latest request\r\n        return\r\n      }\r\n\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        loadingRequestId: null,\r\n        error: errorMessage,\r\n        current: null,\r\n        pendingUpdate: null,\r\n      }\r\n    })\r\n    .addCase(addList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(removeList, (state, { payload: url }) => {\r\n      if (state.byUrl[url]) {\r\n        delete state.byUrl[url]\r\n      }\r\n      // remove list from active urls if needed\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(enableList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n\r\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\r\n        state.activeListUrls.push(url)\r\n      }\r\n\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = [url]\r\n      }\r\n    })\r\n    .addCase(disableList, (state, { payload: url }) => {\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]?.pendingUpdate) {\r\n        throw new Error('accept list update called without pending update')\r\n      }\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        pendingUpdate: null,\r\n        current: state.byUrl[url].pendingUpdate,\r\n      }\r\n    })\r\n    .addCase(updateVersion, (state) => {\r\n      // state loaded from localStorage, but new lists have never been initialized\r\n      if (!state.lastInitializedDefaultListOfLists) {\r\n        state.byUrl = initialState.byUrl\r\n        state.activeListUrls = initialState.activeListUrls\r\n      } else if (state.lastInitializedDefaultListOfLists) {\r\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n          (s, l) => s.add(l),\r\n          new Set(),\r\n        )\r\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\r\n\r\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n          if (!lastInitializedSet.has(listUrl)) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n        })\r\n\r\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n          if (!newListOfListsSet.has(listUrl)) {\r\n            delete state.byUrl[listUrl]\r\n          }\r\n        })\r\n      }\r\n\r\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\r\n\r\n      // if no active lists, activate defaults\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\r\n\r\n        // for each list on default list, initialize if needed\r\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\r\n          if (!state.byUrl[listUrl]) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n          return true\r\n        })\r\n      }\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport interface BurnState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n}\r\n\r\nconst initialState: BurnState = {\r\n  independentField: Field.LIQUIDITY_PERCENT,\r\n  typedValue: '0',\r\n}\r\n\r\nexport default createReducer<BurnState>(initialState, (builder) =>\r\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n    return {\r\n      ...state,\r\n      independentField: field,\r\n      typedValue,\r\n    }\r\n  }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number\r\n      }\r\n    }\r\n  }\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null\r\n        blockNumber?: number\r\n        fetchingBlockNumber?: number\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {})\r\n\r\n        if (!listeners[chainId]) return\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call)\r\n          if (!listeners[chainId][callKey]) return\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch]\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--\r\n          }\r\n        })\r\n      },\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        }\r\n      })\r\n    }),\r\n)\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { save, load } from 'redux-localstorage-simple'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport { useDispatch } from 'react-redux'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport predictionsReducer from './predictions'\r\nimport profileReducer, { initialState as profileInitialState } from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\nimport blockReducer from './block'\r\nimport votingReducer from './voting'\r\nimport lotteryReducer from './lottery'\r\nimport infoReducer from './info'\r\nimport { updateVersion } from './global/actions'\r\nimport user, { initialState as userInitialState } from './user/reducer'\r\nimport transactions, { initialState as transactionsInitialState } from './transactions/reducer'\r\nimport swap from './swap/reducer'\r\nimport mint from './mint/reducer'\r\nimport lists, { initialState as listsInitialState } from './lists/reducer'\r\nimport burn from './burn/reducer'\r\nimport multicall from './multicall/reducer'\r\nimport nftMarketReducer from './nftMarket/reducer'\r\n\r\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile']\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    achievements: achievementsReducer,\r\n    block: blockReducer,\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n    predictions: predictionsReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    voting: votingReducer,\r\n    lottery: lotteryReducer,\r\n    info: infoReducer,\r\n    nftMarket: nftMarketReducer,\r\n\r\n    // Exchange\r\n    user,\r\n    transactions,\r\n    swap,\r\n    mint,\r\n    burn,\r\n    multicall,\r\n    lists,\r\n  },\r\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\r\n  preloadedState: load({\r\n    states: PERSISTED_KEYS,\r\n    preloadedState: {\r\n      user: cloneDeep(userInitialState),\r\n      transactions: cloneDeep(transactionsInitialState),\r\n      lists: cloneDeep(listsInitialState),\r\n      profile: cloneDeep(profileInitialState),\r\n    },\r\n  }),\r\n})\r\n\r\nstore.dispatch(updateVersion())\r\n\r\n/**\r\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\r\n */\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport const useAppDispatch = () => useDispatch()\r\n\r\nexport default store\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\nexport const BASE_BSC_SCAN_URLS = {\r\n  [ChainId.MAINNET]: 'https://bscscan.com',\r\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\r\n}\r\n\r\n// CAKE_PER_BLOCK details\r\n// 40 CAKE is minted per block\r\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\r\n// 10 CAKE per block goes to CAKE syrup pool\r\n// 9 CAKE per block goes to Yield farms and lottery\r\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\r\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\r\nexport const CAKE_PER_BLOCK = 55\r\nexport const BLOCKS_PER_YEAR = (60 / BSC_BLOCK_TIME) * 60 * 24 * 365 // 10512000\r\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK * BLOCKS_PER_YEAR\r\nexport const BASE_URL = 'https://app.dodoex.io'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/earn/add-liquidity?network=bsc-mainnet&`\r\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\r\nexport const DEFAULT_GAS_LIMIT = 200000\r\nexport const AUCTION_BIDDERS_TO_FETCH = 500\r\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\r\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\r\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\r\n// In reality its 10000 because of fast refresh, a bit less here to cover for possible long request times\r\nexport const PANCAKE_BUNNIES_UPDATE_FREQUENCY = 8000\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  )\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean\r\n  readonly data: string | undefined\r\n  readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  )\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n    if (!chainId || callKeys.length === 0) return undefined\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    const calls = callKeys.map((key) => parseCallKey(key))\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    )\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      )\r\n    }\r\n  }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n  return useMemo(\r\n    () =>\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)]\r\n        let data\r\n        if (result?.data && result?.data !== '0x') {\r\n          // eslint-disable-next-line prefer-destructuring\r\n          data = result.data\r\n        }\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber }\r\n      }),\r\n    [callResults, calls, chainId],\r\n  )\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE\r\n  const { valid, data, blockNumber } = callResult\r\n  if (!valid) return INVALID_CALL_STATE\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n  const success = data && data.length > 2\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n  let result: Result | undefined\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data)\r\n    } catch (error) {\r\n      console.debug('Result data parsing failed', fragment, data)\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result,\r\n    error: !success,\r\n  }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            }\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\r\n  }, [fragment, contract, results, currentBlock])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  )\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\r\n  }, [fragment, results, contractInterface, currentBlock])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : []\r\n  }, [contract, fragment, inputs])\r\n\r\n  const result = useCallsData(calls, options)[0]\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, currentBlock)\r\n  }, [result, contract, fragment, currentBlock])\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { stringify } from 'qs'\r\nimport { GRAPH_API_NFTMARKET, API_NFT } from 'config/constants/endpoints'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { ethers } from 'ethers'\r\nimport map from 'lodash/map'\r\nimport { uniq } from 'lodash'\r\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\r\nimport {\r\n  TokenMarketData,\r\n  ApiCollections,\r\n  TokenIdWithCollectionAddress,\r\n  NftToken,\r\n  NftLocation,\r\n  Collection,\r\n  ApiResponseCollectionTokens,\r\n  ApiResponseSpecificToken,\r\n  ApiCollection,\r\n  CollectionMarketDataBaseFields,\r\n  Transaction,\r\n  AskOrder,\r\n  ApiSingleTokenData,\r\n  NftAttribute,\r\n  ApiTokenFilterResponse,\r\n  ApiCollectionsResponse,\r\n} from './types'\r\nimport { getBaseNftFields, getBaseTransactionFields, getCollectionBaseFields } from './queries'\r\n\r\n/**\r\n * API HELPERS\r\n */\r\n\r\n/**\r\n * Fetch static data from all collections using the API\r\n * @returns\r\n */\r\nexport const getCollectionsApi = async (): Promise<ApiCollectionsResponse> => {\r\n  const res = await fetch(`${API_NFT}/collections`)\r\n  if (res.ok) {\r\n    const json = await res.json()\r\n    return json\r\n  }\r\n  console.error('Failed to fetch NFT collections', res.statusText)\r\n  return null\r\n}\r\n\r\n/**\r\n * Fetch static data from a collection using the API\r\n * @returns\r\n */\r\nexport const getCollectionApi = async (collectionAddress: string): Promise<ApiCollection> => {\r\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}`)\r\n  if (res.ok) {\r\n    const json = await res.json()\r\n    return json.data\r\n  }\r\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\r\n  return null\r\n}\r\n\r\n/**\r\n * Fetch static data for all nfts in a collection using the API\r\n * @param collectionAddress\r\n * @param size\r\n * @param page\r\n * @returns\r\n */\r\nexport const getNftsFromCollectionApi = async (\r\n  collectionAddress: string,\r\n  size = 100,\r\n  page = 1,\r\n): Promise<ApiResponseCollectionTokens> => {\r\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\r\n  const requestPath = `${API_NFT}/collections/${collectionAddress}/tokens${\r\n    !isPBCollection ? `?page=${page}&size=${size}` : ``\r\n  }`\r\n\r\n  const res = await fetch(requestPath)\r\n  if (res.ok) {\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n  console.error(`API: Failed to fetch NFT tokens for ${collectionAddress} collection`, res.statusText)\r\n  return null\r\n}\r\n\r\n/**\r\n * Fetch a single NFT using the API\r\n * @param collectionAddress\r\n * @param tokenId\r\n * @returns NFT from API\r\n */\r\nexport const getNftApi = async (\r\n  collectionAddress: string,\r\n  tokenId: string,\r\n): Promise<ApiResponseSpecificToken['data']> => {\r\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}`)\r\n  if (res.ok) {\r\n    const json = await res.json()\r\n    return json.data\r\n  }\r\n\r\n  console.error(`API: Can't fetch NFT token ${tokenId} in ${collectionAddress}`, res.status)\r\n  return null\r\n}\r\n\r\n/**\r\n * Fetch a list of NFT from different collections\r\n * @param from Array of { collectionAddress: string; tokenId: string }\r\n * @returns Array of NFT from API\r\n */\r\nexport const getNftsFromDifferentCollectionsApi = async (\r\n  from: { collectionAddress: string; tokenId: string }[],\r\n): Promise<NftToken[]> => {\r\n  const promises = from.map((nft) => getNftApi(nft.collectionAddress, nft.tokenId))\r\n  const responses = await Promise.all(promises)\r\n  // Sometimes API can't find some tokens (e.g. 404 response)\r\n  // at least return the ones that returned successfully\r\n  return responses\r\n    .filter((resp) => resp)\r\n    .map((res, index) => ({\r\n      tokenId: res.tokenId,\r\n      name: res.name,\r\n      collectionName: res.collection.name,\r\n      collectionAddress: from[index].collectionAddress,\r\n      description: res.description,\r\n      attributes: res.attributes,\r\n      createdAt: res.createdAt,\r\n      updatedAt: res.updatedAt,\r\n      image: res.image,\r\n    }))\r\n}\r\n\r\n/**\r\n * SUBGRAPH HELPERS\r\n */\r\n\r\n/**\r\n * Fetch market data from a collection using the Subgraph\r\n * @returns\r\n */\r\nexport const getCollectionSg = async (collectionAddress: string): Promise<CollectionMarketDataBaseFields> => {\r\n  try {\r\n    const res = await request(\r\n      GRAPH_API_NFTMARKET,\r\n      gql`\r\n        query getCollectionData($collectionAddress: String!) {\r\n          collection(id: $collectionAddress) {\r\n            ${getCollectionBaseFields()}\r\n          }\r\n        }\r\n      `,\r\n      { collectionAddress: collectionAddress.toLowerCase() },\r\n    )\r\n    return res.collection\r\n  } catch (error) {\r\n    console.error('Failed to fetch collection', error)\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch market data from all collections using the Subgraph\r\n * @returns\r\n */\r\nexport const getCollectionsSg = async (): Promise<CollectionMarketDataBaseFields[]> => {\r\n  try {\r\n    const res = await request(\r\n      GRAPH_API_NFTMARKET,\r\n      gql`\r\n        {\r\n          collections {\r\n            ${getCollectionBaseFields()}\r\n          }\r\n        }\r\n      `,\r\n    )\r\n    return res.collections\r\n  } catch (error) {\r\n    console.error('Failed to fetch NFT collections', error)\r\n    return []\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch market data for nfts in a collection using the Subgraph\r\n * @param collectionAddress\r\n * @param first\r\n * @param skip\r\n * @returns\r\n */\r\nexport const getNftsFromCollectionSg = async (\r\n  collectionAddress: string,\r\n  first = 1000,\r\n  skip = 0,\r\n): Promise<TokenMarketData[]> => {\r\n  // Squad to be sorted by tokenId as this matches the order of the paginated API return. For PBs - get the most recent,\r\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\r\n\r\n  try {\r\n    const res = await request(\r\n      GRAPH_API_NFTMARKET,\r\n      gql`\r\n        query getNftCollectionMarketData($collectionAddress: String!) {\r\n          collection(id: $collectionAddress) {\r\n            id\r\n            nfts(orderBy:${isPBCollection ? 'updatedAt' : 'tokenId'}, skip: $skip, first: $first) {\r\n             ${getBaseNftFields()}\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      { collectionAddress: collectionAddress.toLowerCase(), skip, first },\r\n    )\r\n    return res.collection.nfts\r\n  } catch (error) {\r\n    console.error('Failed to fetch NFTs from collection', error)\r\n    return []\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\r\n * @param bunnyId - bunny id to query\r\n * @param existingTokenIds - tokens that are already loaded into redux\r\n * @returns\r\n */\r\nexport const getNftsByBunnyIdSg = async (\r\n  bunnyId: string,\r\n  existingTokenIds: string[],\r\n  orderDirection: 'asc' | 'desc',\r\n): Promise<TokenMarketData[]> => {\r\n  try {\r\n    const where =\r\n      existingTokenIds.length > 0\r\n        ? { otherId: bunnyId, isTradable: true, tokenId_not_in: existingTokenIds }\r\n        : { otherId: bunnyId, isTradable: true }\r\n    const res = await request(\r\n      GRAPH_API_NFTMARKET,\r\n      gql`\r\n        query getNftsByBunnyIdSg($collectionAddress: String!, $where: NFT_filter, $orderDirection: String!) {\r\n          nfts(first: 30, where: $where, orderBy: currentAskPrice, orderDirection: $orderDirection) {\r\n            ${getBaseNftFields()}\r\n          }\r\n        }\r\n      `,\r\n      {\r\n        collectionAddress: pancakeBunniesAddress.toLowerCase(),\r\n        where,\r\n        orderDirection,\r\n      },\r\n    )\r\n    return res.nfts\r\n  } catch (error) {\r\n    console.error(`Failed to fetch collection NFTs for bunny id ${bunnyId}`, error)\r\n    return []\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\r\n * @param bunnyId - bunny id to query\r\n * @param existingTokenIds - tokens that are already loaded into redux\r\n * @returns\r\n */\r\nexport const getMarketDataForTokenIds = async (\r\n  collectionAddress: string,\r\n  existingTokenIds: string[],\r\n): Promise<TokenMarketData[]> => {\r\n  try {\r\n    if (existingTokenIds.length === 0) {\r\n      return []\r\n    }\r\n    const res = await request(\r\n      GRAPH_API_NFTMARKET,\r\n      gql`\r\n        query getMarketDataForTokenIds($collectionAddress: String!, $where: NFT_filter) {\r\n          collection(id: $collectionAddress) {\r\n            id\r\n            nfts(first: 1000, where: $where) {\r\n              ${getBaseNftFields()}\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      {\r\n        collectionAddress: collectionAddress.toLowerCase(),\r\n        where: { tokenId_in: existingTokenIds },\r\n      },\r\n    )\r\n    return res.collection.nfts\r\n  } catch (error) {\r\n    console.error(`Failed to fetch market data for NFTs stored tokens`, error)\r\n    return []\r\n  }\r\n}\r\n\r\nexport const getNftsMarketData = async (\r\n  where = {},\r\n  first = 1000,\r\n  orderBy = 'id',\r\n  orderDirection: 'asc' | 'desc' = 'desc',\r\n  skip = 0,\r\n): Promise<TokenMarketData[]> => {\r\n  try {\r\n    const res = await request(\r\n      GRAPH_API_NFTMARKET,\r\n      gql`\r\n        query getNftsMarketData($first: Int, $skip: Int!, $where: NFT_filter, $orderBy: NFT_orderBy, $orderDirection: OrderDirection) {\r\n          nfts(where: $where, first: $first, orderBy: $orderBy, orderDirection: $orderDirection, skip: $skip) {\r\n            ${getBaseNftFields()}\r\n            transactionHistory {\r\n              ${getBaseTransactionFields()}\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      { where, first, skip, orderBy, orderDirection },\r\n    )\r\n\r\n    return res.nfts\r\n  } catch (error) {\r\n    console.error('Failed to fetch NFTs market data', error)\r\n    return []\r\n  }\r\n}\r\n\r\nexport const getAllPancakeBunniesLowestPrice = async (bunnyIds: string[]): Promise<Record<string, number>> => {\r\n  try {\r\n    const singlePancakeBunnySubQueries = bunnyIds.map(\r\n      (\r\n        bunnyId,\r\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: currentAskPrice, orderDirection: asc) {\r\n        currentAskPrice\r\n      }\r\n    `,\r\n    )\r\n    const rawResponse: Record<string, { currentAskPrice: string }[]> = await request(\r\n      GRAPH_API_NFTMARKET,\r\n      gql`\r\n        query getAllPancakeBunniesLowestPrice {\r\n          ${singlePancakeBunnySubQueries}\r\n        }\r\n      `,\r\n    )\r\n    return Object.keys(rawResponse).reduce((lowestPricesData, subQueryKey) => {\r\n      const bunnyId = subQueryKey.split('b')[1]\r\n      return {\r\n        ...lowestPricesData,\r\n        [bunnyId]:\r\n          rawResponse[subQueryKey].length > 0 ? parseFloat(rawResponse[subQueryKey][0].currentAskPrice) : Infinity,\r\n      }\r\n    }, {})\r\n  } catch (error) {\r\n    console.error('Failed to fetch PancakeBunnies lowest prices', error)\r\n    return {}\r\n  }\r\n}\r\n\r\nexport const getAllPancakeBunniesRecentUpdatedAt = async (bunnyIds: string[]): Promise<Record<string, number>> => {\r\n  try {\r\n    const singlePancakeBunnySubQueries = bunnyIds.map(\r\n      (\r\n        bunnyId,\r\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: updatedAt, orderDirection: desc) {\r\n        updatedAt\r\n      }\r\n    `,\r\n    )\r\n    const rawResponse: Record<string, { updatedAt: string }[]> = await request(\r\n      GRAPH_API_NFTMARKET,\r\n      gql`\r\n        query getAllPancakeBunniesLowestPrice {\r\n          ${singlePancakeBunnySubQueries}\r\n        }\r\n      `,\r\n    )\r\n    return Object.keys(rawResponse).reduce((updatedAtData, subQueryKey) => {\r\n      const bunnyId = subQueryKey.split('b')[1]\r\n      return {\r\n        ...updatedAtData,\r\n        [bunnyId]: rawResponse[subQueryKey].length > 0 ? Number(rawResponse[subQueryKey][0].updatedAt) : -Infinity,\r\n      }\r\n    }, {})\r\n  } catch (error) {\r\n    console.error('Failed to fetch PancakeBunnies latest market updates', error)\r\n    return {}\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the lowest price of any NFT in a collection\r\n */\r\nexport const getLowestPriceInCollection = async (collectionAddress: string) => {\r\n  try {\r\n    const response = await getNftsMarketData(\r\n      { collection: collectionAddress.toLowerCase(), isTradable: true },\r\n      1,\r\n      'currentAskPrice',\r\n      'asc',\r\n    )\r\n\r\n    if (response.length === 0) {\r\n      return 0\r\n    }\r\n\r\n    const [nftSg] = response\r\n    return parseFloat(nftSg.currentAskPrice)\r\n  } catch (error) {\r\n    console.error(`Failed to lowest price NFTs in collection ${collectionAddress}`, error)\r\n    return 0\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch user trading data for buyTradeHistory, sellTradeHistory and askOrderHistory from the Subgraph\r\n * @param where a User_filter where condition\r\n * @returns a UserActivity object\r\n */\r\nexport const getUserActivity = async (\r\n  address: string,\r\n): Promise<{ askOrderHistory: AskOrder[]; buyTradeHistory: Transaction[]; sellTradeHistory: Transaction[] }> => {\r\n  try {\r\n    const res = await request(\r\n      GRAPH_API_NFTMARKET,\r\n      gql`\r\n        query getUserActivity($address: String!) {\r\n          user(id: $address) {\r\n            buyTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\r\n              ${getBaseTransactionFields()}\r\n              nft {\r\n                ${getBaseNftFields()}\r\n              }\r\n            }\r\n            sellTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\r\n              ${getBaseTransactionFields()}\r\n              nft {\r\n                ${getBaseNftFields()}\r\n              }\r\n            }\r\n            askOrderHistory(first: 500, orderBy: timestamp, orderDirection: desc) {\r\n              id\r\n              block\r\n              timestamp\r\n              orderType\r\n              askPrice\r\n              nft {\r\n                ${getBaseNftFields()}\r\n              }\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      { address },\r\n    )\r\n\r\n    return res.user || { askOrderHistory: [], buyTradeHistory: [], sellTradeHistory: [] }\r\n  } catch (error) {\r\n    console.error('Failed to fetch user Activity', error)\r\n    return {\r\n      askOrderHistory: [],\r\n      buyTradeHistory: [],\r\n      sellTradeHistory: [],\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get the most recently listed NFTs\r\n * @param first Number of nfts to retrieve\r\n * @returns NftTokenSg[]\r\n */\r\nexport const getLatestListedNfts = async (first: number): Promise<TokenMarketData[]> => {\r\n  try {\r\n    const res = await request(\r\n      GRAPH_API_NFTMARKET,\r\n      gql`\r\n        query getLatestNftMarketData($first: Int) {\r\n          nfts(where: { isTradable: true }, orderBy: updatedAt , orderDirection: desc, first: $first) {\r\n            ${getBaseNftFields()}\r\n            collection {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      { first },\r\n    )\r\n\r\n    return res.nfts\r\n  } catch (error) {\r\n    console.error('Failed to fetch NFTs market data', error)\r\n    return []\r\n  }\r\n}\r\n\r\n/**\r\n * Filter NFTs from a collection\r\n * @param collectionAddress\r\n * @returns\r\n */\r\nexport const fetchNftsFiltered = async (\r\n  collectionAddress: string,\r\n  filters: Record<string, string | number>,\r\n): Promise<ApiTokenFilterResponse> => {\r\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/filter?${stringify(filters)}`)\r\n\r\n  if (res.ok) {\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\r\n  return null\r\n}\r\n\r\n/**\r\n * OTHER HELPERS\r\n */\r\n\r\nexport const getMetadataWithFallback = (apiMetadata: ApiResponseCollectionTokens['data'], bunnyId: string) => {\r\n  // The fallback is just for the testnet where some bunnies don't exist\r\n  return (\r\n    apiMetadata[bunnyId] ?? {\r\n      name: '',\r\n      description: '',\r\n      collection: { name: 'Pancake Bunnies' },\r\n      image: {\r\n        original: '',\r\n        thumbnail: '',\r\n      },\r\n    }\r\n  )\r\n}\r\n\r\nexport const getPancakeBunniesAttributesField = (bunnyId: string) => {\r\n  // Generating attributes field that is not returned by API\r\n  // but can be \"faked\" since objects are keyed with bunny id\r\n  return [\r\n    {\r\n      traitType: 'bunnyId',\r\n      value: bunnyId,\r\n      displayType: null,\r\n    },\r\n  ]\r\n}\r\n\r\nexport const combineApiAndSgResponseToNftToken = (\r\n  apiMetadata: ApiSingleTokenData,\r\n  marketData: TokenMarketData,\r\n  attributes: NftAttribute[],\r\n) => {\r\n  return {\r\n    tokenId: marketData.tokenId,\r\n    name: apiMetadata.name,\r\n    description: apiMetadata.description,\r\n    collectionName: apiMetadata.collection.name,\r\n    collectionAddress: pancakeBunniesAddress,\r\n    image: apiMetadata.image,\r\n    marketData,\r\n    attributes,\r\n  }\r\n}\r\n\r\nexport const fetchWalletTokenIdsForCollections = async (\r\n  account: string,\r\n  collections: ApiCollections,\r\n): Promise<TokenIdWithCollectionAddress[]> => {\r\n  const walletNftPromises = map(collections, async (collection): Promise<TokenIdWithCollectionAddress[]> => {\r\n    const { address: collectionAddress } = collection\r\n    const contract = getErc721Contract(collectionAddress)\r\n    let balanceOfResponse\r\n\r\n    try {\r\n      balanceOfResponse = await contract.balanceOf(account)\r\n    } catch (e) {\r\n      console.error(e)\r\n      return []\r\n    }\r\n\r\n    const balanceOf = balanceOfResponse.toNumber()\r\n\r\n    // User has no NFTs for this collection\r\n    if (balanceOfResponse.eq(0)) {\r\n      return []\r\n    }\r\n\r\n    const getTokenId = async (index: number) => {\r\n      try {\r\n        const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\r\n        const tokenId = tokenIdBn.toString()\r\n        return tokenId\r\n      } catch (error) {\r\n        console.error('getTokenIdAndData', error)\r\n        return null\r\n      }\r\n    }\r\n\r\n    const tokenIdPromises = []\r\n\r\n    // For each index get the tokenId\r\n    for (let i = 0; i < balanceOf; i++) {\r\n      tokenIdPromises.push(getTokenId(i))\r\n    }\r\n\r\n    const tokenIds = await Promise.all(tokenIdPromises)\r\n    const nftLocation = NftLocation.WALLET\r\n    const tokensWithCollectionAddress = tokenIds.map((tokenId) => {\r\n      return { tokenId, collectionAddress, nftLocation }\r\n    })\r\n\r\n    return tokensWithCollectionAddress\r\n  })\r\n\r\n  const walletNfts = await Promise.all(walletNftPromises)\r\n  return walletNfts.flat()\r\n}\r\n\r\n/**\r\n * Helper to combine data from the collections' API and subgraph\r\n */\r\nexport const combineCollectionData = (\r\n  collectionApiData: ApiCollection[],\r\n  collectionSgData: CollectionMarketDataBaseFields[],\r\n): Record<string, Collection> => {\r\n  const collectionsMarketObj: Record<string, CollectionMarketDataBaseFields> = collectionSgData.reduce(\r\n    (prev, current) => ({ ...prev, [current.id]: { ...current } }),\r\n    {},\r\n  )\r\n\r\n  return collectionApiData.reduce((accum, current) => {\r\n    const collectionMarket = collectionsMarketObj[current.address.toLowerCase()]\r\n    const collection: Collection = {\r\n      ...current,\r\n      ...collectionMarket,\r\n    }\r\n\r\n    if (current.name) {\r\n      collection.name = current.name\r\n    }\r\n\r\n    return {\r\n      ...accum,\r\n      [current.address]: collection,\r\n    }\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Evaluate whether a market NFT is in a users wallet, their profile picture, or on sale\r\n * @param tokenId string\r\n * @param tokenIdsInWallet array of tokenIds in wallet\r\n * @param tokenIdsForSale array of tokenIds on sale\r\n * @param profileNftId Optional tokenId of users' profile picture\r\n * @returns NftLocation enum value\r\n */\r\nexport const getNftLocationForMarketNft = (\r\n  tokenId: string,\r\n  tokenIdsInWallet: string[],\r\n  tokenIdsForSale: string[],\r\n  profileNftId?: string,\r\n): NftLocation => {\r\n  if (tokenId === profileNftId) {\r\n    return NftLocation.PROFILE\r\n  }\r\n  if (tokenIdsForSale.includes(tokenId)) {\r\n    return NftLocation.FORSALE\r\n  }\r\n  if (tokenIdsInWallet.includes(tokenId)) {\r\n    return NftLocation.WALLET\r\n  }\r\n  console.error(`Cannot determine location for tokenID ${tokenId}, defaulting to NftLocation.WALLET`)\r\n  return NftLocation.WALLET\r\n}\r\n\r\n/**\r\n * Construct complete TokenMarketData entities with a users' wallet NFT ids and market data for their wallet NFTs\r\n * @param walletNfts TokenIdWithCollectionAddress\r\n * @param marketDataForWalletNfts TokenMarketData[]\r\n * @returns TokenMarketData[]\r\n */\r\nexport const attachMarketDataToWalletNfts = (\r\n  walletNfts: TokenIdWithCollectionAddress[],\r\n  marketDataForWalletNfts: TokenMarketData[],\r\n): TokenMarketData[] => {\r\n  const walletNftsWithMarketData = walletNfts.map((walletNft) => {\r\n    const marketData = marketDataForWalletNfts.find(\r\n      (marketNft) =>\r\n        marketNft.tokenId === walletNft.tokenId &&\r\n        marketNft.collection.id.toLowerCase() === walletNft.collectionAddress.toLowerCase(),\r\n    )\r\n    return (\r\n      marketData ?? {\r\n        tokenId: walletNft.tokenId,\r\n        collection: {\r\n          id: walletNft.collectionAddress.toLowerCase(),\r\n        },\r\n        nftLocation: walletNft.nftLocation,\r\n        metadataUrl: null,\r\n        transactionHistory: null,\r\n        currentSeller: null,\r\n        isTradable: null,\r\n        currentAskPrice: null,\r\n        latestTradedPriceInBNB: null,\r\n        tradeVolumeBNB: null,\r\n        totalTrades: null,\r\n        otherId: null,\r\n      }\r\n    )\r\n  })\r\n  return walletNftsWithMarketData\r\n}\r\n\r\n/**\r\n * Attach TokenMarketData and location to NftToken\r\n * @param nftsWithMetadata NftToken[] with API metadata\r\n * @param nftsForSale  market data for nfts that are on sale (i.e. not in a user's wallet)\r\n * @param walletNfts market data for nfts in a user's wallet\r\n * @param tokenIdsInWallet array of token ids in user's wallet\r\n * @param tokenIdsForSale array of token ids of nfts that are on sale\r\n * @param profileNftId profile picture token id\r\n * @returns NFT[]\r\n */\r\nexport const combineNftMarketAndMetadata = (\r\n  nftsWithMetadata: NftToken[],\r\n  nftsForSale: TokenMarketData[],\r\n  walletNfts: TokenMarketData[],\r\n  tokenIdsInWallet: string[],\r\n  tokenIdsForSale: string[],\r\n  profileNftId?: string,\r\n): NftToken[] => {\r\n  const completeNftData = nftsWithMetadata.map<NftToken>((nft) => {\r\n    // Get metadata object\r\n    const isOnSale = nftsForSale.filter((forSaleNft) => forSaleNft.tokenId === nft.tokenId).length > 0\r\n    let marketData\r\n    if (isOnSale) {\r\n      marketData = nftsForSale.find((marketNft) => marketNft.tokenId === nft.tokenId)\r\n    } else {\r\n      marketData = walletNfts.find((marketNft) => marketNft.tokenId === nft.tokenId)\r\n    }\r\n    const location = getNftLocationForMarketNft(nft.tokenId, tokenIdsInWallet, tokenIdsForSale, profileNftId)\r\n    return { ...nft, marketData, location }\r\n  })\r\n  return completeNftData\r\n}\r\n\r\n/**\r\n * Get in-wallet, on-sale & profile pic NFT metadata, complete with market data for a given account\r\n * @param account\r\n * @param collections\r\n * @param profileNftWithCollectionAddress\r\n * @returns Promise<NftToken[]>\r\n */\r\nexport const getCompleteAccountNftData = async (\r\n  account: string,\r\n  collections: ApiCollections,\r\n  profileNftWithCollectionAddress?: TokenIdWithCollectionAddress,\r\n): Promise<NftToken[]> => {\r\n  const walletNftIdsWithCollectionAddress = await fetchWalletTokenIdsForCollections(account, collections)\r\n  if (profileNftWithCollectionAddress?.tokenId) {\r\n    walletNftIdsWithCollectionAddress.unshift(profileNftWithCollectionAddress)\r\n  }\r\n\r\n  const uniqueCollectionAddresses = uniq(\r\n    walletNftIdsWithCollectionAddress.map((walletNftId) => walletNftId.collectionAddress),\r\n  )\r\n\r\n  const walletNftsByCollection = uniqueCollectionAddresses.map((collectionAddress) => {\r\n    return {\r\n      collectionAddress,\r\n      idWithCollectionAddress: walletNftIdsWithCollectionAddress.filter(\r\n        (walletNft) => walletNft.collectionAddress === collectionAddress,\r\n      ),\r\n    }\r\n  })\r\n\r\n  const walletMarketDataRequests = walletNftsByCollection.map((walletNftByCollection) => {\r\n    const tokenIdIn = walletNftByCollection.idWithCollectionAddress.map((walletNft) => walletNft.tokenId)\r\n    return getNftsMarketData({\r\n      tokenId_in: tokenIdIn,\r\n      collection: walletNftByCollection.collectionAddress.toLowerCase(),\r\n    })\r\n  })\r\n\r\n  const walletMarketDataResponses = await Promise.all(walletMarketDataRequests)\r\n  const walletMarketData = walletMarketDataResponses.flat()\r\n\r\n  const walletNftsWithMarketData = attachMarketDataToWalletNfts(walletNftIdsWithCollectionAddress, walletMarketData)\r\n\r\n  const walletTokenIds = walletNftIdsWithCollectionAddress\r\n    .filter((walletNft) => {\r\n      // Profile Pic NFT is no longer wanted in this array, hence the filter\r\n      return profileNftWithCollectionAddress?.tokenId !== walletNft.tokenId\r\n    })\r\n    .map((nft) => nft.tokenId)\r\n\r\n  const marketDataForSaleNfts = await getNftsMarketData({ currentSeller: account.toLowerCase() })\r\n  const tokenIdsForSale = marketDataForSaleNfts.map((nft) => nft.tokenId)\r\n\r\n  const forSaleNftIds = marketDataForSaleNfts.map((nft) => {\r\n    return { collectionAddress: nft.collection.id, tokenId: nft.tokenId }\r\n  })\r\n\r\n  const metadataForAllNfts = await getNftsFromDifferentCollectionsApi([\r\n    ...forSaleNftIds,\r\n    ...walletNftIdsWithCollectionAddress,\r\n  ])\r\n\r\n  const completeNftData = combineNftMarketAndMetadata(\r\n    metadataForAllNfts,\r\n    marketDataForSaleNfts,\r\n    walletNftsWithMarketData,\r\n    walletTokenIds,\r\n    tokenIdsForSale,\r\n    profileNftWithCollectionAddress?.tokenId,\r\n  )\r\n\r\n  return completeNftData\r\n}\r\n\r\n/**\r\n * Fetch distribution information for a collection\r\n * @returns\r\n */\r\nexport const getCollectionDistributionApi = async <T>(collectionAddress: string): Promise<T> => {\r\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/distribution`)\r\n  if (res.ok) {\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress} distribution`, res.statusText)\r\n  return null\r\n}\r\n","export const getBaseNftFields = () => `\r\n  tokenId\r\n  metadataUrl\r\n  currentAskPrice\r\n  currentSeller\r\n  latestTradedPriceInBNB\r\n  tradeVolumeBNB\r\n  totalTrades\r\n  isTradable\r\n  updatedAt\r\n  otherId\r\n  collection {\r\n    id\r\n  }\r\n`\r\n\r\nexport const getBaseTransactionFields = () => `\r\n  id\r\n  block\r\n  timestamp\r\n  askPrice\r\n  netPrice\r\n  withBNB\r\n  buyer {\r\n    id\r\n  }\r\n  seller {\r\n    id\r\n  }\r\n`\r\n\r\nexport const getCollectionBaseFields = () => `\r\n  id\r\n  name\r\n  symbol\r\n  active\r\n  totalTrades\r\n  totalVolumeBNB\r\n  numberTokensListed\r\n  creatorAddress\r\n  tradingFee\r\n  creatorFee\r\n  whitelistChecker\r\n`\r\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\n\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\r\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\r\n\r\n  return useMemo(\r\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\r\n    [token, allowance],\r\n  )\r\n}\r\n\r\nexport default useTokenAllowance\r\n","import { MaxUint256 } from '@ethersproject/constants'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport useTokenAllowance from './useTokenAllowance'\r\nimport { Field } from '../state/swap/actions'\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\r\nimport { calculateGasMargin } from '../utils'\r\nimport { useTokenContract } from './useContract'\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount,\r\n  spender?: string,\r\n): [ApprovalState, () => Promise<void>] {\r\n  const { account } = useActiveWeb3React()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\r\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily')\r\n      return\r\n    }\r\n    if (!token) {\r\n      console.error('no token')\r\n      return\r\n    }\r\n\r\n    if (!tokenContract) {\r\n      console.error('tokenContract is null')\r\n      return\r\n    }\r\n\r\n    if (!amountToApprove) {\r\n      console.error('missing amount to approve')\r\n      return\r\n    }\r\n\r\n    if (!spender) {\r\n      console.error('no spender')\r\n      return\r\n    }\r\n\r\n    let useExact = false\r\n\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens who restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\r\n    })\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return callWithGasPrice(\r\n      tokenContract,\r\n      'approve',\r\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\r\n      {\r\n        gasLimit: calculateGasMargin(estimatedGas),\r\n      },\r\n    )\r\n      .then((response: TransactionResponse) => {\r\n        addTransaction(response, {\r\n          summary: `Approve ${amountToApprove.currency.symbol}`,\r\n          approval: { tokenAddress: token.address, spender },\r\n        })\r\n      })\r\n      .catch((error: Error) => {\r\n        console.error('Failed to approve token', error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\r\n\r\n  return [approvalState, approve]\r\n}\r\n\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\r\n  const amountToApprove = useMemo(\r\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\r\n    [trade, allowedSlippage],\r\n  )\r\n\r\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\r\n}\r\n","import { BigNumberish } from 'ethers'\r\n\r\n// Collections -> Nfts -> Transactions\r\n// Users -> Nft tokens IDs\r\n\r\n// TODO: Handle the error state on the UI\r\nexport enum NFTMarketInitializationState {\r\n  UNINITIALIZED = 'UNINITIALIZED',\r\n  INITIALIZED = 'INITIALIZED',\r\n  ERROR = 'ERROR',\r\n}\r\n\r\nexport enum UserNftInitializationState {\r\n  UNINITIALIZED = 'UNINITIALIZED',\r\n  INITIALIZING = 'INITIALIZING',\r\n  INITIALIZED = 'INITIALIZED',\r\n  ERROR = 'ERROR',\r\n}\r\n\r\nexport enum NftFilterLoadingState {\r\n  IDLE = 'IDLE',\r\n  LOADING = 'LOADING',\r\n}\r\n\r\nexport interface State {\r\n  initializationState: NFTMarketInitializationState\r\n  data: {\r\n    collections: Record<string, Collection> // string is the address\r\n    nfts: Record<string, NftToken[]> // string is the collection address\r\n    filters: Record<string, NftFilter> // string is the collection address\r\n    loadingState: {\r\n      isUpdatingPancakeBunnies: boolean\r\n      latestPancakeBunniesUpdateAt: number\r\n    }\r\n    users: Record<string, User> // string is the address\r\n    user: UserNftsState\r\n  }\r\n}\r\n\r\nexport interface UserNftsState {\r\n  userNftsInitializationState: UserNftInitializationState\r\n  nfts: NftToken[]\r\n  activity: UserActivity\r\n}\r\n\r\nexport interface Transaction {\r\n  id: string\r\n  block: string\r\n  timestamp: string\r\n  askPrice: string\r\n  netPrice: string\r\n  buyer: { id: string }\r\n  seller: { id: string }\r\n  withBNB: boolean\r\n  nft?: TokenMarketData\r\n}\r\n\r\nexport enum AskOrderType {\r\n  NEW = 'NEW',\r\n  MODIFY = 'MODIFY',\r\n  CANCEL = 'CANCEL',\r\n}\r\n\r\nexport interface AskOrder {\r\n  id: string\r\n  block: string\r\n  timestamp: string\r\n  askPrice: string\r\n  orderType: AskOrderType\r\n  nft?: TokenMarketData\r\n}\r\n\r\nexport interface Image {\r\n  original: string\r\n  thumbnail: string\r\n  mp4?: string\r\n  webm?: string\r\n  gif?: string\r\n}\r\n\r\nexport enum NftLocation {\r\n  FORSALE = 'For Sale',\r\n  PROFILE = 'Profile Pic',\r\n  WALLET = 'In Wallet',\r\n}\r\n\r\n// Market data regarding specific token ID, acquired via subgraph\r\nexport interface TokenMarketData {\r\n  tokenId: string\r\n  metadataUrl: string\r\n  currentAskPrice: string\r\n  currentSeller: string\r\n  latestTradedPriceInBNB: string\r\n  tradeVolumeBNB: string\r\n  totalTrades: string\r\n  isTradable: boolean\r\n  otherId: string\r\n  collection?: {\r\n    id: string\r\n  }\r\n  updatedAt?: string\r\n  transactionHistory?: Transaction[]\r\n}\r\n\r\n// Represents single NFT token, either Squad-like NFT or single PancakeBunny.\r\nexport interface NftToken {\r\n  tokenId: string\r\n  name: string\r\n  description: string\r\n  collectionName: string\r\n  collectionAddress: string\r\n  image: Image\r\n  attributes?: NftAttribute[]\r\n  createdAt?: string // API createdAt\r\n  updatedAt?: string // API updatedAt\r\n  marketData?: TokenMarketData\r\n  location?: NftLocation\r\n  meta?: Record<string, string | number>\r\n}\r\n\r\nexport interface NftFilter {\r\n  loadingState: NftFilterLoadingState\r\n  activeFilters: Record<string, NftAttribute>\r\n  showOnlyOnSale: boolean\r\n  ordering: {\r\n    field: string\r\n    direction: 'asc' | 'desc'\r\n  }\r\n}\r\n\r\nexport interface TokenIdWithCollectionAddress {\r\n  collectionAddress: string\r\n  tokenId: string\r\n  nftLocation?: NftLocation\r\n}\r\n\r\nexport interface NftAttribute {\r\n  traitType: string\r\n  value: string | number\r\n  displayType: string\r\n}\r\n\r\n// Internal type used to refer to a collection\r\n// Most fields are populated from API (via ApiCollection type)\r\nexport interface Collection {\r\n  id: string\r\n  address: string\r\n  name: string\r\n  description?: string\r\n  symbol: string\r\n  active: boolean\r\n  totalVolumeBNB: string\r\n  numberTokensListed: string\r\n  tradingFee: string\r\n  creatorFee: string\r\n  owner: string\r\n  totalSupply: string\r\n  verified: boolean\r\n  avatar: string\r\n  banner: {\r\n    large: string\r\n    small: string\r\n  }\r\n  attributes?: NftAttribute[]\r\n}\r\n\r\nexport interface ApiCollections {\r\n  [key: string]: Collection\r\n}\r\n\r\nexport interface User {\r\n  address: string\r\n  numberTokensListed: BigNumberish\r\n  numberTokensPurchased: BigNumberish\r\n  numberTokensSold: BigNumberish\r\n  nfts: Record<string, BigNumberish> // String is an address, BigNumberish is a tokenID\r\n}\r\n\r\n/**\r\n * API RESPONSES\r\n */\r\n\r\nexport interface ApiCollection {\r\n  address: string\r\n  owner: string\r\n  name: string\r\n  description: string\r\n  symbol: string\r\n  totalSupply: string\r\n  verified: boolean\r\n  createdAt: string\r\n  updatedAt: string\r\n  avatar: string\r\n  banner: {\r\n    large: string\r\n    small: string\r\n  }\r\n  attributes?: NftAttribute[] // returned for specific collection but not for all collections\r\n}\r\n\r\n// Get all collections\r\n// ${API_NFT}/collections/\r\nexport interface ApiCollectionsResponse {\r\n  total: number\r\n  data: ApiCollection[]\r\n}\r\n\r\n// Get single collection\r\n// ${API_NFT}/collections/${collectionAddress}\r\nexport interface ApiSingleCollectionResponse {\r\n  data: ApiCollection\r\n}\r\n\r\n// Get single collection\r\n// ${API_NFT}/collections/${collectionAddress}\r\nexport interface ApiTokenFilterResponse {\r\n  total: number\r\n  data: Record<string, ApiSingleTokenData>\r\n}\r\n\r\nexport interface ApiSingleTokenData {\r\n  name: string\r\n  description: string\r\n  image: Image\r\n  collection: {\r\n    name: string\r\n  }\r\n  attributes?: NftAttribute[]\r\n  tokenId?: string\r\n}\r\n\r\n// Get tokens within collection\r\n// ${API_NFT}/collections/${collectionAddress}/tokens\r\nexport interface ApiResponseCollectionTokens {\r\n  total: number\r\n  attributesDistribution: Record<string, number>\r\n  data: Record<string, ApiSingleTokenData>\r\n}\r\n\r\n// Get specific token data\r\n// ${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}\r\nexport interface ApiResponseSpecificToken {\r\n  data: {\r\n    tokenId: string\r\n    name: string\r\n    description: string\r\n    image: Image\r\n    createdAt: string\r\n    updatedAt: string\r\n    attributes: NftAttribute[]\r\n    collection: {\r\n      name: string\r\n    }\r\n  }\r\n}\r\n\r\n// ${API_NFT}/collections/${collectionAddress}/distribution\r\nexport interface ApiCollectionDistribution {\r\n  total: number\r\n  data: Record<string, Record<string, number>>\r\n}\r\n\r\nexport interface ApiCollectionDistributionPB {\r\n  total: number\r\n  data: Record<string, number>\r\n}\r\n\r\n/**\r\n * SUBGRAPH RESPONSES\r\n */\r\n\r\nexport interface CollectionMarketDataBaseFields {\r\n  id: string\r\n  name: string\r\n  symbol: string\r\n  active: boolean\r\n  totalTrades: string\r\n  totalVolumeBNB: string\r\n  numberTokensListed: string\r\n  creatorAddress: string\r\n  tradingFee: string\r\n  creatorFee: string\r\n  whitelistChecked: string\r\n}\r\n\r\nexport interface UserActivity {\r\n  askOrderHistory: AskOrder[]\r\n  buyTradeHistory: Transaction[]\r\n  sellTradeHistory: Transaction[]\r\n  initializationState: UserNftInitializationState\r\n}\r\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\r\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\r\n\r\nexport const UNSUPPORTED_LIST_URLS: string[] = []\r\n\r\n// lower index == higher priority for token import\r\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\r\n  PANCAKE_TOP100,\r\n  PANCAKE_EXTENDED,\r\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\r\n]\r\n\r\n// default lists to be 'active' aka searched across\r\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\r\n","import { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\r\nimport { AppState } from '../index'\r\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\r\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\r\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\r\n\r\ntype TagDetails = Tags[keyof Tags]\r\nexport interface TagInfo extends TagDetails {\r\n  id: string\r\n}\r\n\r\n// use ordering of default list of lists to assign priority\r\nfunction sortByListPriority(urlA: string, urlB: string) {\r\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\r\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\r\n\r\n  // need reverse order to make sure mapping includes top priority last\r\n  if (first < second) return 1\r\n  if (first > second) return -1\r\n  return 0\r\n}\r\n\r\n/**\r\n * Token instances created from token info.\r\n */\r\nexport class WrappedTokenInfo extends Token {\r\n  public readonly tokenInfo: TokenInfo\r\n\r\n  public readonly tags: TagInfo[]\r\n\r\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\r\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\r\n    this.tokenInfo = tokenInfo\r\n    this.tags = tags\r\n  }\r\n\r\n  public get logoURI(): string | undefined {\r\n    return this.tokenInfo.logoURI\r\n  }\r\n}\r\n\r\nexport type TokenAddressMap = Readonly<\r\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\r\n>\r\n\r\n/**\r\n * An empty result, useful as a default.\r\n */\r\nconst EMPTY_LIST: TokenAddressMap = {\r\n  [ChainId.MAINNET]: {},\r\n  [ChainId.TESTNET]: {},\r\n}\r\n\r\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\r\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\r\n\r\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\r\n  const result = listCache?.get(list)\r\n  if (result) return result\r\n\r\n  const map = list.tokens.reduce<TokenAddressMap>(\r\n    (tokenMap, tokenInfo) => {\r\n      const tags: TagInfo[] =\r\n        tokenInfo.tags\r\n          ?.map((tagId) => {\r\n            if (!list.tags?.[tagId]) return undefined\r\n            return { ...list.tags[tagId], id: tagId }\r\n          })\r\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\r\n      const token = new WrappedTokenInfo(tokenInfo, tags)\r\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\r\n      return {\r\n        ...tokenMap,\r\n        [token.chainId]: {\r\n          ...tokenMap[token.chainId],\r\n          [token.address]: {\r\n            token,\r\n            list,\r\n          },\r\n        },\r\n      }\r\n    },\r\n    { ...EMPTY_LIST },\r\n  )\r\n  listCache?.set(list, map)\r\n  return map\r\n}\r\n\r\nexport function useAllLists(): {\r\n  readonly [url: string]: {\r\n    readonly current: TokenList | null\r\n    readonly pendingUpdate: TokenList | null\r\n    readonly loadingRequestId: string | null\r\n    readonly error: string | null\r\n  }\r\n} {\r\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n}\r\n\r\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\r\n  return {\r\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\r\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\r\n  }\r\n}\r\n\r\n// merge tokens contained within lists from urls\r\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\r\n  const lists = useAllLists()\r\n\r\n  return useMemo(() => {\r\n    if (!urls) return EMPTY_LIST\r\n\r\n    return (\r\n      urls\r\n        .slice()\r\n        // sort by priority so top priority goes last\r\n        .sort(sortByListPriority)\r\n        .reduce((allTokens, currentUrl) => {\r\n          const current = lists[currentUrl]?.current\r\n          if (!current) return allTokens\r\n          try {\r\n            const newTokens = Object.assign(listToTokenMap(current))\r\n            return combineMaps(allTokens, newTokens)\r\n          } catch (error) {\r\n            console.error('Could not show token list due to error', error)\r\n            return allTokens\r\n          }\r\n        }, EMPTY_LIST)\r\n    )\r\n  }, [lists, urls])\r\n}\r\n\r\n// filter out unsupported lists\r\nexport function useActiveListUrls(): string[] | undefined {\r\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\r\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\r\n  )\r\n}\r\n\r\nexport function useInactiveListUrls(): string[] {\r\n  const lists = useAllLists()\r\n  const allActiveListUrls = useActiveListUrls()\r\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\r\n}\r\n\r\n// get all the tokens from active lists, combine with local default tokens\r\nexport function useCombinedActiveList(): TokenAddressMap {\r\n  const activeListUrls = useActiveListUrls()\r\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\r\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\r\n  return combineMaps(activeTokens, defaultTokenMap)\r\n}\r\n\r\n// all tokens from inactive lists\r\nexport function useCombinedInactiveList(): TokenAddressMap {\r\n  const allInactiveListUrls: string[] = useInactiveListUrls()\r\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\r\n}\r\n\r\n// used to hide warnings on import for default tokens\r\nexport function useDefaultTokenList(): TokenAddressMap {\r\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\r\n}\r\n\r\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\r\nexport function useUnsupportedTokenList(): TokenAddressMap {\r\n  // get hard coded unsupported tokens\r\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\r\n\r\n  // get any loaded unsupported tokens\r\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\r\n\r\n  // format into one token address map\r\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\r\n}\r\n\r\nexport function useIsListActive(url: string): boolean {\r\n  const activeListUrls = useActiveListUrls()\r\n  return Boolean(activeListUrls?.includes(url))\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\n// import masterChefABI from 'config/abi/masterchef.json'\r\nimport masterChefABI from 'config/abi/metaRewards.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\r\nimport { getSouschefV2Contract, getMasterchefContract } from 'utils/contractHelpers'\r\nimport tokens from 'config/constants/tokens'\r\n// import { getMasterchefContract } from 'utils/contractHelpers'\r\n\r\nconst masterChefContract = getMasterchefContract()\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n  const starts = await masterChefContract.startBlock\r\n  const ends = await masterChefContract.endBlock\r\n\r\n  // const starts = await multicall(sousChefABI, callsStartBlock)\r\n  // const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  // pools: 3, \r\n\r\n  // const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\n\r\n  // const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n  //   return {\r\n  //     address: poolConfig.stakingToken.address,\r\n  //     name: 'balanceOf',\r\n  //     params: [getAddress(poolConfig.contractAddress)],\r\n  //   }\r\n  // })\r\n\r\n  const callsPoolInfo = [\r\n    {\r\n      address: getAddress(nonBnbPools[0].contractAddress),\r\n      name: 'totalAllocPoint',\r\n    },\r\n    {\r\n      address: getAddress(nonBnbPools[0].contractAddress),\r\n      name: 'tokenPerBlock',\r\n    }\r\n  ]\r\n\r\n  const [totalAllocPoint, tokenPerBlock] = await multicall(masterChefABI, callsPoolInfo)\r\n  // zlt / zlt pool\r\n  const nonBnbPoolsTotalStaked = [];\r\n  const allocPoint = [];\r\n\r\n  const forCallData = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  const calls = forCallData.map((pool) => {\r\n    return {\r\n      address: getAddress(pool.contractAddress),\r\n      name: 'poolInfo',\r\n      params: [pool.sousId],\r\n    }\r\n  })\r\n\r\n  const rawPoolInfos = await multicall(masterChefABI, calls)\r\n\r\n  /*\r\n  const poolInfo0 = await masterChefContract.poolInfo(poolsConfig[0].sousId)\r\n  const allocPoint0 = poolInfo0.allocPoint.toString()\r\n  allocPoint.push(allocPoint0)\r\n  nonBnbPoolsTotalStaked.push(poolInfo0.balance.toString());\r\n\r\n  const poolInfo1 = await masterChefContract.poolInfo(poolsConfig[1].sousId)\r\n  const allocPoint1 = poolInfo1.allocPoint.toString()\r\n  allocPoint.push(allocPoint1)\r\n  nonBnbPoolsTotalStaked.push(poolInfo1.balance.toString());\r\n\r\n  const poolInfo2 = await masterChefContract.poolInfo(poolsConfig[2].sousId)\r\n  const allocPoint2 = poolInfo2.allocPoint.toString()\r\n  allocPoint.push(allocPoint2)\r\n  nonBnbPoolsTotalStaked.push(poolInfo2.balance.toString());\r\n  */\r\n\r\n  // const nonBnbPoolsTotalStaked = nonBnbPools.map((poolConfig) => {\r\n  //   let poolInfo = await masterChefContract.poolInfo(poolConfig.sousId)\r\n  //   return poolInfo.balance.toString();\r\n  // })\r\n\r\n  // const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: rawPoolInfos[index].balance.toString(),\r\n      rate: new BigNumber(rawPoolInfos[index].allocPoint.toString()).div(new BigNumber(totalAllocPoint[0].toString())),\r\n      tokenPerBlock: new BigNumber(tokenPerBlock[0].toString()).div(BIG_TEN.pow(18)),\r\n      harvestInterval: rawPoolInfos[index].harvestInterval.toString()\r\n    })),\r\n  ]\r\n}\r\n\r\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\r\n  try {\r\n    const sousContract = getSouschefV2Contract(sousId)\r\n    const stakingLimit = await sousContract.poolLimitPerUser()\r\n    return new BigNumber(stakingLimit.toString())\r\n  } catch (error) {\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\nexport const fetchPoolsStakingLimits = async (\r\n  poolsWithStakingLimit: number[],\r\n): Promise<{ [key: string]: BigNumber }> => {\r\n  const validPools = poolsConfig\r\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\r\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\r\n\r\n  // Get the staking limit for each valid pool\r\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\r\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\r\n  const stakingLimits = await Promise.all(stakingLimitPromises)\r\n\r\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\r\n    return {\r\n      ...accum,\r\n      [validPools[index].sousId]: stakingLimit,\r\n    }\r\n  }, {})\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\n// import masterChefABI from 'config/abi/masterchef.json'\r\nimport masterChefABI from 'config/abi/metaRewards.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterchefContract } from 'utils/contractHelpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 6)\r\nconst masterChefContract = getMasterchefContract()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((pool) => ({\r\n    address: pool.stakingToken.address,\r\n    name: 'allowance',\r\n    params: [account, getAddress(pool.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((pool) => ({\r\n    address: pool.stakingToken.address,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [p.sousId, account],\r\n  }))\r\n  const userInfo = await multicall(masterChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  // const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\r\n\r\n  // return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\r\n  return { ...stakedBalances }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  // const calls = nonMasterPools.map((p) => ({\r\n  //   address: getAddress(p.contractAddress),\r\n  //   name: 'pendingToken',\r\n  //   params: [p.sousId, account],\r\n  // }))\r\n\r\n  // zlt / zlt pool\r\n  const res = [];\r\n  const pendingToken3 = await masterChefContract.pendingToken('3', account)\r\n  res.push(pendingToken3.toString());\r\n  const pendingToken4 = await masterChefContract.pendingToken('4', account)\r\n  res.push(pendingToken4.toString());\r\n  const pendingToken5 = await masterChefContract.pendingToken('5', account)\r\n  res.push(pendingToken5.toString());\r\n\r\n  // const res = await multicall(masterChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n  \r\n  // return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\r\n  return { ...pendingRewards }\r\n}\r\n\r\nexport const fetchUserLastDepositTimes = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [p.sousId, account],\r\n  }))\r\n  const userInfos = await multicall(masterChefABI, calls)\r\n  const lastDepositTimes = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: userInfos[index].lastDepositTime ? new BigNumber(userInfos[index].lastDepositTime._hex).toJSON() : BIG_ZERO,\r\n    }),\r\n    {},\r\n  )\r\n\r\n  return { ...lastDepositTimes }\r\n}\r\n\r\nexport const fetchUserCanHarvests = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'canHarvest',\r\n    params: [p.sousId, account],\r\n  }))\r\n  const rawCanHarvests = await multicall(masterChefABI, calls)\r\n  const resCanHarvests = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: rawCanHarvests[index][0]\r\n    }),\r\n    {},\r\n  )\r\n\r\n  return { ...resCanHarvests }\r\n}","import BigNumber from 'bignumber.js'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nexport const fetchPublicVaultData = async () => {\r\n  try {\r\n    const calls = [\r\n      'getPricePerFullShare',\r\n      'totalShares',\r\n      'calculateHarvestCakeRewards',\r\n      'calculateTotalPendingCakeRewards',\r\n    ].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\r\n      cakeVaultAbi,\r\n      calls,\r\n    )\r\n\r\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\r\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\r\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\r\n    return {\r\n      totalShares: totalSharesAsBigNumber.toJSON(),\r\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\r\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\r\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\r\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      totalShares: null,\r\n      pricePerFullShare: null,\r\n      totalCakeInVault: null,\r\n      estimatedCakeBountyReward: null,\r\n      totalPendingCakeHarvest: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchVaultFees = async () => {\r\n  try {\r\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\r\n\r\n    return {\r\n      performanceFee: performanceFee.toNumber(),\r\n      callFee: callFee.toNumber(),\r\n      withdrawalFee: withdrawalFee.toNumber(),\r\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchPublicVaultData\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nconst fetchVaultUser = async (account: string) => {\r\n  try {\r\n    const userContractResponse = await cakeVaultContract.userInfo(account)\r\n    return {\r\n      isLoading: false,\r\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\r\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\r\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\r\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      isLoading: true,\r\n      userShares: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n      cakeAtLastUserAction: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchVaultUser\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\r\nimport { getPoolApr } from 'utils/apr'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n  fetchUserLastDepositTimes,\r\n  fetchUserCanHarvests,\r\n} from './fetchPoolsUser'\r\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\r\nimport fetchVaultUser from './fetchVaultUser'\r\nimport { getTokenPricesFromFarm } from './helpers'\r\n\r\nconst initialState: PoolsState = {\r\n  data: [...poolsConfig],\r\n  userDataLoaded: false,\r\n  cakeVault: {\r\n    totalShares: null,\r\n    pricePerFullShare: null,\r\n    totalCakeInVault: null,\r\n    estimatedCakeBountyReward: null,\r\n    totalPendingCakeHarvest: null,\r\n    fees: {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    },\r\n    userData: {\r\n      isLoading: true,\r\n      userShares: null,\r\n      cakeAtLastUserAction: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n    },\r\n  },\r\n}\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\r\n  // const blockLimits = await fetchPoolsBlockLimits()\r\n  const blockLimits = [];\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const prices = getTokenPricesFromFarm(getState().farms.data)\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\r\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\r\n\r\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\r\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\r\n\r\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\r\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\r\n\r\n\r\n    const apr = !isPoolFinished\r\n      ? getPoolApr(\r\n        stakingTokenPrice,\r\n        earningTokenPrice,\r\n        totalStaking.rate.toNumber(),\r\n        getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\r\n        totalStaking.tokenPerBlock.toNumber()\r\n        // parseFloat(pool.tokenPerBlock),\r\n      )\r\n      : 0\r\n\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n      stakingTokenPrice,\r\n      earningTokenPrice,\r\n      apr,\r\n      isFinished: isPoolFinished,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\r\n  const poolsWithStakingLimit = getState()\r\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\r\n    .map((pool) => pool.sousId)\r\n\r\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\r\n\r\n  const stakingLimitData = poolsConfig.map((pool) => {\r\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\r\n      return { sousId: pool.sousId }\r\n    }\r\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\r\n    return {\r\n      sousId: pool.sousId,\r\n      stakingLimit: stakingLimit.toJSON(),\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(stakingLimitData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync =\r\n  (account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const allowances = await fetchPoolsAllowance(account)\r\n      const stakingTokenBalances = await fetchUserBalances(account)\r\n      const stakedBalances = await fetchUserStakeBalances(account)\r\n      const pendingRewards = await fetchUserPendingRewards(account)\r\n      const lastDepositTimes = await fetchUserLastDepositTimes(account)\r\n      const canHarvests = await fetchUserCanHarvests(account)\r\n\r\n      const userData = poolsConfig.map((pool) => ({\r\n        sousId: pool.sousId,\r\n        allowance: allowances[pool.sousId],\r\n        stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n        stakedBalance: stakedBalances[pool.sousId],\r\n        pendingReward: pendingRewards[pool.sousId],\r\n        lastDepositTime: lastDepositTimes[pool.sousId],\r\n        canHarvest: canHarvests[pool.sousId]\r\n      }))\r\n\r\n      dispatch(setPoolsUserData(userData))\r\n    }\r\n\r\nexport const updateUserAllowance =\r\n  (sousId: number, account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const allowances = await fetchPoolsAllowance(account)\r\n      dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n    }\r\n\r\nexport const updateUserBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const tokenBalances = await fetchUserBalances(account)\r\n      dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n    }\r\n\r\nexport const updateUserStakedBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const stakedBalances = await fetchUserStakeBalances(account)\r\n      dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n    }\r\n\r\nexport const updateUserPendingReward =\r\n  (sousId: number, account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const pendingRewards = await fetchUserPendingRewards(account)\r\n      dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n    }\r\n\r\nexport const updateUserLastDepositTime =\r\n  (sousId: number, account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const lastDepositTimes = await fetchUserLastDepositTimes(account)\r\n      dispatch(updatePoolsUserData({ sousId, field: 'lastDepositTime', value: lastDepositTimes[sousId] }))\r\n    }\r\n\r\nexport const updateUserCanHarvest =\r\n  (sousId: number, account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const canHarvests = await fetchUserCanHarvests(account)\r\n      dispatch(updatePoolsUserData({ sousId, field: 'canHarvest', value: canHarvests[sousId] }))\r\n    }\r\n\r\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\r\n  const publicVaultInfo = await fetchPublicVaultData()\r\n  return publicVaultInfo\r\n})\r\n\r\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\r\n  const vaultFees = await fetchVaultFees()\r\n  return vaultFees\r\n})\r\n\r\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\r\n  'cakeVault/fetchUser',\r\n  async ({ account }) => {\r\n    const userData = await fetchVaultUser(account)\r\n    return userData\r\n  },\r\n)\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: SerializedPool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n      state.userDataLoaded = true\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n\r\n      if (index >= 0) {\r\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Vault public data that updates frequently\r\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\r\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\r\n    })\r\n    // Vault fees\r\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\r\n      const fees = action.payload\r\n      state.cakeVault = { ...state.cakeVault, fees }\r\n    })\r\n    // Vault user data\r\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\r\n      const userData = action.payload\r\n      userData.isLoading = false\r\n      state.cakeVault = { ...state.cakeVault, userData }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\nexport default PoolsSlice.reducer\r\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\n\r\nexport const fetchTokenList: Readonly<{\r\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\r\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\r\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\r\n}> = {\r\n  pending: createAction('lists/fetchTokenList/pending'),\r\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\r\n  rejected: createAction('lists/fetchTokenList/rejected'),\r\n}\r\n// add and remove from list options\r\nexport const addList = createAction<string>('lists/addList')\r\nexport const removeList = createAction<string>('lists/removeList')\r\n\r\n// select which lists to search across from loaded lists\r\nexport const enableList = createAction<string>('lists/enableList')\r\nexport const disableList = createAction<string>('lists/disableList')\r\n\r\n// versioning\r\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\r\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\n\r\nconst useTheme = () => {\r\n  const [isDark, toggleTheme] = useThemeManager()\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, theme, toggleTheme }\r\n}\r\n\r\nexport default useTheme\r\n","import React from 'react'\r\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\ninterface Props extends BoxProps {\r\n  text: string | React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nconst QuestionWrapper = styled.div`\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\r\n\r\n  return (\r\n    <Box {...props}>\r\n      {tooltipVisible && tooltip}\r\n      <QuestionWrapper ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\r\n      </QuestionWrapper>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default QuestionHelper\r\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from '@pancakeswap/sdk'\r\nimport {\r\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\r\n  ALLOWED_PRICE_IMPACT_HIGH,\r\n  ALLOWED_PRICE_IMPACT_LOW,\r\n  ALLOWED_PRICE_IMPACT_MEDIUM,\r\n} from '../config/constants'\r\n\r\nimport { Field } from '../state/swap/actions'\r\nimport { basisPointsToPercent } from './index'\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\r\n\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\r\n  priceImpactWithoutFee: Percent | undefined\r\n  realizedLPFee: CurrencyAmount | undefined | null\r\n} {\r\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\r\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\r\n  const realizedLPFee = !trade\r\n    ? undefined\r\n    : ONE_HUNDRED_PERCENT.subtract(\r\n        trade.route.pairs.reduce<Fraction>(\r\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\r\n          ONE_HUNDRED_PERCENT,\r\n        ),\r\n      )\r\n\r\n  // remove lp fees from price impact\r\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\r\n\r\n  // the x*y=k impact\r\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\r\n    : undefined\r\n\r\n  // the amount of the input that accrues to LPs\r\n  const realizedLPFeeAmount =\r\n    realizedLPFee &&\r\n    trade &&\r\n    (trade.inputAmount instanceof TokenAmount\r\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\r\n\r\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\r\n}\r\n\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(\r\n  trade: Trade | undefined,\r\n  allowedSlippage: number,\r\n): { [field in Field]?: CurrencyAmount } {\r\n  const pct = basisPointsToPercent(allowedSlippage)\r\n  return {\r\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\r\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\r\n  }\r\n}\r\n\r\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\r\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\r\n  return 0\r\n}\r\n\r\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\r\n  if (!trade) {\r\n    return ''\r\n  }\r\n  return inverted\r\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\r\n        trade.outputAmount.currency.symbol\r\n      }`\r\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\r\n        trade.inputAmount.currency.symbol\r\n      }`\r\n}\r\n\r\n/**\r\n * Helper to multiply a Price object by an arbitrary amount\r\n */\r\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\r\n  if (!price) {\r\n    return 0\r\n  }\r\n\r\n  return parseFloat(price.toSignificant(significantDigits)) * amount\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface Call {\r\n  address: string\r\n  callData: string\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-')\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`)\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  }\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners',\r\n)\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners',\r\n)\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults',\r\n)\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number\r\n  calls: Call[]\r\n  fetchingBlockNumber: number\r\n}>('multicall/errorFetchingMulticallResults')\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number\r\n  blockNumber: number\r\n  results: {\r\n    [callKey: string]: string | null\r\n  }\r\n}>('multicall/updateMulticallResults')\r\n","import BigNumber from 'bignumber.js'\r\nimport { Token } from '@pancakeswap/sdk'\r\n\r\nexport type TranslatableText =\r\n  | string\r\n  | {\r\n      key: string\r\n      data?: {\r\n        [key: string]: string | number\r\n      }\r\n    }\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface SerializedToken {\r\n  chainId: number\r\n  address: string\r\n  decimals: number\r\n  symbol?: string\r\n  name?: string\r\n  projectLink?: string\r\n}\r\n\r\nexport enum PoolIds {\r\n  poolBasic = 'poolBasic',\r\n  poolUnlimited = 'poolUnlimited',\r\n}\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\ninterface IfoPoolInfo {\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  distributionRatio: number // Range [0-1]\r\n}\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  currency: Token\r\n  token: Token\r\n  releaseBlockNumber: number\r\n  articleUrl: string\r\n  campaignId: string\r\n  tokenOfferingPrice: number\r\n  version: number\r\n  [PoolIds.poolBasic]?: IfoPoolInfo\r\n  [PoolIds.poolUnlimited]: IfoPoolInfo\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n  'AUTO' = 'Auto',\r\n}\r\n\r\ninterface FarmConfigBaseProps {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\r\n  token: SerializedToken\r\n  quoteToken: SerializedToken\r\n}\r\n\r\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\r\n  token: Token\r\n  quoteToken: Token\r\n}\r\n\r\ninterface PoolConfigBaseProps {\r\n  sousId: number\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  enableEmergencyWithdraw?: boolean\r\n  harvestInterval: number\r\n}\r\n\r\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\r\n  earningToken: SerializedToken\r\n  stakingToken: SerializedToken\r\n}\r\n\r\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\r\n  earningToken: Token\r\n  stakingToken: Token\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n\r\nexport type PageMeta = {\r\n  title: string\r\n  description?: string\r\n  image?: string\r\n}\r\n\r\nexport enum LotteryStatus {\r\n  PENDING = 'pending',\r\n  OPEN = 'open',\r\n  CLOSE = 'close',\r\n  CLAIMABLE = 'claimable',\r\n}\r\n\r\nexport interface LotteryTicket {\r\n  id: string\r\n  number: string\r\n  status: boolean\r\n  rewardBracket?: number\r\n  roundId?: string\r\n  cakeReward?: string\r\n}\r\n\r\nexport interface LotteryTicketClaimData {\r\n  ticketsWithUnclaimedRewards: LotteryTicket[]\r\n  allWinningTickets: LotteryTicket[]\r\n  cakeTotal: BigNumber\r\n  roundId: string\r\n}\r\n\r\n// Farm Auction\r\nexport interface FarmAuctionBidderConfig {\r\n  account: string\r\n  farmName: string\r\n  tokenAddress: string\r\n  quoteToken: Token\r\n  tokenName: string\r\n  projectSite?: string\r\n  lpAddress?: string\r\n}\r\n\r\n// Note: this status is slightly different compared to 'status' comfing\r\n// from Farm Auction smart contract\r\nexport enum AuctionStatus {\r\n  ToBeAnnounced, // No specific dates/blocks to display\r\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\r\n  Open, // Auction is open for bids\r\n  Finished, // Auction end block is reached, bidding is not possible\r\n  Closed, // Auction was closed in smart contract\r\n}\r\n\r\nexport interface Auction {\r\n  id: number\r\n  status: AuctionStatus\r\n  startBlock: number\r\n  startDate: Date\r\n  endBlock: number\r\n  endDate: Date\r\n  auctionDuration: number\r\n  initialBidAmount: number\r\n  topLeaderboard: number\r\n  leaderboardThreshold: BigNumber\r\n}\r\n\r\nexport interface BidderAuction {\r\n  id: number\r\n  amount: BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface Bidder extends FarmAuctionBidderConfig {\r\n  position?: number\r\n  isTopPosition: boolean\r\n  samePositionAsAbove: boolean\r\n  amount: BigNumber\r\n}\r\n\r\nexport interface ConnectedBidder {\r\n  account: string\r\n  isWhitelisted: boolean\r\n  bidderData?: Bidder\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string\r\n  from: string\r\n  contractAddress: string\r\n  transactionIndex: number\r\n  blockHash: string\r\n  transactionHash: string\r\n  blockNumber: number\r\n  status?: number\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  from: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  claim?: { recipient: string }\r\n  summary?: string\r\n}>('transactions/addTransaction')\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  receipt: SerializableTransactionReceipt\r\n}>('transactions/finalizeTransaction')\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  blockNumber: number\r\n}>('transactions/checkedTransaction')\r\n","import { serializeTokens } from './tokens'\r\nimport { SerializedPoolConfig, PoolCategory } from './types'\r\n\r\nconst serializedTokens = serializeTokens()\r\n\r\nconst pools: SerializedPoolConfig[] = [\r\n  {\r\n    sousId: 3,\r\n    stakingToken: serializedTokens.zlt,\r\n    earningToken: serializedTokens.zlt,\r\n    contractAddress: {\r\n      97: '',\r\n      // 97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0x4817444E6162a3BA10b6E42D9ac85F857b3c49b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5',\r\n    harvestInterval: 1296000,\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n  },\r\n  // {\r\n  //   sousId: 4,\r\n  //   stakingToken: serializedTokens.zlt,\r\n  //   earningToken: serializedTokens.zlt,\r\n  //   contractAddress: {\r\n  //     97: '',\r\n  //     56: '0x368cd43661B9cE6D24370D17C0B0E5C2B79e7439',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   harvest: true,\r\n  //   sortOrder: 999,\r\n  //   tokenPerBlock: '5',\r\n  //   harvestInterval: 2592000\r\n  // },\r\n  // {\r\n  //   sousId: 5,\r\n  //   stakingToken: serializedTokens.zlt,\r\n  //   earningToken: serializedTokens.zlt,\r\n  //   contractAddress: {\r\n  //     97: '',\r\n  //     56: '0x368cd43661B9cE6D24370D17C0B0E5C2B79e7439',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   harvest: true,\r\n  //   sortOrder: 999,\r\n  //   tokenPerBlock: '40',\r\n  //   harvestInterval: 5184000,\r\n  // },\r\n  /*\r\n  {\r\n    sousId: 239,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.sfund,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7F103689cabe17C2F70DA6faa298045d72a943b8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0311',\r\n  },\r\n  {\r\n    sousId: 238,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.qi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbd52ef04DB1ad1c68A8FA24Fa71f2188978ba617',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.736',\r\n  },\r\n  {\r\n    sousId: 237,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.kart,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x73bB10B89091f15e8FeD4d6e9EBa6415df6acb21',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1897',\r\n  },\r\n  {\r\n    sousId: 236,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.porto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdD52FAB121376432DBCBb47592742F9d86CF8952',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0578',\r\n  },\r\n  {\r\n    sousId: 235,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dvi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b8751B7141Efa7a9917f9C6fea2CEA071af5eE7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.2516',\r\n  },\r\n  {\r\n    sousId: 234,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.jgn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xfDFb4DbE94916F9f55dBC2c14Ea8B3e386eCD9F9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.5233',\r\n  },\r\n  {\r\n    sousId: 233,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.eternal,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc28c400F2B675b25894FA632205ddec71E432288',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.002893',\r\n  },\r\n  {\r\n    sousId: 232,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xwg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x79f5f7DDADeFa0A9e850DFFC4fBa77e5172Fe701',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.3379',\r\n  },\r\n  {\r\n    sousId: 231,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dar,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9b861A078B2583373A7a3EEf815bE1A39125Ae08',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.3148',\r\n  },\r\n  {\r\n    sousId: 230,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.fina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa35caA9509a2337E22C54C929146D5F7f6515794',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.06944',\r\n  },\r\n  {\r\n    sousId: 229,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bmon,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6e63B2B96c77532ea7ec2B3D3BFA9C8e1d383f3C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.0254',\r\n  },\r\n  {\r\n    sousId: 228,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dkt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xFef4B7a0194159d89717Efa592384d42B28D3926',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09838',\r\n  },\r\n  {\r\n    sousId: 227,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2D26e4b9a5F19eD5BB7AF221DC02432D31DEB4dA',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.2152',\r\n  },\r\n  {\r\n    sousId: 226,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lazio,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd008416c2c9cf23843bd179aa3cefedb4c8d1607',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0694',\r\n  },\r\n  {\r\n    sousId: 225,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.sps,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd9b63bb6c62fe2e9a641699a91e680994b8b0081',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.40046',\r\n  },\r\n  {\r\n    sousId: 224,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mcb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xCc2D359c3a99d9cfe8e6F31230142efF1C828e6D',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00706',\r\n  },\r\n  {\r\n    sousId: 223,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.rpg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x65C0940C50A3C98AEEc95a115Ae62E9804588713',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01863',\r\n  },\r\n  {\r\n    sousId: 222,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.beta,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6f660c58723922c6f866a058199ff4881019b4b5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 221,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nft,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8d018823d13c56d62ffb795151a9e629c21e047b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '173727',\r\n  },\r\n  {\r\n    sousId: 220,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.chess,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4D1Ec426d0d7fb6bF344Dd372d0502EDD71c8d88',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0861',\r\n  },\r\n  {\r\n    sousId: 219,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tlos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xCB41a72067c227D6Ed7bc7CFAcd13eCe47Dfe5E9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3616',\r\n  },\r\n  {\r\n    sousId: 218,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.stephero,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xcecba456fefe5b18d43df23419e7ab755b436655',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1851',\r\n  },\r\n  {\r\n    sousId: 217,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.217',\r\n  },\r\n  {\r\n    sousId: 216,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cvp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.14',\r\n  },\r\n  {\r\n    sousId: 215,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.qbt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.412',\r\n  },\r\n  {\r\n    sousId: 214,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.naos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1736',\r\n  },\r\n  {\r\n    sousId: 213,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pha,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.28',\r\n  },\r\n  {\r\n    sousId: 212,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bel,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.101',\r\n  },\r\n  {\r\n    sousId: 211,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.9837',\r\n  },\r\n  {\r\n    sousId: 210,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pots,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0868',\r\n  },\r\n  {\r\n    sousId: 209,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tusd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.5787',\r\n  },\r\n  {\r\n    sousId: 208,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.revv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.331',\r\n  },\r\n  {\r\n    sousId: 207,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '263',\r\n  },\r\n  {\r\n    sousId: 206,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.skill,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00289',\r\n  },\r\n  {\r\n    sousId: 205,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.win,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1815.39',\r\n  },\r\n  {\r\n    sousId: 204,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.if,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.02835',\r\n  },\r\n  {\r\n    sousId: 203,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.sps,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '12.86',\r\n  },\r\n  {\r\n    sousId: 202,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.c98,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 201,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.axs,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00744',\r\n  },\r\n  {\r\n    sousId: 200,\r\n    stakingToken: serializedTokens.axs,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00992',\r\n  },\r\n  {\r\n    sousId: 199,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pmon,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.02696',\r\n  },\r\n  {\r\n    sousId: 198,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.trx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '9.6643',\r\n  },\r\n  {\r\n    sousId: 197,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.chess,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4286',\r\n  },\r\n  {\r\n    sousId: 196,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.titan,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08912',\r\n  },\r\n  {\r\n    sousId: 195,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.harmony,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.0092',\r\n  },\r\n  {\r\n    sousId: 194,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mask,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.06423',\r\n  },\r\n  {\r\n    sousId: 193,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dvi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.7233',\r\n  },\r\n  {\r\n    sousId: 192,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.gum,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.67129',\r\n  },\r\n  {\r\n    sousId: 191,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.adx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.7523',\r\n  },\r\n  {\r\n    sousId: 190,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.suter,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '69.9074',\r\n  },\r\n  {\r\n    sousId: 189,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bscpad,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3877',\r\n  },\r\n  {\r\n    sousId: 188,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.rabbit,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.993',\r\n  },\r\n  {\r\n    sousId: 187,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.waultx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '7.9108',\r\n  },\r\n  {\r\n    sousId: 186,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.wex,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '11.574',\r\n  },\r\n  {\r\n    sousId: 185,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.form,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.4467',\r\n  },\r\n  {\r\n    sousId: 184,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.orbs,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.8946',\r\n  },\r\n  {\r\n    sousId: 183,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.$dg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00135',\r\n  },\r\n  {\r\n    sousId: 182,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.woo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3854',\r\n  },\r\n  {\r\n    sousId: 181,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.woo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0003854',\r\n  },\r\n  {\r\n    sousId: 180,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.htb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '5.2083',\r\n  },\r\n  {\r\n    sousId: 179,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.jgn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1001',\r\n  },\r\n  {\r\n    sousId: 178,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dft,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 177,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hai,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.3078',\r\n  },\r\n  {\r\n    sousId: 176,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.o3,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.107638',\r\n  },\r\n  {\r\n    sousId: 175,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ampl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.398',\r\n  },\r\n  {\r\n    sousId: 174,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4843',\r\n  },\r\n  {\r\n    sousId: 173,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6741',\r\n  },\r\n  {\r\n    sousId: 172,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.marsh,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1108',\r\n  },\r\n  {\r\n    sousId: 171,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mbox,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4803',\r\n  },\r\n  {\r\n    sousId: 170,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ata,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 169,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.27777',\r\n  },\r\n  {\r\n    sousId: 168,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bcfx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6944',\r\n  },\r\n  {\r\n    sousId: 167,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.qkc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '15.9143',\r\n  },\r\n  {\r\n    sousId: 166,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ktn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01215',\r\n  },\r\n  {\r\n    sousId: 165,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mtrg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.05613',\r\n  },\r\n  {\r\n    sousId: 164,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tusd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.5787',\r\n  },\r\n  {\r\n    sousId: 163,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.vrt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '40.5092',\r\n  },\r\n  {\r\n    sousId: 162,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.kalm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0868',\r\n  },\r\n  {\r\n    sousId: 161,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ez,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01736',\r\n  },\r\n  {\r\n    sousId: 160,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.kalm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    tokenPerBlock: '0.00868',\r\n  },\r\n  {\r\n    sousId: 159,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.popen,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.19097',\r\n  },\r\n  {\r\n    sousId: 158,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.023148',\r\n  },\r\n  {\r\n    sousId: 157,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.well,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2025',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 156,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.deri,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '1.6087',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 155,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.chr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '1.655',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 154,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cyc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00015914',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 153,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xend,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.31828',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 152,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hget,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.03553',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 151,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hotcross,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 150,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.rfox,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 149,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.wmass,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.24942',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 148,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ubxt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.4074',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 147,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.8935',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 146,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.τdoge,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.868',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 145,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pmon,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01261',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 144,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.one,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '57.87',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 143,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.fine,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1342',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 142,\r\n    stakingToken: serializedTokens.doge,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01388',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 141,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bmxx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01331',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 140,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oin,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 139,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hyfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.8935',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 138,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.kun,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.23148',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 137,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.math,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.15798',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 136,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ust,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.17361',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 135,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.win,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '462.96',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 134,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.trx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '4.0509',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 133,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '79.86',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 132,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lmt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.66145',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 131,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pnt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09548',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 130,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xmark,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0298',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 129,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4861',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 128,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hakka,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 127,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0000031',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 126,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.003472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 125,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bbadger,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00265278',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 124,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bdigg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000403',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 123,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4629',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 122,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xed,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 121,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cgg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.10918',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 120,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.perl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 119,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.arpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.949',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 118,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.11284',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 117,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dexe,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.009837',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 116,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dfd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.46296',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 115,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.alpaca,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.22743',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 114,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.τbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000608',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 113,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.τbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000608',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 112,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swingby,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.21527',\r\n  },\r\n  {\r\n    sousId: 111,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xed,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 110,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hakka,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 109,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cgg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.10918',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 108,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mix,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3721',\r\n  },\r\n  {\r\n    sousId: 107,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.suter,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '15.3356',\r\n  },\r\n  {\r\n    sousId: 106,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.broobee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '14.4675',\r\n  },\r\n  {\r\n    sousId: 105,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hzn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6944',\r\n  },\r\n  {\r\n    sousId: 104,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.alpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.23495',\r\n  },\r\n  {\r\n    sousId: 103,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.perl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 102,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tlm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '17.361',\r\n  },\r\n  {\r\n    sousId: 101,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.jgn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08796',\r\n  },\r\n  {\r\n    sousId: 100,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.eps,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.07716',\r\n  },\r\n  {\r\n    sousId: 99,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.arpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.949',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 98,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.itam,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.096',\r\n  },\r\n  {\r\n    sousId: 97,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4629',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 96,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tko,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n  },\r\n  {\r\n    sousId: 95,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.apys,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09953',\r\n  },\r\n  {\r\n    sousId: 94,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hoo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.489',\r\n  },\r\n  {\r\n    sousId: 93,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.11284',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 92,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.easy,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0072338',\r\n  },\r\n  {\r\n    sousId: 91,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nrv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.15046',\r\n  },\r\n  {\r\n    sousId: 90,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dego,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00405',\r\n  },\r\n  {\r\n    sousId: 89,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.gum,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08912',\r\n  },\r\n  {\r\n    sousId: 88,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0000031',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 87,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dft,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6811',\r\n  },\r\n  {\r\n    sousId: 86,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swth,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.3148',\r\n  },\r\n  {\r\n    sousId: 85,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.003472',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 84,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.zil,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.0995',\r\n  },\r\n  {\r\n    sousId: 83,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pcws,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00434',\r\n  },\r\n  {\r\n    sousId: 82,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bbadger,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00265278',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 81,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bdigg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000403',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 80,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.2893',\r\n  },\r\n  {\r\n    sousId: 79,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mir,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01273',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 78,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mir,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01273',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 77,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.trade,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4484',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 76,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dusk,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4629',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 75,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bifi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00007234',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 74,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.txl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.434027',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 73,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5.787',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 72,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bunny,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00289',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 71,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.alice,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.14467',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 70,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.for,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '2.8935',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 69,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bux,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5787',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 68,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nuls,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0868',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 67,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.belt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00868',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 66,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4861',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 65,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0001157',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 64,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dexe,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.009837',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 63,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bel,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0549',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 62,\r\n    stakingToken: serializedTokens.tpt,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0462',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 61,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tpt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '3.616',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 60,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.watch,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.3472',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 59,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xmark,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0413',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 58,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bmxx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00248',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 57,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.iotx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '6.365',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 56,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bor,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.000395',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 55,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bopen,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0723',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 54,\r\n    stakingToken: serializedTokens.sushi,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0367',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 53,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dodo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0578',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 52,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swingby,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.13',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 51,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bry,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1157',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 50,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.zee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1736',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 49,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swgb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.899',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 48,\r\n    stakingToken: serializedTokens.comp,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.055',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 47,\r\n    stakingToken: serializedTokens.comp,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.55',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 46,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.sfp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.6',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 45,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.983',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 44,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0983',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 43,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lit,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.231',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 42,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hget,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0138',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 41,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bdo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.075',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 40,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.egld,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.001215',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 39,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ust,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1157',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 38,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.wsote,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.23',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 37,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.front,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2546',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 36,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.helmet,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.81',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 35,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btcst,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.011574',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 34,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bscx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.17361',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 33,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ten,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.05787',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 32,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.balbt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4166',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 31,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.asr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 30,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.atm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 29,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.og,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 28,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.reef,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '115.74',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 27,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ditto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01157',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 26,\r\n    stakingToken: serializedTokens.twt,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.248',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 24,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.juv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 25,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.psg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 21,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.vai,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.104',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 20,\r\n    stakingToken: serializedTokens.bnb,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\r\n    },\r\n    poolCategory: PoolCategory.BINANCE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 19,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bnb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0041',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 18,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.blink,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '23.14',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 17,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.blink,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '23.14',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 16,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.unfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02893',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 15,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.twt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 14,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hard,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.346',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 13,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.broobee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '12.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 12,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.stax,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 11,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nar,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '1',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 10,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nya,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '10',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 9,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ctk,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 8,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.twt,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '20',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 7,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.inj,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.25',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  */\r\n]\r\n\r\nexport default pools\r\n","import { useContext } from 'react'\r\nimport { ToastsContext } from 'contexts/ToastsContext'\r\n\r\nconst useToast = () => {\r\n  const toastContext = useContext(ToastsContext)\r\n\r\n  if (toastContext === undefined) {\r\n    throw new Error('Toasts context undefined')\r\n  }\r\n\r\n  return toastContext\r\n}\r\n\r\nexport default useToast\r\n","import { ethers } from 'ethers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\n\r\nexport const simpleRpcProvider = new ethers.providers.StaticJsonRpcProvider(RPC_URL)\r\n\r\nexport default null\r\n","import { useEffect, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { farmsConfig } from 'config/constants'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { deserializeToken } from 'state/user/hooks/helpers'\r\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\r\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\r\n\r\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\r\n    canHarvest: farm.userData ? farm.userData.canHarvest : false,\r\n    lastDepositTime: farm.userData ? new BigNumber(farm.userData.lastDepositTime) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\r\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\r\n \r\n  return {\r\n    lpAddresses,\r\n    lpSymbol,\r\n    pid,\r\n    dual,\r\n    multiplier,\r\n    isCommunity,\r\n    quoteTokenPriceBusd,\r\n    tokenPriceBusd,\r\n    token: deserializeToken(farm.token),\r\n    quoteToken: deserializeToken(farm.quoteToken),\r\n    userData: deserializeFarmUserData(farm),\r\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\r\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\r\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\r\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\r\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\r\n    tokenPerBlock: farm.tokenPerBlock ? new BigNumber(farm.tokenPerBlock) : BIG_ZERO,\r\n    withdrawLockPeriod: farm.withdrawLockPeriod ? new BigNumber(farm.withdrawLockPeriod) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const usePollFarmsPublicData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n  }, [includeArchive, dispatch, slowRefresh])\r\n}\r\n\r\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\r\n    }\r\n  }, [includeArchive, dispatch, slowRefresh, account])\r\n}\r\n\r\n/**\r\n * Fetches the \"core\" farm data used globally\r\n * 251 = CAKE-BNB LP\r\n * 252 = BUSD-BNB LP\r\n */\r\nexport const usePollCoreFarmData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\r\n  }, [dispatch, fastRefresh])\r\n}\r\n\r\nexport const useFarms = (): DeserializedFarmsState => {\r\n  const farms = useSelector((state: State) => state.farms)\r\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\r\n  const { loadArchivedFarmsData, userDataLoaded } = farms\r\n  return {\r\n    loadArchivedFarmsData,\r\n    userDataLoaded,\r\n    data: deserializedFarmsData,\r\n  }\r\n}\r\n\r\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return deserializeFarm(farm)\r\n}\r\n\r\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return deserializeFarm(farm)\r\n}\r\n\r\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\r\n  const { userData } = useFarmFromPid(pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings, canHarvest, lastDepositTime } = userData\r\n  return {\r\n    allowance,\r\n    tokenBalance,\r\n    stakedBalance,\r\n    earnings,\r\n    canHarvest,\r\n    lastDepositTime\r\n  }\r\n}\r\n\r\n// Return the base token price for a farm, from a given pid\r\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\r\n  const farm = useFarmFromPid(pid)\r\n  return farm && new BigNumber(farm.tokenPriceBusd)\r\n}\r\n\r\nexport const useLpTokenPrice = (symbol: string) => {\r\n  const farm = useFarmFromLpSymbol(symbol)\r\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\r\n  let lpTokenPrice = BIG_ZERO\r\n\r\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\r\n    // Total value of base token in LP\r\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\r\n    // Double it to get overall value in LP\r\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\r\n    // Divide total value of all tokens, by the number of LP tokens\r\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\r\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\r\n  }\r\n\r\n  return lpTokenPrice\r\n}\r\n\r\n// /!\\ Deprecated , use the BUSD hook in /hooks\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n/*  const cakeBnbFarm = useFarmFromPid(251) */\r\n  const cakeBnbFarm = useFarmFromPid(0)\r\n\r\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\r\n  const cakePriceBusd = useMemo(() => {\r\n    return new BigNumber(cakePriceBusdAsString)\r\n  }, [cakePriceBusdAsString])\r\n\r\n  return cakePriceBusd\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ConnectWalletButton = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {t('Connect Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ConnectWalletButton\r\n","import useInterval from 'hooks/useInterval'\r\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { setBlock } from '.'\r\nimport { State } from '../types'\r\n\r\nexport const usePollBlockNumber = (refreshTime = 6000) => {\r\n  const dispatch = useAppDispatch()\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  useInterval(\r\n    () => {\r\n      const fetchBlock = async () => {\r\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n        dispatch(setBlock(blockNumber))\r\n      }\r\n\r\n      fetchBlock()\r\n    },\r\n    refreshTime,\r\n    isWindowVisible,\r\n  )\r\n}\r\n\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n","import { gql } from 'graphql-request'\r\n\r\nconst lastPairDayId = gql`\r\n  query lastPairDayId($pairId: String) {\r\n    pairDayDatas(first: 1, where: { pairAddress: $pairId }, orderBy: date, orderDirection: desc) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport default lastPairDayId\r\n","import { gql } from 'graphql-request'\r\n\r\nconst pairHourDatas = gql`\r\n  query pairHourDatas($pairId: String, $first: Int) {\r\n    pairHourDatas(first: $first, where: { pair: $pairId }, orderBy: hourStartUnix, orderDirection: desc) {\r\n      id\r\n      hourStartUnix\r\n      reserve0\r\n      reserve1\r\n      reserveUSD\r\n      pair {\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport default pairHourDatas\r\n","import { gql } from 'graphql-request'\r\n\r\nconst pairDayDatasByIdsQuery = gql`\r\n  query pairDayDatasByIdsQuery($pairIds: [String]) {\r\n    pairDayDatas(where: { id_in: $pairIds }, orderBy: date, orderDirection: desc) {\r\n      id\r\n      date\r\n      reserve0\r\n      reserve1\r\n      reserveUSD\r\n      pairAddress {\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport default pairDayDatasByIdsQuery\r\n","import times from 'lodash/times'\r\nimport { PairDataTimeWindowEnum } from '../types'\r\nimport { timeWindowGapMapping } from './constants'\r\nimport { PairDayDatasResponse, PairHoursDatasResponse } from './types'\r\n\r\ntype getPairSequentialIdParams = {\r\n  id: string\r\n  pairId: string\r\n}\r\nexport const getPairSequentialId = ({ id, pairId }: getPairSequentialIdParams) => id.replace(`${pairId}-`, '')\r\n\r\ntype getPairHoursIdsByTimeWindowParams = {\r\n  pairAddress: string\r\n  pairLastId: string\r\n  timeWindow: PairDataTimeWindowEnum\r\n  idsCount: number\r\n}\r\n\r\nexport const getIdsByTimeWindow = ({\r\n  pairAddress,\r\n  pairLastId,\r\n  timeWindow,\r\n  idsCount,\r\n}: getPairHoursIdsByTimeWindowParams) => {\r\n  const pairLastIdAsNumber = Number(pairLastId)\r\n  if (timeWindow === PairDataTimeWindowEnum.DAY) {\r\n    return []\r\n  }\r\n  return times(idsCount, (value) => `${pairAddress}-${pairLastIdAsNumber - value * timeWindowGapMapping[timeWindow]}`)\r\n}\r\n\r\nexport const pairHasEnoughLiquidity = (\r\n  data: PairHoursDatasResponse | PairDayDatasResponse | null,\r\n  timeWindow: PairDataTimeWindowEnum,\r\n) => {\r\n  const liquidityThreshold = 10000\r\n  switch (timeWindow) {\r\n    case PairDataTimeWindowEnum.DAY:\r\n    case PairDataTimeWindowEnum.WEEK: {\r\n      const amountOfDataPoints = (data as PairHoursDatasResponse)?.pairHourDatas?.length ?? 1\r\n      const totalUSD = (data as PairHoursDatasResponse)?.pairHourDatas?.reduce((totalLiquidity, fetchPairEntry) => {\r\n        return totalLiquidity + parseFloat(fetchPairEntry.reserveUSD)\r\n      }, 0)\r\n      return totalUSD / amountOfDataPoints > liquidityThreshold\r\n    }\r\n    case PairDataTimeWindowEnum.MONTH:\r\n    case PairDataTimeWindowEnum.YEAR: {\r\n      const amountOfDataPoints = (data as PairDayDatasResponse)?.pairDayDatas?.length ?? 1\r\n      const totalUSD = (data as PairDayDatasResponse)?.pairDayDatas?.reduce((totalLiquidity, fetchPairEntry) => {\r\n        return totalLiquidity + parseFloat(fetchPairEntry.reserveUSD)\r\n      }, 0)\r\n      return totalUSD / amountOfDataPoints > liquidityThreshold\r\n    }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import { gql } from 'graphql-request'\r\n\r\nconst pairDayDatas = gql`\r\n  query pairDayDatas($pairId: String, $first: Int) {\r\n    pairDayDatas(first: $first, where: { pairAddress: $pairId }, orderBy: date, orderDirection: desc) {\r\n      id\r\n      date\r\n      reserve0\r\n      reserve1\r\n      reserveUSD\r\n      pairAddress {\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport default pairDayDatas\r\n","import { gql } from 'graphql-request'\r\n\r\nconst pairHourDatasByIds = gql`\r\n  query pairHourDatasByIds($pairIds: [String]) {\r\n    pairHourDatas(where: { id_in: $pairIds }, orderBy: hourStartUnix, orderDirection: desc) {\r\n      id\r\n      hourStartUnix\r\n      reserve0\r\n      reserve1\r\n      reserveUSD\r\n      pair {\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport default pairHourDatasByIds\r\n","import { gql } from 'graphql-request'\r\n\r\nconst lastPairHourId = gql`\r\n  query lastPairHourId($pairId: String) {\r\n    pairHourDatas(first: 1, where: { pair: $pairId }, orderBy: hourStartUnix, orderDirection: desc) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport default lastPairHourId\r\n","import { INFO_CLIENT } from 'config/constants/endpoints'\r\nimport requestWithTimeout from 'utils/requestWithTimeout'\r\nimport { GraphQLClient } from 'graphql-request'\r\nimport lastPairDayId from '../queries/lastPairDayId'\r\nimport pairHourDatas from '../queries/pairHourDatas'\r\nimport pairDayDatasByIdsQuery from '../queries/pairDayDatasByIdsQuery'\r\nimport { PairDataTimeWindowEnum } from '../types'\r\nimport { timeWindowIdsCountMapping, getHeaders } from './constants'\r\nimport {\r\n  fetchPairDataParams,\r\n  LastPairDayIdResponse,\r\n  LastPairHourIdResponse,\r\n  PairDayDatasResponse,\r\n  PairHoursDatasResponse,\r\n} from './types'\r\nimport { getIdsByTimeWindow, getPairSequentialId } from './utils'\r\nimport pairDayDatas from '../queries/pairDayDatas'\r\nimport pairHourDatasByIds from '../queries/pairHourDatasByIds'\r\nimport lastPairHourId from '../queries/lastPairHourId'\r\n\r\nconst fetchPairPriceData = async ({ pairId, timeWindow }: fetchPairDataParams) => {\r\n  const client = new GraphQLClient(INFO_CLIENT, { headers: getHeaders(INFO_CLIENT) })\r\n\r\n  try {\r\n    switch (timeWindow) {\r\n      case PairDataTimeWindowEnum.DAY: {\r\n        const data = await requestWithTimeout<PairHoursDatasResponse>(client, pairHourDatas, {\r\n          pairId,\r\n          first: timeWindowIdsCountMapping[timeWindow],\r\n        })\r\n        return { data, error: false }\r\n      }\r\n      case PairDataTimeWindowEnum.WEEK: {\r\n        const lastPairHourIdData = await requestWithTimeout<LastPairHourIdResponse>(client, lastPairHourId, { pairId })\r\n        const lastId = lastPairHourIdData?.pairHourDatas ? lastPairHourIdData.pairHourDatas[0]?.id : null\r\n        if (!lastId) {\r\n          return { data: { pairHourDatas: [] }, error: false }\r\n        }\r\n        const pairHourId = getPairSequentialId({ id: lastId, pairId })\r\n        const pairHourIds = getIdsByTimeWindow({\r\n          pairAddress: pairId,\r\n          pairLastId: pairHourId,\r\n          timeWindow,\r\n          idsCount: timeWindowIdsCountMapping[timeWindow],\r\n        })\r\n\r\n        const pairHoursData = await requestWithTimeout<PairHoursDatasResponse>(client, pairHourDatasByIds, {\r\n          pairIds: pairHourIds,\r\n        })\r\n        return { data: pairHoursData, error: false }\r\n      }\r\n      case PairDataTimeWindowEnum.MONTH: {\r\n        const data = await requestWithTimeout<PairHoursDatasResponse>(client, pairDayDatas, {\r\n          pairId,\r\n          first: timeWindowIdsCountMapping[timeWindow],\r\n        })\r\n        return { data, error: false }\r\n      }\r\n      case PairDataTimeWindowEnum.YEAR: {\r\n        const lastPairDayIdData = await requestWithTimeout<LastPairDayIdResponse>(client, lastPairDayId, { pairId })\r\n        const lastId = lastPairDayIdData?.pairDayDatas ? lastPairDayIdData.pairDayDatas[0]?.id : null\r\n        if (!lastId) {\r\n          return { data: { pairDayDatas: [] }, error: false }\r\n        }\r\n        const pairLastId = getPairSequentialId({ id: lastId, pairId })\r\n        const pairDayIds = getIdsByTimeWindow({\r\n          pairAddress: pairId,\r\n          pairLastId,\r\n          timeWindow,\r\n          idsCount: timeWindowIdsCountMapping[timeWindow],\r\n        })\r\n        const pairDayData = await requestWithTimeout<PairDayDatasResponse>(client, pairDayDatasByIdsQuery, {\r\n          pairIds: pairDayIds,\r\n        })\r\n        return { data: pairDayData, error: false }\r\n      }\r\n      default:\r\n        return { data: null, error: false }\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to fetch price chart data', error)\r\n    return { error: true }\r\n  }\r\n}\r\n\r\nexport default fetchPairPriceData\r\n","import { fromUnixTime } from 'date-fns'\r\nimport { PairDayDatasResponse, PairHoursDatasResponse } from './fetch/types'\r\nimport { DerivedPairDataNormalized, PairDataNormalized, PairDataTimeWindowEnum, PairPricesNormalized } from './types'\r\n\r\nexport const normalizeChartData = (\r\n  data: PairHoursDatasResponse | PairDayDatasResponse | null,\r\n  timeWindow: PairDataTimeWindowEnum,\r\n) => {\r\n  switch (timeWindow) {\r\n    case PairDataTimeWindowEnum.DAY:\r\n    case PairDataTimeWindowEnum.WEEK:\r\n      return (data as PairHoursDatasResponse)?.pairHourDatas?.map((fetchPairEntry) => ({\r\n        time: fetchPairEntry.hourStartUnix,\r\n        token0Id: fetchPairEntry.pair.token0.id,\r\n        token1Id: fetchPairEntry.pair.token1.id,\r\n        reserve0: parseFloat(fetchPairEntry.reserve0),\r\n        reserve1: parseFloat(fetchPairEntry.reserve1),\r\n      }))\r\n    case PairDataTimeWindowEnum.MONTH:\r\n    case PairDataTimeWindowEnum.YEAR:\r\n      return (data as PairDayDatasResponse)?.pairDayDatas?.map((fetchPairEntry) => ({\r\n        time: fetchPairEntry.date,\r\n        token0Id: fetchPairEntry.pairAddress.token0.id,\r\n        token1Id: fetchPairEntry.pairAddress.token1.id,\r\n        reserve0: parseFloat(fetchPairEntry.reserve0),\r\n        reserve1: parseFloat(fetchPairEntry.reserve1),\r\n      }))\r\n    default:\r\n      return null\r\n  }\r\n}\r\n\r\nexport const normalizeDerivedChartData = (data: any) => {\r\n  if (!data?.token0DerivedBnb || data?.token0DerivedBnb.length === 0) {\r\n    return []\r\n  }\r\n  return data?.token0DerivedBnb.reduce((acc, token0DerivedBnbEntry) => {\r\n    const token1DerivedBnbEntry = data?.token1DerivedBnb?.find(\r\n      (entry) => entry.timestamp === token0DerivedBnbEntry.timestamp,\r\n    )\r\n    if (!token1DerivedBnbEntry) {\r\n      return acc\r\n    }\r\n    return [\r\n      ...acc,\r\n      {\r\n        time: parseInt(token0DerivedBnbEntry.timestamp, 10),\r\n        token0Id: token0DerivedBnbEntry.tokenAddress,\r\n        token1Id: token1DerivedBnbEntry.tokenAddress,\r\n        token0DerivedBNB: token0DerivedBnbEntry.derivedBNB,\r\n        token1DerivedBNB: token1DerivedBnbEntry.derivedBNB,\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n\r\ntype normalizePairDataByActiveTokenParams = {\r\n  pairData: PairDataNormalized\r\n  activeToken: string\r\n}\r\n\r\nexport const normalizePairDataByActiveToken = ({\r\n  pairData,\r\n  activeToken,\r\n}: normalizePairDataByActiveTokenParams): PairPricesNormalized =>\r\n  pairData\r\n    ?.map((pairPrice) => ({\r\n      time: fromUnixTime(pairPrice.time),\r\n      value:\r\n        activeToken === pairPrice?.token0Id\r\n          ? pairPrice.reserve1 / pairPrice.reserve0\r\n          : pairPrice.reserve0 / pairPrice.reserve1,\r\n    }))\r\n    .reverse()\r\n\r\ntype normalizeDerivedPairDataByActiveTokenParams = {\r\n  pairData: DerivedPairDataNormalized\r\n  activeToken: string\r\n}\r\n\r\nexport const normalizeDerivedPairDataByActiveToken = ({\r\n  pairData,\r\n  activeToken,\r\n}: normalizeDerivedPairDataByActiveTokenParams): PairPricesNormalized =>\r\n  pairData?.map((pairPrice) => ({\r\n    time: fromUnixTime(pairPrice.time),\r\n    value:\r\n      activeToken === pairPrice?.token0Id\r\n        ? pairPrice.token0DerivedBNB / pairPrice.token1DerivedBNB\r\n        : pairPrice.token1DerivedBNB / pairPrice.token0DerivedBNB,\r\n  }))\r\n","import { gql } from 'graphql-request'\r\nimport { Block } from 'state/info/types'\r\n\r\nexport const getDerivedPrices = (tokenAddress: string, blocks: Block[]) =>\r\n  blocks.map(\r\n    (block) => `\r\n    t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \r\n        derivedBNB\r\n      }\r\n    `,\r\n  )\r\n\r\nexport const getDerivedPricesQueryConstructor = (subqueries: string[]) => {\r\n  return gql`\r\n      query derivedTokenPriceData {\r\n        ${subqueries}\r\n      }\r\n    `\r\n}\r\n","import { INFO_CLIENT } from 'config/constants/endpoints'\r\nimport { ONE_DAY_UNIX, ONE_HOUR_SECONDS } from 'config/constants/info'\r\nimport { getUnixTime, startOfHour, sub } from 'date-fns'\r\nimport { Block } from 'state/info/types'\r\nimport { getBlocksFromTimestamps } from 'views/Info/hooks/useBlocksFromTimestamps'\r\nimport { multiQuery } from 'views/Info/utils/infoQueryHelpers'\r\nimport { getDerivedPrices, getDerivedPricesQueryConstructor } from '../queries/getDerivedPrices'\r\nimport { PairDataTimeWindowEnum } from '../types'\r\n\r\nconst getTokenDerivedBnbPrices = async (tokenAddress: string, blocks: Block[]) => {\r\n  const prices: any | undefined = await multiQuery(\r\n    getDerivedPricesQueryConstructor,\r\n    getDerivedPrices(tokenAddress, blocks),\r\n    INFO_CLIENT,\r\n    200,\r\n  )\r\n\r\n  if (!prices) {\r\n    console.error('Price data failed to load')\r\n    return null\r\n  }\r\n\r\n  // format token BNB price results\r\n  const tokenPrices: {\r\n    tokenAddress: string\r\n    timestamp: string\r\n    derivedBNB: number\r\n  }[] = []\r\n\r\n  // Get Token prices in BNB\r\n  Object.keys(prices).forEach((priceKey) => {\r\n    const timestamp = priceKey.split('t')[1]\r\n    if (timestamp) {\r\n      tokenPrices.push({\r\n        tokenAddress,\r\n        timestamp,\r\n        derivedBNB: prices[priceKey]?.derivedBNB ? parseFloat(prices[priceKey].derivedBNB) : 0,\r\n      })\r\n    }\r\n  })\r\n\r\n  tokenPrices.sort((a, b) => parseInt(a.timestamp, 10) - parseInt(b.timestamp, 10))\r\n\r\n  return tokenPrices\r\n}\r\n\r\nconst getInterval = (timeWindow: PairDataTimeWindowEnum) => {\r\n  switch (timeWindow) {\r\n    case PairDataTimeWindowEnum.DAY:\r\n      return ONE_HOUR_SECONDS\r\n    case PairDataTimeWindowEnum.WEEK:\r\n      return ONE_HOUR_SECONDS * 4\r\n    case PairDataTimeWindowEnum.MONTH:\r\n      return ONE_DAY_UNIX\r\n    case PairDataTimeWindowEnum.YEAR:\r\n      return ONE_DAY_UNIX * 15\r\n    default:\r\n      return ONE_HOUR_SECONDS * 4\r\n  }\r\n}\r\n\r\nconst getSkipDaysToStart = (timeWindow: PairDataTimeWindowEnum) => {\r\n  switch (timeWindow) {\r\n    case PairDataTimeWindowEnum.DAY:\r\n      return 1\r\n    case PairDataTimeWindowEnum.WEEK:\r\n      return 7\r\n    case PairDataTimeWindowEnum.MONTH:\r\n      return 30\r\n    case PairDataTimeWindowEnum.YEAR:\r\n      return 365\r\n    default:\r\n      return 7\r\n  }\r\n}\r\n\r\n// Fetches derivedBnb values for tokens to calculate derived price\r\n// Used when no direct pool is available\r\nconst fetchDerivedPriceData = async (\r\n  token0Address: string,\r\n  token1Address: string,\r\n  timeWindow: PairDataTimeWindowEnum,\r\n) => {\r\n  const interval = getInterval(timeWindow)\r\n  const endTimestamp = getUnixTime(new Date())\r\n  const startTimestamp = getUnixTime(startOfHour(sub(endTimestamp * 1000, { days: getSkipDaysToStart(timeWindow) })))\r\n  const timestamps = []\r\n  let time = startTimestamp\r\n  while (time <= endTimestamp) {\r\n    timestamps.push(time)\r\n    time += interval\r\n  }\r\n\r\n  try {\r\n    const blocks = await getBlocksFromTimestamps(timestamps, 'asc', 500)\r\n    if (!blocks || blocks.length === 0) {\r\n      console.error('Error fetching blocks for timestamps', timestamps)\r\n      return null\r\n    }\r\n\r\n    const token0DerivedBnb = await getTokenDerivedBnbPrices(token0Address, blocks)\r\n    const token1DerivedBnb = await getTokenDerivedBnbPrices(token1Address, blocks)\r\n    return { token0DerivedBnb, token1DerivedBnb }\r\n  } catch (error) {\r\n    console.error('Failed to fetched derived price data for chart', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport default fetchDerivedPriceData\r\n","import { parseUnits } from '@ethersproject/units'\r\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\r\nimport { ParsedQs } from 'qs'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useENS from 'hooks/ENS/useENS'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { isAddress } from 'utils'\r\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\r\nimport getLpAddress from 'utils/getLpAddress'\r\nimport { getTokenAddress } from 'views/Swap/components/Chart/utils'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport {\r\n  Field,\r\n  replaceSwapState,\r\n  selectCurrency,\r\n  setRecipient,\r\n  switchCurrencies,\r\n  typeInput,\r\n  updateDerivedPairData,\r\n  updatePairData,\r\n} from './actions'\r\nimport { SwapState } from './reducer'\r\nimport { useUserSlippageTolerance } from '../user/hooks'\r\nimport fetchPairPriceData from './fetch/fetchPairPriceData'\r\nimport {\r\n  normalizeChartData,\r\n  normalizeDerivedChartData,\r\n  normalizeDerivedPairDataByActiveToken,\r\n  normalizePairDataByActiveToken,\r\n} from './normalizers'\r\nimport { PairDataTimeWindowEnum } from './types'\r\nimport { derivedPairByDataIdSelector, pairByDataIdSelector } from './selectors'\r\nimport { DEFAULT_INPUT_CURRENCY, DEFAULT_OUTPUT_CURRENCY } from './constants'\r\nimport fetchDerivedPriceData from './fetch/fetchDerivedPriceData'\r\nimport { pairHasEnoughLiquidity } from './fetch/utils'\r\n\r\nexport function useSwapState(): AppState['swap'] {\r\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\r\n}\r\n\r\nexport function useSwapActionHandlers(): {\r\n  onCurrencySelection: (field: Field, currency: Currency) => void\r\n  onSwitchTokens: () => void\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n  onChangeRecipient: (recipient: string | null) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const onCurrencySelection = useCallback(\r\n    (field: Field, currency: Currency) => {\r\n      dispatch(\r\n        selectCurrency({\r\n          field,\r\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\r\n        }),\r\n      )\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onSwitchTokens = useCallback(() => {\r\n    dispatch(switchCurrencies())\r\n  }, [dispatch])\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onChangeRecipient = useCallback(\r\n    (recipient: string | null) => {\r\n      dispatch(setRecipient({ recipient }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return {\r\n    onSwitchTokens,\r\n    onCurrencySelection,\r\n    onUserInput,\r\n    onChangeRecipient,\r\n  }\r\n}\r\n\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  if (!value || !currency) {\r\n    return undefined\r\n  }\r\n  try {\r\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\r\n    if (typedValueParsed !== '0') {\r\n      return currency instanceof Token\r\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\r\n    }\r\n  } catch (error) {\r\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\r\n  }\r\n  // necessary for all paths to return a value\r\n  return undefined\r\n}\r\n\r\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\r\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\r\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\r\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\r\n]\r\n\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\r\n  return (\r\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\r\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\r\n  )\r\n}\r\n\r\n// Get swap price for single token disregarding slippage and price impact\r\nexport function useSingleTokenSwapInfo(): { [key: string]: number } {\r\n  const {\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n  } = useSwapState()\r\n\r\n  const inputCurrency = useCurrency(inputCurrencyId)\r\n  const outputCurrency = useCurrency(outputCurrencyId)\r\n  const token0Address = getTokenAddress(inputCurrencyId)\r\n  const token1Address = getTokenAddress(outputCurrencyId)\r\n\r\n  const parsedAmount = tryParseAmount('1', inputCurrency ?? undefined)\r\n\r\n  const bestTradeExactIn = useTradeExactIn(parsedAmount, outputCurrency ?? undefined)\r\n  if (!inputCurrency || !outputCurrency || !bestTradeExactIn) {\r\n    return null\r\n  }\r\n\r\n  const inputTokenPrice = parseFloat(bestTradeExactIn?.executionPrice?.toSignificant(6))\r\n  const outputTokenPrice = 1 / inputTokenPrice\r\n\r\n  return {\r\n    [token0Address]: inputTokenPrice,\r\n    [token1Address]: outputTokenPrice,\r\n  }\r\n}\r\n\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo(): {\r\n  currencies: { [field in Field]?: Currency }\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmount: CurrencyAmount | undefined\r\n  v2Trade: Trade | undefined\r\n  inputError?: string\r\n} {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const {\r\n    independentField,\r\n    typedValue,\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n    recipient,\r\n  } = useSwapState()\r\n\r\n  const inputCurrency = useCurrency(inputCurrencyId)\r\n  const outputCurrency = useCurrency(outputCurrencyId)\r\n  const recipientLookup = useENS(recipient ?? undefined)\r\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\r\n\r\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\r\n    inputCurrency ?? undefined,\r\n    outputCurrency ?? undefined,\r\n  ])\r\n\r\n  const isExactIn: boolean = independentField === Field.INPUT\r\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\r\n\r\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\r\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\r\n\r\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\r\n\r\n  const currencyBalances = {\r\n    [Field.INPUT]: relevantTokenBalances[0],\r\n    [Field.OUTPUT]: relevantTokenBalances[1],\r\n  }\r\n\r\n  const currencies: { [field in Field]?: Currency } = {\r\n    [Field.INPUT]: inputCurrency ?? undefined,\r\n    [Field.OUTPUT]: outputCurrency ?? undefined,\r\n  }\r\n\r\n  let inputError: string | undefined\r\n  if (!account) {\r\n    inputError = t('Connect Wallet')\r\n  }\r\n\r\n  if (!parsedAmount) {\r\n    inputError = inputError ?? t('Enter an amount')\r\n  }\r\n\r\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n    inputError = inputError ?? t('Select a token')\r\n  }\r\n\r\n  const formattedTo = isAddress(to)\r\n  if (!to || !formattedTo) {\r\n    inputError = inputError ?? t('Enter a recipient')\r\n  } else if (\r\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\r\n  ) {\r\n    inputError = inputError ?? t('Invalid recipient')\r\n  }\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\r\n\r\n  // compare input balance to max input based on version\r\n  const [balanceIn, amountIn] = [\r\n    currencyBalances[Field.INPUT],\r\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\r\n  ]\r\n\r\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\r\n  }\r\n\r\n  return {\r\n    currencies,\r\n    currencyBalances,\r\n    parsedAmount,\r\n    v2Trade: v2Trade ?? undefined,\r\n    inputError,\r\n  }\r\n}\r\n\r\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\r\n  if (typeof urlParam === 'string') {\r\n    const valid = isAddress(urlParam)\r\n    if (valid) return valid\r\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\r\n    if (valid === false) return 'BNB'\r\n  }\r\n  return ''\r\n}\r\n\r\nfunction parseTokenAmountURLParameter(urlParam: any): string {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\r\n}\r\n\r\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\r\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\r\n}\r\n\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nfunction validatedRecipient(recipient: any): string | null {\r\n  if (typeof recipient !== 'string') return null\r\n  const address = isAddress(recipient)\r\n  if (address) return address\r\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\r\n  if (ADDRESS_REGEX.test(recipient)) return recipient\r\n  return null\r\n}\r\n\r\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\r\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency) || DEFAULT_INPUT_CURRENCY\r\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency) || DEFAULT_OUTPUT_CURRENCY\r\n  if (inputCurrency === outputCurrency) {\r\n    if (typeof parsedQs.outputCurrency === 'string') {\r\n      inputCurrency = ''\r\n    } else {\r\n      outputCurrency = ''\r\n    }\r\n  }\r\n\r\n  const recipient = validatedRecipient(parsedQs.recipient)\r\n\r\n  return {\r\n    [Field.INPUT]: {\r\n      currencyId: inputCurrency,\r\n    },\r\n    [Field.OUTPUT]: {\r\n      currencyId: outputCurrency,\r\n    },\r\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n    recipient,\r\n    pairDataById: {},\r\n    derivedPairDataById: {},\r\n  }\r\n}\r\n\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch():\r\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\r\n  | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const parsedQs = useParsedQueryString()\r\n  const [result, setResult] = useState<\r\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (!chainId) return\r\n    const parsed = queryParametersToSwapState(parsedQs)\r\n\r\n    dispatch(\r\n      replaceSwapState({\r\n        typedValue: parsed.typedValue,\r\n        field: parsed.independentField,\r\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n        recipient: null,\r\n      }),\r\n    )\r\n\r\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, chainId])\r\n\r\n  return result\r\n}\r\n\r\ntype useFetchPairPricesParams = {\r\n  token0Address: string\r\n  token1Address: string\r\n  timeWindow: PairDataTimeWindowEnum\r\n  currentSwapPrice: {\r\n    [key: string]: number\r\n  }\r\n}\r\n\r\nexport const useFetchPairPrices = ({\r\n  token0Address,\r\n  token1Address,\r\n  timeWindow,\r\n  currentSwapPrice,\r\n}: useFetchPairPricesParams) => {\r\n  const [pairId, setPairId] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const pairData = useSelector(pairByDataIdSelector({ pairId, timeWindow }))\r\n  const derivedPairData = useSelector(derivedPairByDataIdSelector({ pairId, timeWindow }))\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const fetchDerivedData = async () => {\r\n      console.info(\r\n        '[Price Chart]: Not possible to retrieve price data from single pool, trying to fetch derived prices',\r\n      )\r\n      try {\r\n        // Try to get at least derived data for chart\r\n        // This is used when there is no direct data for pool\r\n        // i.e. when multihops are necessary\r\n        const derivedData = await fetchDerivedPriceData(token0Address, token1Address, timeWindow)\r\n        if (derivedData) {\r\n          const normalizedDerivedData = normalizeDerivedChartData(derivedData)\r\n          dispatch(updateDerivedPairData({ pairData: normalizedDerivedData, pairId, timeWindow }))\r\n        } else {\r\n          dispatch(updateDerivedPairData({ pairData: [], pairId, timeWindow }))\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch derived prices for chart', error)\r\n        dispatch(updateDerivedPairData({ pairData: [], pairId, timeWindow }))\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    const fetchAndUpdatePairPrice = async () => {\r\n      setIsLoading(true)\r\n      const { data } = await fetchPairPriceData({ pairId, timeWindow })\r\n      if (data) {\r\n        // Find out if Liquidity Pool has enough liquidity\r\n        // low liquidity pool might mean that the price is incorrect\r\n        // in that case try to get derived price\r\n        const hasEnoughLiquidity = pairHasEnoughLiquidity(data, timeWindow)\r\n        const newPairData = normalizeChartData(data, timeWindow) || []\r\n        if (newPairData.length > 0 && hasEnoughLiquidity) {\r\n          dispatch(updatePairData({ pairData: newPairData, pairId, timeWindow }))\r\n          setIsLoading(false)\r\n        } else {\r\n          console.info(`[Price Chart]: Liquidity too low for ${pairId}`)\r\n          dispatch(updatePairData({ pairData: [], pairId, timeWindow }))\r\n          fetchDerivedData()\r\n        }\r\n      } else {\r\n        dispatch(updatePairData({ pairData: [], pairId, timeWindow }))\r\n        fetchDerivedData()\r\n      }\r\n    }\r\n\r\n    if (!pairData && !derivedPairData && pairId && !isLoading) {\r\n      fetchAndUpdatePairPrice()\r\n    }\r\n  }, [\r\n    pairId,\r\n    timeWindow,\r\n    pairData,\r\n    currentSwapPrice,\r\n    token0Address,\r\n    token1Address,\r\n    derivedPairData,\r\n    dispatch,\r\n    isLoading,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const updatePairId = () => {\r\n      try {\r\n        const pairAddress = getLpAddress(token0Address, token1Address)?.toLowerCase()\r\n        if (pairAddress !== pairId) {\r\n          setPairId(pairAddress)\r\n        }\r\n      } catch (error) {\r\n        setPairId(null)\r\n      }\r\n    }\r\n\r\n    updatePairId()\r\n  }, [token0Address, token1Address, pairId])\r\n\r\n  const normalizedPairData = useMemo(\r\n    () => normalizePairDataByActiveToken({ activeToken: token0Address, pairData }),\r\n    [token0Address, pairData],\r\n  )\r\n\r\n  const normalizedDerivedPairData = useMemo(\r\n    () => normalizeDerivedPairDataByActiveToken({ activeToken: token0Address, pairData: derivedPairData }),\r\n    [token0Address, derivedPairData],\r\n  )\r\n\r\n  const hasSwapPrice = currentSwapPrice && currentSwapPrice[token0Address] > 0\r\n\r\n  const normalizedPairDataWithCurrentSwapPrice =\r\n    normalizedPairData?.length > 0 && hasSwapPrice\r\n      ? [...normalizedPairData, { time: new Date(), value: currentSwapPrice[token0Address] }]\r\n      : normalizedPairData\r\n\r\n  const normalizedDerivedPairDataWithCurrentSwapPrice =\r\n    normalizedDerivedPairData?.length > 0 && hasSwapPrice\r\n      ? [...normalizedDerivedPairData, { time: new Date(), value: currentSwapPrice[token0Address] }]\r\n      : normalizedDerivedPairData\r\n\r\n  const hasNoDirectData = normalizedPairDataWithCurrentSwapPrice && normalizedPairDataWithCurrentSwapPrice?.length === 0\r\n  const hasNoDerivedData =\r\n    normalizedDerivedPairDataWithCurrentSwapPrice && normalizedDerivedPairDataWithCurrentSwapPrice?.length === 0\r\n\r\n  // undefined is used for loading\r\n  let pairPrices = hasNoDirectData && hasNoDerivedData ? [] : undefined\r\n  if (normalizedPairDataWithCurrentSwapPrice && normalizedPairDataWithCurrentSwapPrice?.length > 0) {\r\n    pairPrices = normalizedPairDataWithCurrentSwapPrice\r\n  } else if (\r\n    normalizedDerivedPairDataWithCurrentSwapPrice &&\r\n    normalizedDerivedPairDataWithCurrentSwapPrice?.length > 0\r\n  ) {\r\n    pairPrices = normalizedDerivedPairDataWithCurrentSwapPrice\r\n  }\r\n  return { pairPrices, pairId }\r\n}\r\n","// BNB\r\nexport const DEFAULT_INPUT_CURRENCY = 'BNB'\r\n// BUSD\r\nexport const DEFAULT_OUTPUT_CURRENCY = '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82'\r\n","import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n","import get from 'lodash/get'\r\nimport { AppState } from 'state'\r\nimport { PairDataTimeWindowEnum } from './types'\r\n\r\ntype pairByDataIdSelectorParams = {\r\n  pairId: string\r\n  timeWindow: PairDataTimeWindowEnum\r\n}\r\n\r\nexport const pairByDataIdSelector =\r\n  ({ pairId, timeWindow }: pairByDataIdSelectorParams) =>\r\n  (state: AppState) =>\r\n    get(state, ['swap', 'pairDataById', pairId, timeWindow])\r\n\r\nexport const derivedPairByDataIdSelector =\r\n  ({ pairId, timeWindow }: pairByDataIdSelectorParams) =>\r\n  (state: AppState) =>\r\n    get(state, ['swap', 'derivedPairDataById', pairId, timeWindow])\r\n","import { Address } from '../types'\r\n\r\nexport enum CollectionKey {\r\n  PANCAKE = 'pancake',\r\n  SQUAD = 'pancakeSquad',\r\n}\r\n\r\nexport type Collection = {\r\n  name: string\r\n  description?: string\r\n  slug: string\r\n  address: Address\r\n}\r\n\r\nexport type Collections = {\r\n  [key in CollectionKey]: Collection\r\n}\r\n","import { Collections, CollectionKey } from './types'\r\n\r\nconst collections: Collections = {\r\n  [CollectionKey.PANCAKE]: {\r\n    name: 'Pancake Bunnies',\r\n    slug: 'pancake-bunnies',\r\n    address: {\r\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n    },\r\n  },\r\n  [CollectionKey.SQUAD]: {\r\n    name: 'Pancake Squad',\r\n    description: \"PancakeSwap's first official generative NFT collection.. Join the squad.\",\r\n    slug: 'pancake-squad',\r\n    address: {\r\n      56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\r\n      97: '0xEf12ef570300bFA65c4F022deAaA3dfF4f5d5c91',\r\n    },\r\n  },\r\n}\r\n\r\nexport default collections\r\n","import collections from 'config/constants/nftsCollections'\r\nimport { CollectionKey } from 'config/constants/nftsCollections/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\nexport const nftsBaseUrl = '/nfts'\r\nexport const pancakeBunniesAddress = getAddress(collections[CollectionKey.PANCAKE].address)\r\nexport const pancakeSquadAddress = getAddress(collections[CollectionKey.SQUAD].address)\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ERC20_INTERFACE from 'config/abi/erc20'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { useMulticallContract } from 'hooks/useContract'\r\nimport { isAddress } from 'utils'\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\r\n\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent BNB balances.\r\n */\r\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\r\n  [address: string]: CurrencyAmount | undefined\r\n} {\r\n  const multicallContract = useMulticallContract()\r\n\r\n  const addresses: string[] = useMemo(\r\n    () =>\r\n      uncheckedAddresses\r\n        ? uncheckedAddresses\r\n            .map(isAddress)\r\n            .filter((a): a is string => a !== false)\r\n            .sort()\r\n        : [],\r\n    [uncheckedAddresses],\r\n  )\r\n\r\n  const results = useSingleContractMultipleData(\r\n    multicallContract,\r\n    'getEthBalance',\r\n    addresses.map((address) => [address]),\r\n  )\r\n\r\n  return useMemo(\r\n    () =>\r\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\r\n        const value = results?.[i]?.result?.[0]\r\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\r\n        return memo\r\n      }, {}),\r\n    [addresses, results],\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\r\n  const validatedTokens: Token[] = useMemo(\r\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\r\n    [tokens],\r\n  )\r\n\r\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\r\n\r\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\r\n\r\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\r\n\r\n  return [\r\n    useMemo(\r\n      () =>\r\n        address && validatedTokens.length > 0\r\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\r\n              const value = balances?.[i]?.result?.[0]\r\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n              if (amount) {\r\n                memo[token.address] = new TokenAmount(token, amount)\r\n              }\r\n              return memo\r\n            }, {})\r\n          : {},\r\n      [address, validatedTokens, balances],\r\n    ),\r\n    anyLoading,\r\n  ]\r\n}\r\n\r\nexport function useTokenBalances(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\r\n}\r\n\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\r\n  const tokenBalances = useTokenBalances(account, [token])\r\n  if (!token) return undefined\r\n  return tokenBalances[token.address]\r\n}\r\n\r\nexport function useCurrencyBalances(\r\n  account?: string,\r\n  currencies?: (Currency | undefined)[],\r\n): (CurrencyAmount | undefined)[] {\r\n  const tokens = useMemo(\r\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\r\n    [currencies],\r\n  )\r\n\r\n  const tokenBalances = useTokenBalances(account, tokens)\r\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\r\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\r\n\r\n  return useMemo(\r\n    () =>\r\n      currencies?.map((currency) => {\r\n        if (!account || !currency) return undefined\r\n        if (currency instanceof Token) return tokenBalances[currency.address]\r\n        if (currency === ETHER) return ethBalance[account]\r\n        return undefined\r\n      }) ?? [],\r\n    [account, currencies, ethBalance, tokenBalances],\r\n  )\r\n}\r\n\r\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  return useCurrencyBalances(account, [currency])[0]\r\n}\r\n\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  const { account } = useWeb3React()\r\n  const allTokens = useAllTokens()\r\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\r\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\r\n  return balances ?? {}\r\n}\r\n","import { TransactionResponse } from '@ethersproject/providers'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { addTransaction } from './actions'\r\nimport { TransactionDetails } from './reducer'\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: {\r\n    summary?: string\r\n    approval?: { tokenAddress: string; spender: string }\r\n    claim?: { recipient: string }\r\n  },\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      {\r\n        summary,\r\n        approval,\r\n        claim,\r\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return\r\n      if (!chainId) return\r\n\r\n      const { hash } = response\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.')\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\r\n    },\r\n    [dispatch, chainId, account],\r\n  )\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  return chainId ? state[chainId] ?? {} : {}\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions()\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false\r\n\r\n  return !transactions[transactionHash].receipt\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions()\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash]\r\n        if (!tx) return false\r\n        if (tx.receipt) {\r\n          return false\r\n        }\r\n        const { approval } = tx\r\n        if (!approval) return false\r\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  )\r\n}\r\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID,\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport store from 'state'\r\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\r\n\r\n/**\r\n * Function to return gasPrice outwith a react component\r\n */\r\nconst getGasPrice = (): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const state = store.getState()\r\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport default getGasPrice\r\n","import { ReactNode } from 'react'\r\n\r\nexport const types = {\r\n  SUCCESS: 'success',\r\n  DANGER: 'danger',\r\n  WARNING: 'warning',\r\n  INFO: 'info',\r\n}\r\n\r\nexport type Types = typeof types[keyof typeof types]\r\n\r\nexport interface Toast {\r\n  id: string\r\n  type: Types\r\n  title: string\r\n  description?: ReactNode\r\n}\r\n\r\nexport interface ToastContainerProps {\r\n  toasts: Toast[]\r\n  stackSpacing?: number\r\n  ttl?: number\r\n  onRemove: (id: string) => void\r\n}\r\n\r\nexport interface ToastProps {\r\n  toast: Toast\r\n  onRemove: ToastContainerProps['onRemove']\r\n  ttl: number\r\n  style: Partial<CSSStyleDeclaration>\r\n}\r\n","import React, { useCallback, useEffect, useRef } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styled from 'styled-components'\r\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\r\nimport { ToastProps, types } from './types'\r\n\r\nconst alertTypeMap = {\r\n  [types.INFO]: alertVariants.INFO,\r\n  [types.SUCCESS]: alertVariants.SUCCESS,\r\n  [types.DANGER]: alertVariants.DANGER,\r\n  [types.WARNING]: alertVariants.WARNING,\r\n}\r\n\r\nconst StyledToast = styled.div`\r\n  right: 16px;\r\n  position: fixed;\r\n  max-width: calc(100% - 32px);\r\n  transition: all 250ms ease-in;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 400px;\r\n  }\r\n`\r\n\r\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\r\n  const timer = useRef<number>()\r\n  const ref = useRef(null)\r\n  const removeHandler = useRef(onRemove)\r\n  const { id, title, description, type } = toast\r\n\r\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\r\n\r\n  const handleMouseEnter = () => {\r\n    clearTimeout(timer.current)\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n    }\r\n\r\n    timer.current = window.setTimeout(() => {\r\n      handleRemove()\r\n    }, ttl)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n    }\r\n\r\n    timer.current = window.setTimeout(() => {\r\n      handleRemove()\r\n    }, ttl)\r\n\r\n    return () => {\r\n      clearTimeout(timer.current)\r\n    }\r\n  }, [timer, ttl, handleRemove])\r\n\r\n  return (\r\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\r\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\r\n          {description}\r\n        </Alert>\r\n      </StyledToast>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport default Toast\r\n","import React from 'react'\r\nimport { TransitionGroup } from 'react-transition-group'\r\nimport styled from 'styled-components'\r\nimport Toast from './Toast'\r\nimport { ToastContainerProps } from './types'\r\n\r\nconst ZINDEX = 1000\r\nconst TOP_POSITION = 80 // Initial position from the top\r\n\r\nconst StyledToastContainer = styled.div`\r\n  .enter,\r\n  .appear {\r\n    opacity: 0.01;\r\n  }\r\n\r\n  .enter.enter-active,\r\n  .appear.appear-active {\r\n    opacity: 1;\r\n    transition: opacity 250ms ease-in;\r\n  }\r\n\r\n  .exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  .exit.exit-active {\r\n    opacity: 0.01;\r\n    transition: opacity 250ms ease-out;\r\n  }\r\n`\r\n\r\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\r\n  return (\r\n    <StyledToastContainer>\r\n      <TransitionGroup>\r\n        {toasts.map((toast, index) => {\r\n          const zIndex = (ZINDEX - index).toString()\r\n          const top = TOP_POSITION + index * stackSpacing\r\n\r\n          return (\r\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\r\n          )\r\n        })}\r\n      </TransitionGroup>\r\n    </StyledToastContainer>\r\n  )\r\n}\r\n\r\nexport default ToastContainer\r\n","import React from 'react'\r\nimport { Link, Text } from '@pancakeswap/uikit'\r\nimport { getBscScanLink } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport truncateHash from 'utils/truncateHash'\r\n\r\ninterface DescriptionWithTxProps {\r\n  description?: string\r\n  txHash?: string\r\n}\r\n\r\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\r\n      {txHash && (\r\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\r\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\r\n        </Link>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DescriptionWithTx\r\n","export const REWARD_RATE = 0.97\r\n\r\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\r\nexport const ROUND_BUFFER = 9\r\n\r\nexport const PAST_ROUND_COUNT = 5\r\nexport const FUTURE_ROUND_COUNT = 2\r\n\r\nexport const ROUNDS_PER_PAGE = 200\r\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { Transaction } from 'state/info/types'\r\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\r\n\r\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\r\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\r\n  'info/protocol/updateProtocolChartData',\r\n)\r\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\r\n  'info/protocol/updateProtocolTransactions',\r\n)\r\n\r\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\r\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\r\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\r\n  'info/pools/updatePoolChartData',\r\n)\r\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\r\n  'info/pools/updatePoolTransactions',\r\n)\r\n\r\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\r\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\r\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\r\n  'info/tokens/addTokenPoolAddresses',\r\n)\r\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\r\n  'info/tokens/updateTokenChartData',\r\n)\r\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\r\n  'info/tokens/updateTokenTransactions',\r\n)\r\nexport const updateTokenPriceData = createAction<{\r\n  tokenAddress: string\r\n  secondsInterval: number\r\n  priceData?: PriceChartEntry[]\r\n  oldestFetchedTimestamp: number\r\n}>('info/tokens/updateTokenPriceData')\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Card = styled(Box)<{\r\n  width?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  border-radius: 16px;\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.background};\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nexport const LightGreyCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n","// 15 day, 30 days, 60 days\r\nconst DAYS_TO_CALCULATE_AGAINST = [15, 30, 60]\r\n\r\n/**\r\n *\r\n * @param principalInUSD - amount user wants to invest in USD\r\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\r\n * @param earningTokenPrice - price of reward token\r\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\r\n * @param performanceFee - performance fee as percentage\r\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\r\n */\r\nexport const getInterestBreakdown = ({\r\n  principalInUSD,\r\n  apr,\r\n  earningTokenPrice,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}: {\r\n  principalInUSD: number\r\n  apr: number\r\n  earningTokenPrice: number\r\n  compoundFrequency?: number\r\n  performanceFee?: number\r\n}) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\r\n  const timesCompounded = 365 * compoundFrequency\r\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const aprAsDecimal = apr / 100\r\n\r\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\r\n  // and also cause rounding errors\r\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\r\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\r\n\r\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\r\n    const daysAsDecimalOfYear = days / 365\r\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\r\n    const principal = principalInUSD / earningTokenPrice\r\n    let interestEarned = principal * aprAsDecimal * (days / 365)\r\n    if (timesCompounded !== 0) {\r\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\r\n      interestEarned = accruedAmount - principal\r\n      if (performanceFee) {\r\n        const performanceFeeAsDecimal = performanceFee / 100\r\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\r\n        interestEarned -= performanceFeeAsAmount\r\n      }\r\n    }\r\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\r\n  })\r\n}\r\n\r\n/**\r\n * @param interest how much USD amount you aim to make\r\n * @param apr APR of farm/pool\r\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\r\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\r\n */\r\nexport const getPrincipalForInterest = (\r\n  interest: number,\r\n  apr: number,\r\n  compoundingFrequency: number,\r\n  performanceFee = 0,\r\n) => {\r\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\r\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\r\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\r\n  })\r\n}\r\n\r\n/**\r\n * Given APR returns APY\r\n * @param apr APR as percentage\r\n * @param compoundFrequency how many compounds per day\r\n * @param days if other than 365 adjusts (A)PY for period less than a year\r\n * @param performanceFee performance fee as percentage\r\n * @returns APY as decimal\r\n */\r\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\r\n  const daysAsDecimalOfYear = days / 365\r\n  const aprAsDecimal = apr / 100\r\n  const timesCompounded = 365 * compoundFrequency\r\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\r\n  if (timesCompounded > 0) {\r\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\r\n  }\r\n  if (performanceFee) {\r\n    const performanceFeeAsDecimal = performanceFee / 100\r\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\r\n    apyAsDecimal -= takenAsPerformanceFee\r\n  }\r\n  return apyAsDecimal\r\n}\r\n\r\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\r\n  if (amountInvested === 0) {\r\n    return 0\r\n  }\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage\r\n}\r\n","import { Language } from '@pancakeswap/uikit'\r\n\r\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\r\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\r\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\r\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\r\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\r\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\r\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\r\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\r\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\r\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\r\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\r\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\r\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\r\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\r\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\r\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\r\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\r\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\r\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\r\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\r\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\r\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\r\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\r\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\r\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\r\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\r\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\r\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\r\n\r\nexport const languages = {\r\n  'ar-SA': AR,\r\n  'bn-BD': BN,\r\n  'en-US': EN,\r\n  'de-DE': DE,\r\n  'el-GR': EL,\r\n  'es-ES': ESES,\r\n  'fi-FI': FI,\r\n  'fil-PH': FIL,\r\n  'fr-FR': FR,\r\n  'hi-IN': HI,\r\n  'hu-HU': HU,\r\n  'id-ID': ID,\r\n  'it-IT': IT,\r\n  'ja-JP': JA,\r\n  'ko-KR': KO,\r\n  'nl-NL': NL,\r\n  'pl-PL': PL,\r\n  'pt-BR': PTBR,\r\n  'pt-PT': PTPT,\r\n  'ro-RO': RO,\r\n  'ru-RU': RU,\r\n  'sv-SE': SVSE,\r\n  'ta-IN': TA,\r\n  'tr-TR': TR,\r\n  'uk-UA': UK,\r\n  'vi-VN': VI,\r\n  'zh-CN': ZHCN,\r\n  'zh-TW': ZHTW,\r\n}\r\n\r\nexport const languageList = Object.values(languages)\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import tokens from './tokens'\r\nimport { SerializedFarmConfig } from './types'\r\n\r\nconst priceHelperLps: SerializedFarmConfig[] = [\r\n  /**\r\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\r\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\r\n   * The absence of a PID means the masterchef contract calls are skipped for this farm.\r\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\r\n   * Before storing to redux, farms without a PID are filtered out.\r\n   */\r\n  {\r\n    pid: null,\r\n    lpSymbol: 'QSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\r\n    },\r\n    token: tokens.qsd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n]\r\n\r\nexport default priceHelperLps\r\n","import BigNumber from 'bignumber.js'\r\n/* import masterchefABI from 'config/abi/masterchef.json' */\r\nimport masterchefABI from 'config/abi/metaRewards.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport multicall from 'utils/multicall'\r\nimport { SerializedFarm, SerializedBigNumber } from '../types'\r\n\r\ntype PublicFarmData = {\r\n  tokenAmountTotal: SerializedBigNumber\r\n  lpTotalInQuoteToken: SerializedBigNumber\r\n  lpTotalSupply: SerializedBigNumber\r\n  tokenPriceVsQuote: SerializedBigNumber\r\n  poolWeight: SerializedBigNumber\r\n  multiplier: string\r\n  lpTokenValue: SerializedBigNumber\r\n  tokenPerBlock: SerializedBigNumber\r\n  withdrawLockPeriod: SerializedBigNumber\r\n}\r\n\r\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\r\n  const { pid, lpAddresses, token, quoteToken } = farm\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const calls = [\r\n    // Balance of token in the LP contract\r\n    {\r\n      address: token.address,\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of quote token on LP contract\r\n    {\r\n      address: quoteToken.address,\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of LP tokens in the master chef contract\r\n    {\r\n      address: lpAddress,\r\n      name: 'balanceOf',\r\n      params: [getMasterChefAddress()],\r\n    },\r\n    // Total supply of LP tokens\r\n    {\r\n      address: lpAddress,\r\n      name: 'totalSupply',\r\n    },\r\n    // Token decimals\r\n    {\r\n      address: token.address,\r\n      name: 'decimals',\r\n    },\r\n    // Quote token decimals\r\n    {\r\n      address: quoteToken.address,\r\n      name: 'decimals',\r\n    },\r\n  ]\r\n\r\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\r\n    await multicall(erc20, calls)\r\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\r\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n  // Raw amount of token in the LP, including those not staked\r\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\r\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\r\n\r\n  // Amount of quoteToken in the LP that are staked in the MC\r\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\r\n\r\n  // Total staked in LP, in quote token value\r\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\r\n\r\n  // Only make masterchef calls if farm has pid\r\n  const [info, totalAllocPoint, tokenPerBlock] =\r\n    (pid || pid === 0)\r\n      ? await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'tokenPerBlock',\r\n        },\r\n      ])\r\n      : [null, null]\r\n\r\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\r\n  const withdrawLockPeriod = info ? new BigNumber(info.withdrawLockPeriod?._hex) : BIG_ZERO\r\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\r\n  const lpTokenValue = (info && info.balance) ? new BigNumber(info.balance?._hex).div(BIG_TEN.pow(quoteTokenDecimals)) : BIG_ZERO\r\n  return {\r\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\r\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n    lpTotalInQuoteToken: lpTokenValue.toJSON(),\r\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\r\n    poolWeight: poolWeight.toJSON(),\r\n    multiplier: `${allocPoint.div(100).toString()}X`,\r\n    lpTokenValue: lpTokenValue.toJSON(),\r\n    tokenPerBlock: new BigNumber(tokenPerBlock).div(BIG_TEN.pow(tokenDecimals)).toJSON(),\r\n    withdrawLockPeriod: withdrawLockPeriod.toJSON()\r\n  }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { SerializedFarm } from 'state/types'\r\nimport fetchPublicFarmData from './fetchPublicFarmData'\r\n\r\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\r\n  const farmPublicData = await fetchPublicFarmData(farm)\r\n\r\n  return { ...farm, ...farmPublicData }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { SerializedFarmConfig } from 'config/constants/types'\r\nimport fetchFarm from './fetchFarm'\r\n\r\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\r\n  const data = await Promise.all(\r\n    farmsToFetch.map(async (farmConfig) => {\r\n      const farm = await fetchFarm(farmConfig)\r\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\r\n      return serializedFarm\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import { SerializedFarm } from 'state/types'\r\n\r\n/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\r\nexport const filterFarmsByQuoteToken = (\r\n  farms: SerializedFarm[],\r\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\r\n): SerializedFarm => {\r\n  const preferredFarm = farms.find((farm) => {\r\n    return preferredQuoteTokens.some((quoteToken) => {\r\n      return farm.quoteToken.symbol === quoteToken\r\n    })\r\n  })\r\n  return preferredFarm || farms[0]\r\n}\r\n\r\nexport default filterFarmsByQuoteToken\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { SerializedFarm } from 'state/types'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst getFarmFromTokenSymbol = (\r\n  farms: SerializedFarm[],\r\n  tokenSymbol: string,\r\n  preferredQuoteTokens?: string[],\r\n): SerializedFarm => {\r\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\r\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\nconst getFarmBaseTokenPrice = (\r\n  farm: SerializedFarm,\r\n  quoteTokenFarm: SerializedFarm,\r\n  bnbPriceBusd: BigNumber,\r\n): BigNumber => {\r\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\r\n\r\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\r\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\r\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  // Possible alternative farm quoteTokens:\r\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\r\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\r\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\r\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\r\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\r\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\r\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\r\n  return BIG_ZERO\r\n}\r\n\r\nconst getFarmQuoteTokenPrice = (\r\n  farm: SerializedFarm,\r\n  quoteTokenFarm: SerializedFarm,\r\n  bnbPriceBusd: BigNumber,\r\n): BigNumber => {\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return BIG_ONE\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'WBNB') {\r\n    return bnbPriceBusd\r\n  }\r\n\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  return BIG_ZERO\r\n}\r\n\r\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\r\n  // const bnbBusdFarm = farms.find((farm) => farm.pid === 252)\r\n  // const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n\r\n  // const farmsWithPrices = farms.map((farm) => {\r\n  //   const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n  //   const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n  //   const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n\r\n  //   return {\r\n  //     ...farm,\r\n  //     tokenPriceBusd: tokenPriceBusd.toJSON(),\r\n  //     quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\r\n  //   }\r\n  // })\r\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 6)\r\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  const farmsWithPrices = farms.map((farm) => {\r\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    return {\r\n      ...farm,\r\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\r\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\r\n    }\r\n  })\r\n\r\n  return farmsWithPrices\r\n}\r\n\r\nexport default fetchFarmsPrices\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\n/* import masterchefABI from 'config/abi/masterchef.json' */\r\nimport masterchefABI from 'config/abi/metaRewards.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { SerializedFarmConfig } from 'config/constants/types'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserLastDepositTimes = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawUserInfos = await multicall(masterchefABI, calls)\r\n  const lastDepositTimes = rawUserInfos.map((userInfo) => {\r\n    return new BigNumber(userInfo.lastDepositTime._hex).toJSON()\r\n  })\r\n  return lastDepositTimes\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingToken',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n\r\nexport const fetchFarmUserCanHarvest = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'canHarvest',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawCanHarvest = await multicall(masterchefABI, calls)\r\n  const parsedCanHarvest = rawCanHarvest.map((resItem) => {\r\n    return resItem[0]\r\n  })\r\n  return parsedCanHarvest\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\r\nimport fetchFarms from './fetchFarms'\r\nimport fetchFarmsPrices from './fetchFarmsPrices'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n  fetchFarmUserCanHarvest,\r\n  fetchFarmUserLastDepositTimes,\r\n} from './fetchFarmUser'\r\nimport { SerializedFarmsState, SerializedFarm } from '../types'\r\n\r\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\r\n  ...farm,\r\n  userData: {\r\n    allowance: '0',\r\n    tokenBalance: '0',\r\n    stakedBalance: '0',\r\n    earnings: '0',\r\n    canHarvest: false,\r\n    lastDepositTime: '0'\r\n  },\r\n}))\r\n\r\nconst initialState: SerializedFarmsState = {\r\n  data: noAccountFarmConfig,\r\n  loadArchivedFarmsData: false,\r\n  userDataLoaded: false,\r\n}\r\n\r\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\r\n\r\n// Async thunks\r\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\r\n  'farms/fetchFarmsPublicDataAsync',\r\n  async (pids) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n\r\n    // Add price helper farms\r\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\r\n\r\n    const farms = await fetchFarms(farmsWithPriceHelpers)\r\n\r\n    const farmsWithPrices = await fetchFarmsPrices(farms)\r\n\r\n    // Filter out price helper LP config farms\r\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\r\n      return farm.pid || farm.pid === 0\r\n    })\r\n\r\n    return farmsWithoutHelperLps\r\n  },\r\n)\r\n\r\ninterface FarmUserDataResponse {\r\n  pid: number\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n  canHarvest: boolean\r\n  lastDepositTime: string\r\n}\r\n\r\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\r\n  'farms/fetchFarmUserDataAsync',\r\n  async ({ account, pids }) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\r\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\r\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\r\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\r\n    const userFarmCanHarvest = await fetchFarmUserCanHarvest(account, farmsToFetch)\r\n    const userFarmLastDepositTimes = await fetchFarmUserLastDepositTimes(account, farmsToFetch)\r\n\r\n    return userFarmAllowances.map((farmAllowance, index) => {\r\n      return {\r\n        pid: farmsToFetch[index].pid,\r\n        allowance: userFarmAllowances[index],\r\n        tokenBalance: userFarmTokenBalances[index],\r\n        stakedBalance: userStakedBalances[index],\r\n        earnings: userFarmEarnings[index],\r\n        canHarvest: userFarmCanHarvest[index],\r\n        lastDepositTime: userFarmLastDepositTimes[index],\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    // Update farms with live data\r\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    })\r\n\r\n    // Update farms with user data\r\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\r\n      action.payload.forEach((userDataEl) => {\r\n        const { pid } = userDataEl\r\n        const index = state.data.findIndex((farm) => farm.pid === pid)\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n      state.userDataLoaded = true\r\n    })\r\n  },\r\n})\r\n\r\nexport default farmsSlice.reducer\r\n","import { BNB_ADDRESS } from './constants'\r\n\r\nconst MIN_VALUE_DISPLAYED = 0.001\r\n\r\nexport const getTimeWindowChange = (lineChartData) => {\r\n  if (lineChartData.length > 0) {\r\n    const firstValue = lineChartData.find(({ value }) => !!value && value > 0)?.value ?? 0\r\n    const lastValue = lineChartData[lineChartData.length - 1].value\r\n    const changeValue = lastValue - firstValue\r\n\r\n    return {\r\n      changeValue:\r\n        changeValue > 0 ? Math.max(changeValue, MIN_VALUE_DISPLAYED) : Math.min(changeValue, MIN_VALUE_DISPLAYED * -1),\r\n      changePercentage: ((changeValue / firstValue) * 100).toFixed(2),\r\n    }\r\n  }\r\n\r\n  return {\r\n    changeValue: 0,\r\n    changePercentage: 0,\r\n  }\r\n}\r\n\r\nexport const getTokenAddress = (tokenAddress: undefined | string) => {\r\n  if (!tokenAddress) {\r\n    return ''\r\n  }\r\n  const lowerCaseAddress = tokenAddress.toLowerCase()\r\n  if (lowerCaseAddress === 'bnb') {\r\n    return BNB_ADDRESS\r\n  }\r\n\r\n  return lowerCaseAddress\r\n}\r\n","import { useCallback } from 'react'\r\nimport ethers, { Contract, CallOverrides } from 'ethers'\r\nimport { useGasPrice } from 'state/user/hooks'\r\nimport { get } from 'lodash'\r\n\r\n/**\r\n * Perform a contract call with a gas price returned from useGasPrice\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport function useCallWithGasPrice() {\r\n  const gasPrice = useGasPrice()\r\n  const callWithGasPrice = useCallback(\r\n    async (\r\n      contract: Contract,\r\n      methodName: string,\r\n      methodArgs: any[] = [],\r\n      overrides: CallOverrides = null,\r\n    ): Promise<ethers.providers.TransactionResponse> => {\r\n      const contractMethod = get(contract, methodName)\r\n      const hasManualGasPriceOverride = overrides?.gasPrice\r\n      const tx = await contractMethod(\r\n        ...methodArgs,\r\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\r\n      )\r\n      return tx\r\n    },\r\n    [gasPrice],\r\n  )\r\n\r\n  return { callWithGasPrice }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport tokens from 'config/constants/tokens'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport useRefresh from './useRefresh'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\ntype UseTokenBalanceState = {\r\n  balance: BigNumber\r\n  fetchStatus: FetchStatus\r\n}\r\n\r\nexport enum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\r\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\r\n    balance: BIG_ZERO,\r\n    fetchStatus: NOT_FETCHED,\r\n  })\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      try {\r\n        const res = await contract.balanceOf(account)\r\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\r\n      } catch (e) {\r\n        console.error(e)\r\n        setBalanceState((prev) => ({\r\n          ...prev,\r\n          fetchStatus: FAILED,\r\n        }))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\r\n\r\n  return balanceState\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.totalSupply()\r\n      setTotalSupply(new BigNumber(supply.toString()))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\r\n      setBalance(new BigNumber(res.toString()))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useGetBnbBalance = () => {\r\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\r\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      try {\r\n        const walletBalance = await simpleRpcProvider.getBalance(account)\r\n        setBalance(walletBalance)\r\n        setFetchStatus(FetchStatus.SUCCESS)\r\n      } catch {\r\n        setFetchStatus(FetchStatus.FAILED)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lastUpdated, setBalance, setFetchStatus])\r\n\r\n  return { balance, fetchStatus, refresh: setLastUpdated }\r\n}\r\n\r\nexport const useGetCakeBalance = () => {\r\n  const { balance, fetchStatus } = useTokenBalance(tokens.cake.address)\r\n\r\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\r\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState, ProfileAvatarFetchStatus, Profile } from 'state/types'\r\nimport { NftToken } from 'state/nftMarket/types'\r\nimport { getProfile, getProfileAvatar, getUsername } from './helpers'\r\n\r\nexport const initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: false,\r\n  hasRegistered: false,\r\n  data: null,\r\n  profileAvatars: {},\r\n}\r\n\r\nexport const fetchProfile = createAsyncThunk<{ hasRegistered: boolean; profile?: Profile }, string>(\r\n  'profile/fetchProfile',\r\n  async (account) => {\r\n    const { hasRegistered, profile } = await getProfile(account)\r\n    return { hasRegistered, profile }\r\n  },\r\n)\r\n\r\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: NftToken; hasRegistered: boolean }, string>(\r\n  'profile/fetchProfileAvatar',\r\n  async (account) => {\r\n    const { nft, hasRegistered } = await getProfileAvatar(account)\r\n    return { account, nft, hasRegistered }\r\n  },\r\n)\r\n\r\nexport const fetchProfileUsername = createAsyncThunk<\r\n  { account: string; username: string },\r\n  { account: string; hasRegistered: boolean }\r\n>('profile/fetchProfileUsername', async ({ account, hasRegistered }) => {\r\n  if (!hasRegistered) {\r\n    return { account, username: '' }\r\n  }\r\n  const username = await getUsername(account)\r\n  return { account, username }\r\n})\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchProfile.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchProfile.fulfilled, (state, action) => {\r\n      const { hasRegistered, profile } = action.payload\r\n\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.hasRegistered = hasRegistered\r\n      state.data = profile\r\n    })\r\n    builder.addCase(fetchProfile.rejected, (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    })\r\n    builder.addCase(fetchProfileUsername.pending, (state, action) => {\r\n      const { account } = action.meta.arg\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = {\r\n          hasRegistered: false,\r\n          username: null,\r\n          nft: null,\r\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\r\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\r\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\r\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n        }\r\n      }\r\n    })\r\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\r\n      const { account, username } = action.payload\r\n\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          username,\r\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = {\r\n          username,\r\n          nft: null,\r\n          hasRegistered: true,\r\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\r\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\r\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n        }\r\n      }\r\n    })\r\n    builder.addCase(fetchProfileUsername.rejected, (state, action) => {\r\n      const { account } = action.meta.arg\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          username: '',\r\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = {\r\n          hasRegistered: false,\r\n          username: '',\r\n          nft: null,\r\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n        }\r\n      }\r\n    })\r\n    builder.addCase(fetchProfileAvatar.pending, (state, action) => {\r\n      const account = action.meta.arg\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          hasRegistered: false,\r\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = {\r\n          username: null,\r\n          nft: null,\r\n          hasRegistered: false,\r\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\r\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\r\n        }\r\n      }\r\n    })\r\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\r\n      const { account, nft, hasRegistered } = action.payload\r\n\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          nft,\r\n          hasRegistered,\r\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = {\r\n          username: null,\r\n          nft,\r\n          hasRegistered,\r\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\r\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n        }\r\n      }\r\n    })\r\n    builder.addCase(fetchProfileAvatar.rejected, (state, action) => {\r\n      const account = action.meta.arg\r\n\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          nft: null,\r\n          hasRegistered: false,\r\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = {\r\n          username: null,\r\n          nft: null,\r\n          hasRegistered: false,\r\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\r\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\r\n        }\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileClear, addPoints } = profileSlice.actions\r\n\r\nexport default profileSlice.reducer\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport { getLotteryV2Address } from 'utils/addressHelpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\r\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\r\nimport { useMemo } from 'react'\r\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\r\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\r\n\r\nconst lotteryContract = getLotteryV2Contract()\r\n\r\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\r\n  const {\r\n    status,\r\n    startTime,\r\n    endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee,\r\n    firstTicketId,\r\n    lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber,\r\n    cakePerBracket,\r\n    countWinnersPerBracket,\r\n    rewardsBreakdown,\r\n  } = response\r\n\r\n  const statusKey = Object.keys(LotteryStatus)[status]\r\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\r\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\r\n    ethersToSerializedBigNumber(winnersInBracket),\r\n  )\r\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\r\n\r\n  return {\r\n    isLoading: false,\r\n    lotteryId,\r\n    status: LotteryStatus[statusKey],\r\n    startTime: startTime?.toString(),\r\n    endTime: endTime?.toString(),\r\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\r\n    discountDivisor: discountDivisor?.toString(),\r\n    treasuryFee: treasuryFee?.toString(),\r\n    firstTicketId: firstTicketId?.toString(),\r\n    lastTicketId: lastTicketId?.toString(),\r\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\r\n    finalNumber,\r\n    cakePerBracket: serializedCakePerBracket,\r\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\r\n    rewardsBreakdown: serializedRewardsBreakdown,\r\n  }\r\n}\r\n\r\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\r\n  return {\r\n    isLoading: true,\r\n    lotteryId,\r\n    status: LotteryStatus.PENDING,\r\n    startTime: '',\r\n    endTime: '',\r\n    priceTicketInCake: '',\r\n    discountDivisor: '',\r\n    treasuryFee: '',\r\n    firstTicketId: '',\r\n    lastTicketId: '',\r\n    amountCollectedInCake: '',\r\n    finalNumber: null,\r\n    cakePerBracket: [],\r\n    countWinnersPerBracket: [],\r\n    rewardsBreakdown: [],\r\n  }\r\n}\r\n\r\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\r\n  try {\r\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\r\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\r\n  } catch (error) {\r\n    return processViewLotteryErrorResponse(lotteryId)\r\n  }\r\n}\r\n\r\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\r\n  const calls = lotteryIds.map((id) => ({\r\n    name: 'viewLottery',\r\n    address: getLotteryV2Address(),\r\n    params: [id],\r\n  }))\r\n  try {\r\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\r\n    const processedResponses = multicallRes.map((res, index) =>\r\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\r\n    )\r\n    return processedResponses\r\n  } catch (error) {\r\n    console.error(error)\r\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\r\n  }\r\n}\r\n\r\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\r\n  try {\r\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\r\n      address: getLotteryV2Address(),\r\n      name: method,\r\n    }))\r\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\r\n      lotteryV2Abi,\r\n      calls,\r\n    )) as ethers.BigNumber[][]\r\n\r\n    return {\r\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\r\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      currentLotteryId: null,\r\n      maxNumberTicketsPerBuyOrClaim: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\r\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\r\n  const roundIds = []\r\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\r\n    roundIds.push(currentIdAsInt - i)\r\n  }\r\n  return roundIds.map((roundId) => roundId.toString())\r\n}\r\n\r\nexport const useProcessLotteryResponse = (\r\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\r\n): LotteryRound => {\r\n  const {\r\n    priceTicketInCake: priceTicketInCakeAsString,\r\n    discountDivisor: discountDivisorAsString,\r\n    amountCollectedInCake: amountCollectedInCakeAsString,\r\n  } = lotteryData\r\n\r\n  const discountDivisor = useMemo(() => {\r\n    return new BigNumber(discountDivisorAsString)\r\n  }, [discountDivisorAsString])\r\n\r\n  const priceTicketInCake = useMemo(() => {\r\n    return new BigNumber(priceTicketInCakeAsString)\r\n  }, [priceTicketInCakeAsString])\r\n\r\n  const amountCollectedInCake = useMemo(() => {\r\n    return new BigNumber(amountCollectedInCakeAsString)\r\n  }, [amountCollectedInCakeAsString])\r\n\r\n  return {\r\n    isLoading: lotteryData.isLoading,\r\n    lotteryId: lotteryData.lotteryId,\r\n    userTickets: lotteryData.userTickets,\r\n    status: lotteryData.status,\r\n    startTime: lotteryData.startTime,\r\n    endTime: lotteryData.endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee: lotteryData.treasuryFee,\r\n    firstTicketId: lotteryData.firstTicketId,\r\n    lastTicketId: lotteryData.lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber: lotteryData.finalNumber,\r\n    cakePerBracket: lotteryData.cakePerBracket,\r\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\r\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\r\n  }\r\n}\r\n\r\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\r\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\r\n  return claimedTickets.length > 0\r\n}\r\n","const getTokenLogoURL = (address: string) =>\r\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\r\n\r\nexport default getTokenLogoURL\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { BinanceIcon } from '@pancakeswap/uikit'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\r\nimport Logo from './Logo'\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\r\n\r\n  const srcs: string[] = useMemo(() => {\r\n    if (currency === ETHER) return []\r\n\r\n    if (currency instanceof Token) {\r\n      if (currency instanceof WrappedTokenInfo) {\r\n        return [...uriLocations, getTokenLogoURL(currency.address)]\r\n      }\r\n      return [getTokenLogoURL(currency.address)]\r\n    }\r\n    return []\r\n  }, [currency, uriLocations])\r\n\r\n  if (currency === ETHER) {\r\n    return <BinanceIcon width={size} style={style} />\r\n  }\r\n\r\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n}\r\n","import { serializeTokens } from './tokens'\r\nimport { SerializedFarmConfig } from './types'\r\n\r\nconst serializedTokens = serializeTokens()\r\n\r\nconst farms: SerializedFarmConfig[] = [\r\n  /**\r\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\r\n   */\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n      // 56: '0x327134dE48fcDD75320f4c32498D1980470249ae',\r\n    },\r\n    token: serializedTokens.busd,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'ZLT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\r\n      56: '0xe832F83D1708026E82c0127a310D64BF7DC74e8d',\r\n      // 56: '0x5ec2ec1C9d2e6DEba58536c5Ecbe2E955CC4c227',\r\n    },\r\n    token: serializedTokens.zlt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'ZLT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAb8D6d550A73eCE01B1B1020AB7fE37634283576',\r\n      // 56: '0x5ec2ec1C9d2e6DEba58536c5Ecbe2E955CC4c227',\r\n    },\r\n    token: serializedTokens.zlt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n\r\n  // {\r\n  //   pid: 2,\r\n  //   lpSymbol: 'ZLT-BNB LP',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0x5ec2ec1C9d2e6DEba58536c5Ecbe2E955CC4c227',\r\n  //   },\r\n  //   token: serializedTokens.zlt,\r\n  //   quoteToken: serializedTokens.wbnb,\r\n  // },\r\n\r\n]\r\n\r\nexport default farms\r\n","import { INFO_CLIENT } from 'config/constants/endpoints'\r\nimport { PairDataTimeWindowEnum } from '../types'\r\n\r\n// Specifies the amount of data points to query for specific time window\r\nexport const timeWindowIdsCountMapping: Record<PairDataTimeWindowEnum, number> = {\r\n  [PairDataTimeWindowEnum.DAY]: 24,\r\n  [PairDataTimeWindowEnum.WEEK]: 28,\r\n  [PairDataTimeWindowEnum.MONTH]: 30,\r\n  [PairDataTimeWindowEnum.YEAR]: 24,\r\n}\r\n\r\n// How many StreamingFast ids to skip when querying the data\r\nexport const timeWindowGapMapping: Record<PairDataTimeWindowEnum, number | null> = {\r\n  [PairDataTimeWindowEnum.DAY]: null,\r\n  [PairDataTimeWindowEnum.WEEK]: 6, // Each datapoint 6 hours apart\r\n  [PairDataTimeWindowEnum.MONTH]: 1, // Each datapoint 1 day apart\r\n  [PairDataTimeWindowEnum.YEAR]: 15, // Each datapoint 15 days apart\r\n}\r\n\r\n// Extra headers\r\n// Mostly for dev environment\r\n// No production env check since production preview might also need them\r\nexport const getHeaders = (endpoint: string) => {\r\n  if (endpoint === INFO_CLIENT) {\r\n    return { 'X-Sf': process.env.REACT_APP_SF_HEADER }\r\n  }\r\n  return undefined\r\n}\r\n","import { ethers, Contract, Overrides } from 'ethers'\r\n\r\n/**\r\n * Estimate the gas needed to call a function, and add a 10% margin\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the methode called\r\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\r\n * @param args An array of arguments to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const estimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[],\r\n  gasMarginPer10000: number,\r\n) => {\r\n  if (!contract[methodName]) {\r\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\r\n  }\r\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\r\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\r\n  const gasEstimation = rawGasEstimation\r\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\r\n    .div(ethers.BigNumber.from(10000))\r\n  return gasEstimation\r\n}\r\n\r\n/**\r\n * Perform a contract call with a gas value returned from estimateGas\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const callWithEstimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[] = [],\r\n  overrides: Overrides = {},\r\n  gasMarginPer10000 = 1000,\r\n): Promise<ethers.providers.TransactionResponse> => {\r\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\r\n  const tx = await contract[methodName](...methodArgs, {\r\n    gasLimit: gasEstimation,\r\n    ...overrides,\r\n  })\r\n  return tx\r\n}\r\n","/* eslint-disable import/prefer-default-export */\r\nimport BigNumber from 'bignumber.js'\r\nimport pools from 'config/constants/pools'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport multicall from '../multicall'\r\nimport { simpleRpcProvider } from '../providers'\r\nimport { getAddress } from '../addressHelpers'\r\n\r\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */\r\nexport const getActivePools = async (block?: number) => {\r\n  const eligiblePools = pools\r\n    .filter((pool) => pool.sousId !== 0)\r\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'startBlock',\r\n  }))\r\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'bonusEndBlock',\r\n  }))\r\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\r\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\r\n\r\n  return eligiblePools.reduce((accum, poolCheck, index) => {\r\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\r\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\r\n\r\n    if (!startBlock || !endBlock) {\r\n      return accum\r\n    }\r\n\r\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\r\n      return accum\r\n    }\r\n\r\n    return [...accum, poolCheck]\r\n  }, [])\r\n}\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\r\n  const library = new ethers.providers.Web3Provider(provider)\r\n  library.pollingInterval = POLLING_INTERVAL\r\n  return library\r\n}\r\n\r\n/**\r\n * BSC Wallet requires a different sign method\r\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\r\n */\r\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\r\n  if (window.BinanceChain) {\r\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\r\n    return signature\r\n  }\r\n\r\n  /**\r\n   * Wallet Connect does not sign the message correctly unless you use their method\r\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\r\n   */\r\n  if (provider.provider?.wc) {\r\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\r\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\r\n    return signature\r\n  }\r\n\r\n  return provider.getSigner(account).signMessage(message)\r\n}\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString: string) {\r\n  return /^0x0*$/.test(hexNumberString)\r\n}\r\n","import { EN } from 'config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL\r\n\r\nexport const LS_KEY = 'pancakeswap_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n  try {\r\n    const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n    return codeFromStorage || EN.locale\r\n  } catch {\r\n    return EN.locale\r\n  }\r\n}\r\n","import { GraphQLClient } from 'graphql-request'\r\n\r\nconst requestWithTimeout = <T extends any>(\r\n  graphQLClient: GraphQLClient,\r\n  request: string,\r\n  variables?: any,\r\n  timeout = 30000,\r\n): Promise<T> => {\r\n  return Promise.race([\r\n    variables ? graphQLClient.request<T>(request, variables) : graphQLClient.request<T>(request),\r\n    new Promise((_, reject) => {\r\n      setTimeout(() => {\r\n        reject(new Error(`Request timed out after ${timeout} milliseconds`))\r\n      }, timeout)\r\n    }),\r\n  ]) as Promise<T>\r\n}\r\n\r\nexport default requestWithTimeout\r\n","/**\r\n * Truncate a transaction or address hash\r\n */\r\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\r\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\r\n}\r\n\r\nexport default truncateHash\r\n","import { useEffect, useState } from 'react'\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value)\r\n    }, delay)\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","import { useEffect, useReducer, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\r\n\r\n/**\r\n * This hook is handling all the calculator state and calculations.\r\n * UI connected to it is merely representation of the data and buttons to trigger actions\r\n */\r\n\r\n// Mapping from the compounding frequency button index to actual compounding frequency\r\n// in number of compounds per day\r\nconst compoundingIndexToFrequency = {\r\n  0: 1,\r\n  1: 0.142857142,\r\n  2: 0.071428571, // once every 7 days\r\n  3: 0.033333333, // once every 30 days\r\n}\r\n\r\nconst TOKEN_PRECISION = 10\r\nconst USD_PRECISION = 2\r\n\r\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\r\nexport enum EditingCurrency {\r\n  TOKEN,\r\n  USD,\r\n}\r\n\r\n// Calculator works in 2 modes\r\nexport enum CalculatorMode {\r\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\r\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\r\n}\r\n\r\nexport interface RoiCalculatorReducerState {\r\n  controls: {\r\n    compounding: boolean // Compounding checkbox state\r\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\r\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\r\n    stakingDuration: number // index of active staking duration button in ButtonMenu\r\n    mode: CalculatorMode\r\n    editingCurrency: EditingCurrency\r\n  }\r\n  data: {\r\n    principalAsToken: string // Used as value for Inputs\r\n    principalAsUSD: string // Used as value for Inputs\r\n    roiUSD: number\r\n    roiTokens: number\r\n    roiPercentage: number // ROI expressed in percentage relative to principal\r\n  }\r\n}\r\n\r\nconst initialState: RoiCalculatorReducerState = {\r\n  controls: {\r\n    compounding: false,\r\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\r\n    activeCompoundingIndex: 0, // active compounding selected in\r\n    stakingDuration: 0,\r\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\r\n    editingCurrency: EditingCurrency.USD,\r\n  },\r\n  data: {\r\n    principalAsToken: '0.00',\r\n    principalAsUSD: '',\r\n    roiUSD: 0,\r\n    roiTokens: 0,\r\n    roiPercentage: 0,\r\n  },\r\n}\r\n\r\nconst roiCalculatorReducer = (\r\n  state: RoiCalculatorReducerState,\r\n  action: { type: string; payload?: any },\r\n): RoiCalculatorReducerState => {\r\n  switch (action.type) {\r\n    case 'setStakingDuration': {\r\n      const controls = { ...state.controls, stakingDuration: action.payload }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'toggleCompounding': {\r\n      const toggledCompounding = !state.controls.compounding\r\n      const controls = { ...state.controls, compounding: toggledCompounding }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'setCompoundingFrequency': {\r\n      const { index, autoCompoundFrequency } = action.payload\r\n      if (autoCompoundFrequency) {\r\n        return {\r\n          ...state,\r\n          controls: {\r\n            ...state.controls,\r\n            compoundingFrequency: autoCompoundFrequency,\r\n          },\r\n        }\r\n      }\r\n      const compoundingFrequency = compoundingIndexToFrequency[index]\r\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'setPrincipal': {\r\n      const { principalAsUSD, principalAsToken } = action.payload\r\n      const data = { ...state.data, principalAsUSD, principalAsToken }\r\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\r\n      return {\r\n        controls,\r\n        data,\r\n      }\r\n    }\r\n    case 'setPrincipalForTargetRoi': {\r\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\r\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\r\n      return {\r\n        ...state,\r\n        data,\r\n      }\r\n    }\r\n    case 'setCalculatorMode': {\r\n      const mode = action.payload\r\n      const controls = { ...state.controls, mode }\r\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\r\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\r\n        const data = { ...state.data, roiUSD }\r\n        return { controls, data }\r\n      }\r\n      return { ...state, controls }\r\n    }\r\n    case 'setRoi': {\r\n      const data = { ...state.data, ...action.payload }\r\n      return { ...state, data }\r\n    }\r\n    case 'setTargetRoi': {\r\n      const { roiUSD, roiTokens } = action.payload\r\n      const data = { ...state.data, roiUSD, roiTokens }\r\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\r\n      return { controls, data }\r\n    }\r\n    case 'toggleEditingCurrency': {\r\n      const currencyAfterChange =\r\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\r\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\r\n      return { ...state, controls }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useRoiCalculatorReducer = (\r\n  stakingTokenPrice: number,\r\n  earningTokenPrice: number,\r\n  apr: number,\r\n  autoCompoundFrequency: number,\r\n  performanceFee: number,\r\n) => {\r\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\r\n  const { principalAsUSD, roiUSD } = state.data\r\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\r\n\r\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\r\n  useEffect(() => {\r\n    if (autoCompoundFrequency > 0) {\r\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\r\n    }\r\n  }, [autoCompoundFrequency])\r\n\r\n  // Calculates and sets ROI whenever related values change\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\r\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\r\n      const compoundFrequency = compounding ? compoundingFrequency : 0\r\n      const interestBreakdown = getInterestBreakdown({\r\n        principalInUSD: principalInUSDAsNumber,\r\n        apr,\r\n        earningTokenPrice,\r\n        compoundFrequency,\r\n        performanceFee,\r\n      })\r\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\r\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\r\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\r\n      const roiPercentage = hasInterest\r\n        ? getRoi({\r\n            amountEarned: roiAsUSD,\r\n            amountInvested: principalInUSDAsNumber,\r\n          })\r\n        : 0\r\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\r\n    }\r\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\r\n\r\n  // Calculates and sets principal based on expected ROI value\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\r\n      const principalForExpectedRoi = getPrincipalForInterest(\r\n        roiUSD,\r\n        apr,\r\n        compounding ? compoundingFrequency : 0,\r\n        performanceFee,\r\n      )\r\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\r\n        ? principalForExpectedRoi[stakingDuration]\r\n        : 0\r\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\r\n      const roiPercentage = getRoi({\r\n        amountEarned: roiUSD,\r\n        amountInvested: principalUSD,\r\n      })\r\n      dispatch({\r\n        type: 'setPrincipalForTargetRoi',\r\n        payload: {\r\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\r\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\r\n          roiPercentage,\r\n        },\r\n      })\r\n    }\r\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\r\n\r\n  // Handler for compounding frequency buttons\r\n  const setCompoundingFrequency = (index: number) => {\r\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\r\n  }\r\n\r\n  // Handler for principal input when in USD mode\r\n  const setPrincipalFromUSDValue = (amount: string) => {\r\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\r\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\r\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\r\n  }\r\n\r\n  // Handler for principal input when in Token mode\r\n  const setPrincipalFromTokenValue = useCallback(\r\n    (amount: string) => {\r\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\r\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\r\n      dispatch({\r\n        type: 'setPrincipal',\r\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\r\n      })\r\n    },\r\n    [stakingTokenPrice],\r\n  )\r\n\r\n  // Handler for staking duration buttons\r\n  const setStakingDuration = (stakingDurationIndex: number) => {\r\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\r\n  }\r\n\r\n  // Handler for compounding checkbox\r\n  const toggleCompounding = () => {\r\n    dispatch({ type: 'toggleCompounding' })\r\n  }\r\n\r\n  // Handler for principal input mode switch\r\n  const toggleEditingCurrency = () => {\r\n    dispatch({ type: 'toggleEditingCurrency' })\r\n  }\r\n\r\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\r\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\r\n  }\r\n\r\n  // Handler for ROI input\r\n  const setTargetRoi = (amount: string) => {\r\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\r\n    dispatch({\r\n      type: 'setTargetRoi',\r\n      payload: { roiUSD: +amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\r\n    })\r\n  }\r\n\r\n  return {\r\n    state,\r\n    setPrincipalFromUSDValue,\r\n    setPrincipalFromTokenValue,\r\n    setStakingDuration,\r\n    toggleCompounding,\r\n    toggleEditingCurrency,\r\n    setCompoundingFrequency,\r\n    setCalculatorMode,\r\n    setTargetRoi,\r\n  }\r\n}\r\n\r\nexport default useRoiCalculatorReducer\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getApy } from 'utils/compoundApyHelpers'\r\n\r\nconst Footer = styled(Flex)`\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n\r\nconst BulletList = styled.ul`\r\n  list-style-type: none;\r\n  margin-top: 16px;\r\n  padding: 0;\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  li::before {\r\n    content: '•';\r\n    margin-right: 4px;\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n  li::marker {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\ninterface RoiCalculatorFooterProps {\r\n  isFarm: boolean\r\n  apr: number\r\n  displayApr: string\r\n  autoCompoundFrequency: number\r\n  multiplier: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  performanceFee: number\r\n}\r\n\r\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\r\n  isFarm,\r\n  apr,\r\n  displayApr,\r\n  autoCompoundFrequency,\r\n  multiplier,\r\n  linkLabel,\r\n  linkHref,\r\n  performanceFee,\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const { t } = useTranslation()\r\n  const {\r\n    targetRef: multiplierRef,\r\n    tooltip: multiplierTooltip,\r\n    tooltipVisible: multiplierTooltipVisible,\r\n  } = useTooltip(\r\n    <>\r\n      <Text>\r\n        {t(\r\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\r\n        )}\r\n      </Text>\r\n      <Text my=\"24px\">\r\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\r\n      </Text>\r\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\r\n    </>,\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const gridRowCount = isFarm ? 4 : 2\r\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\r\n\r\n  return (\r\n    <Footer p=\"16px\" flexDirection=\"column\">\r\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\r\n        {isExpanded ? t('Hide') : t('Details')}\r\n      </ExpandableLabel>\r\n      {isExpanded && (\r\n        <Box px=\"8px\">\r\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\r\n            {isFarm && (\r\n              <>\r\n                <Text color=\"textSubtle\" small>\r\n                  {t('APR (incl. LP rewards)')}\r\n                </Text>\r\n                <Text small textAlign=\"right\">\r\n                  {displayApr}%\r\n                </Text>\r\n              </>\r\n            )}\r\n            {isFarm && (\r\n              <>\r\n                <Text color=\"textSubtle\" small>\r\n                  {t('Farm Multiplier')}\r\n                </Text>\r\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\r\n                  <Text small textAlign=\"right\" mr=\"4px\">\r\n                    {multiplier}\r\n                  </Text>\r\n                  <span ref={multiplierRef}>\r\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\r\n                  </span>\r\n                  {multiplierTooltipVisible && multiplierTooltip}\r\n                </Flex>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <BulletList>\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t('Calculated based on current rates.')}\r\n              </Text>\r\n            </li>\r\n            {isFarm && (\r\n              <li>\r\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\r\n                </Text>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t(\r\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n                )}\r\n              </Text>\r\n            </li>\r\n            {performanceFee > 0 && (\r\n              <li>\r\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\r\n                    fee: performanceFee,\r\n                  })}\r\n                </Text>\r\n              </li>\r\n            )}\r\n          </BulletList>\r\n          <Flex justifyContent=\"center\" mt=\"24px\">\r\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n    </Footer>\r\n  )\r\n}\r\n\r\nexport default RoiCalculatorFooter\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\r\n\r\nconst MILLION = 1000000\r\nconst TRILLION = 1000000000000\r\n\r\nconst RoiCardWrapper = styled(Box)`\r\n  background: linear-gradient(180deg, #53dee9, #7645d9);\r\n  padding: 1px;\r\n  width: 100%;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n`\r\n\r\nconst RoiCardInner = styled(Box)`\r\n  height: 120px;\r\n  padding: 24px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst RoiInputContainer = styled(Box)`\r\n  position: relative;\r\n  & > input {\r\n    padding-left: 28px;\r\n    max-width: 70%;\r\n  }\r\n  &:before {\r\n    position: absolute;\r\n    content: '$';\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n    left: 16px;\r\n    top: 8px;\r\n  }\r\n`\r\n\r\nconst RoiDisplayContainer = styled(Flex)`\r\n  max-width: 82%;\r\n  margin-right: 8px;\r\n`\r\n\r\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\r\n  position: relative;\r\n  overflow-x: auto;\r\n  &::-webkit-scrollbar {\r\n    height: 0px;\r\n  }\r\n\r\n  ${({ fadeOut, theme }) =>\r\n    fadeOut &&\r\n    `\r\n      &:after {\r\n        background: linear-gradient(\r\n          to right,\r\n          ${theme.colors.background}00,\r\n          ${theme.colors.background}E6\r\n        );\r\n        content: '';\r\n        height: 100%;\r\n        pointer-events: none;\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        width: 40px;\r\n      }\r\n  `}\r\n`\r\n\r\ninterface RoiCardProps {\r\n  earningTokenSymbol: string\r\n  calculatorState: RoiCalculatorReducerState\r\n  setTargetRoi: (amount: string) => void\r\n  setCalculatorMode: (mode: CalculatorMode) => void\r\n}\r\n\r\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\r\n  const [expectedRoi, setExpectedRoi] = useState('')\r\n  const inputRef = useRef<HTMLInputElement | null>(null)\r\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\r\n  const { mode } = calculatorState.controls\r\n\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\r\n      inputRef.current.focus()\r\n    }\r\n  }, [mode])\r\n\r\n  const onEnterEditing = () => {\r\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\r\n    setExpectedRoi(\r\n      roiUSD.toLocaleString('en', {\r\n        minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\r\n        maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\r\n      }),\r\n    )\r\n  }\r\n\r\n  const onExitRoiEditing = () => {\r\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\r\n  }\r\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.currentTarget.validity.valid) {\r\n      const roiAsString = event.target.value.replace(/,/g, '.')\r\n      setTargetRoi(roiAsString)\r\n      setExpectedRoi(roiAsString)\r\n    }\r\n  }\r\n  return (\r\n    <RoiCardWrapper>\r\n      <RoiCardInner>\r\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\r\n          {t('ROI at current rates')}\r\n        </Text>\r\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\r\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\r\n            <>\r\n              <RoiInputContainer>\r\n                <Input\r\n                  ref={inputRef}\r\n                  type=\"text\"\r\n                  inputMode=\"decimal\"\r\n                  pattern=\"^[0-9]+[.,]?[0-9]*$\"\r\n                  scale=\"sm\"\r\n                  value={expectedRoi}\r\n                  placeholder=\"0.0\"\r\n                  onChange={handleExpectedRoiChange}\r\n                />\r\n              </RoiInputContainer>\r\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\r\n                <CheckmarkIcon color=\"primary\" />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <RoiDisplayContainer onClick={onEnterEditing}>\r\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\r\n                <Text fontSize=\"24px\" bold>\r\n                  $\r\n                </Text>\r\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\r\n                  {roiUSD.toLocaleString('en', {\r\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\r\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\r\n                  })}\r\n                </RoiDollarAmount>\r\n              </RoiDisplayContainer>\r\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\r\n                <PencilIcon color=\"primary\" />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          ~ {roiTokens} {earningTokenSymbol} (\r\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n          %)\r\n        </Text>\r\n      </RoiCardInner>\r\n    </RoiCardWrapper>\r\n  )\r\n}\r\n\r\nexport default RoiCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\r\n\r\nconst rotate = keyframes`\r\n  0% {\r\n    transform: scale(1);\r\n    stroke-width: 0;\r\n  }\r\n  50% {\r\n    transform: scale(1.3);\r\n    stroke-width: 2;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    stroke-width: 0;\r\n  }\r\n`\r\n\r\nconst ArrowContainer = styled(Flex)`\r\n  & > svg {\r\n    animation: 0.2s ${rotate} linear;\r\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\r\n    stroke-width: 0;\r\n  }\r\n`\r\n\r\ninterface AnimatedArrowProps {\r\n  calculatorState: RoiCalculatorReducerState\r\n}\r\n\r\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\r\n  const [key, setKey] = useState('roiArrow-0')\r\n  const { mode } = calculatorState.controls\r\n\r\n  // Trigger animation on state change\r\n  useEffect(() => {\r\n    setKey((prevKey) => {\r\n      const prevId = parseInt(prevKey.split('-')[1], 10)\r\n      return `roiArrow-${prevId + 1}`\r\n    })\r\n  }, [calculatorState])\r\n\r\n  return (\r\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\r\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\r\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\r\n      ) : (\r\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\r\n      )}\r\n    </ArrowContainer>\r\n  )\r\n}\r\n\r\nexport default AnimatedArrow\r\n","import React, { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Flex,\r\n  ButtonMenu,\r\n  Checkbox,\r\n  BalanceInput,\r\n  HelpIcon,\r\n  ButtonMenuItem,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\r\nimport RoiCard from './RoiCard'\r\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\r\nimport AnimatedArrow from './AnimatedArrow'\r\n\r\ninterface RoiCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  onBack?: () => void\r\n  earningTokenPrice: number\r\n  apr: number\r\n  displayApr?: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenSymbol: string\r\n  stakingTokenPrice: number\r\n  earningTokenSymbol?: string\r\n  multiplier?: string\r\n  autoCompoundFrequency?: number\r\n  performanceFee?: number\r\n  isFarm?: boolean\r\n  initialValue?: string\r\n}\r\n\r\nconst StyledModal = styled(Modal)`\r\n  width: 345px;\r\n  & > :nth-child(2) {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ScrollableContainer = styled.div`\r\n  padding: 24px;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-height: none;\r\n  }\r\n`\r\n\r\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\r\n  width: 100%;\r\n\r\n  & > button {\r\n    width: 100%;\r\n  }\r\n\r\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\r\n`\r\n\r\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\r\n  onDismiss,\r\n  onBack,\r\n  earningTokenPrice,\r\n  apr,\r\n  displayApr,\r\n  linkLabel,\r\n  linkHref,\r\n  stakingTokenBalance,\r\n  stakingTokenSymbol,\r\n  stakingTokenPrice,\r\n  multiplier,\r\n  initialValue,\r\n  earningTokenSymbol = 'ZLT',\r\n  autoCompoundFrequency = 0,\r\n  performanceFee = 0, \r\n  isFarm = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useActiveWeb3React()\r\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\r\n\r\n  const {\r\n    state,\r\n    setPrincipalFromUSDValue,\r\n    setPrincipalFromTokenValue,\r\n    setStakingDuration,\r\n    toggleCompounding,\r\n    toggleEditingCurrency,\r\n    setCompoundingFrequency,\r\n    setCalculatorMode,\r\n    setTargetRoi,\r\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\r\n\r\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\r\n  const { principalAsUSD, principalAsToken } = state.data\r\n\r\n  // Auto-focus input on opening modal\r\n  useEffect(() => {\r\n    if (balanceInputRef.current) {\r\n      balanceInputRef.current.focus()\r\n    }\r\n  }, [])\r\n\r\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\r\n  useEffect(() => {\r\n    if (initialValue) {\r\n      setPrincipalFromTokenValue(initialValue)\r\n    }\r\n  }, [initialValue, setPrincipalFromTokenValue])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    isFarm\r\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\r\n      : t(\r\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\r\n          { assetSymbol: stakingTokenSymbol },\r\n        ),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const onBalanceFocus = () => {\r\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\r\n  }\r\n\r\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\r\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\r\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\r\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\r\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\r\n\r\n  return (\r\n    <StyledModal\r\n      title={t('ROI Calculator')}\r\n      onDismiss={onBack || onDismiss}\r\n      onBack={onBack ?? null}\r\n      headerBackground=\"gradients.cardHeader\"\r\n    >\r\n      <ScrollableContainer>\r\n        <Flex flexDirection=\"column\" mb=\"8px\">\r\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\r\n          </Text>\r\n          <BalanceInput\r\n            currencyValue={`${conversionValue} ${conversionUnit}`}\r\n            innerRef={balanceInputRef}\r\n            placeholder=\"0.00\"\r\n            value={editingValue}\r\n            unit={editingUnit}\r\n            onUserInput={onUserInput}\r\n            switchEditingUnits={toggleEditingCurrency}\r\n            onFocus={onBalanceFocus}\r\n          />\r\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\r\n            <Button\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"68px\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setPrincipalFromUSDValue('100')}\r\n            >\r\n              $100\r\n            </Button>\r\n            <Button\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"68px\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setPrincipalFromUSDValue('1000')}\r\n            >\r\n              $1000\r\n            </Button>\r\n            <Button\r\n              disabled={stakingTokenBalance.lte(0) || !account}\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"128px\"\r\n              variant=\"tertiary\"\r\n              onClick={() =>\r\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\r\n              }\r\n            >\r\n              {t('My Balance').toLocaleUpperCase()}\r\n            </Button>\r\n            <span ref={targetRef}>\r\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\r\n            </span>\r\n            {tooltipVisible && tooltip}\r\n          </Flex>\r\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n            {t('Staked for')}\r\n          </Text>\r\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\r\n            <ButtonMenuItem variant=\"tertiary\">{t('15D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('60D')}</ButtonMenuItem>\r\n          </FullWidthButtonMenu>\r\n        </Flex>\r\n        <AnimatedArrow calculatorState={state} />\r\n        <Flex>\r\n          <RoiCard\r\n            earningTokenSymbol={earningTokenSymbol}\r\n            calculatorState={state}\r\n            setTargetRoi={setTargetRoi}\r\n            setCalculatorMode={setCalculatorMode}\r\n          />\r\n        </Flex>\r\n      </ScrollableContainer>\r\n      <RoiCalculatorFooter\r\n        isFarm={isFarm}\r\n        apr={apr}\r\n        displayApr={displayApr}\r\n        autoCompoundFrequency={autoCompoundFrequency}\r\n        multiplier={multiplier}\r\n        linkLabel={linkLabel}\r\n        linkHref={linkHref}\r\n        performanceFee={performanceFee}\r\n      />\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nexport default RoiCalculatorModal\r\n","import { useCallback } from 'react'\r\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { profileClear } from 'state/profile'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { clearAllTransactions } from 'state/transactions/actions'\r\nimport { resetUserNftState } from '../state/nftMarket/reducer'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { chainId, activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(profileClear())\r\n    dispatch(resetUserNftState())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n    window.localStorage.removeItem(connectorLocalStorageKey)\r\n    if (chainId) {\r\n      dispatch(clearAllTransactions({ chainId }))\r\n    }\r\n  }, [deactivate, dispatch, chainId])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","/* eslint-disable no-case-declarations */\r\n/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\r\nexport default function uriToHttp(uri: string): string[] {\r\n  const protocol = uri.split(':')[0].toLowerCase()\r\n  switch (protocol) {\r\n    case 'https':\r\n      return [uri]\r\n    case 'http':\r\n      return [`https${uri.substr(4)}`, uri]\r\n    case 'ipfs':\r\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\r\n    case 'ipns':\r\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = window.ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error('Failed to setup the network in Metamask:', error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\r\n  const tokenAdded = await window.ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n  if (currency === ETHER) return 'BNB'\r\n  if (currency instanceof Token) return currency.address\r\n  throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\r\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\r\n\r\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\r\nexport function isTradeBetter(\r\n  tradeA: Trade | undefined | null,\r\n  tradeB: Trade | undefined | null,\r\n  minimumDelta: Percent = ZERO_PERCENT,\r\n): boolean | undefined {\r\n  if (tradeA && !tradeB) return false\r\n  if (tradeB && !tradeA) return true\r\n  if (!tradeA || !tradeB) return undefined\r\n\r\n  if (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\r\n  ) {\r\n    throw new Error('Trades are not comparable')\r\n  }\r\n\r\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\r\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\r\n  }\r\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\r\n}\r\n\r\nexport default isTradeBetter\r\n","/* eslint-disable no-param-reassign */\r\nimport { isTradeBetter } from 'utils/trades'\r\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\r\nimport flatMap from 'lodash/flatMap'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nimport { useUserSingleHopOnly } from 'state/user/hooks'\r\nimport {\r\n  BASES_TO_CHECK_TRADES_AGAINST,\r\n  CUSTOM_BASES,\r\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\r\n  ADDITIONAL_BASES,\r\n} from '../config/constants'\r\nimport { PairState, usePairs } from './usePairs'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nimport { useUnsupportedTokens } from './Tokens'\r\n\r\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const [tokenA, tokenB] = chainId\r\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n    : [undefined, undefined]\r\n\r\n  const bases: Token[] = useMemo(() => {\r\n    if (!chainId) return []\r\n\r\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\r\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\r\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\r\n\r\n    return [...common, ...additionalA, ...additionalB]\r\n  }, [chainId, tokenA, tokenB])\r\n\r\n  const basePairs: [Token, Token][] = useMemo(\r\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\r\n    [bases],\r\n  )\r\n\r\n  const allPairCombinations: [Token, Token][] = useMemo(\r\n    () =>\r\n      tokenA && tokenB\r\n        ? [\r\n            // the direct pair\r\n            [tokenA, tokenB],\r\n            // token A against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\r\n            // token B against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\r\n            // each base against all bases\r\n            ...basePairs,\r\n          ]\r\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([t0, t1]) => t0.address !== t1.address)\r\n            .filter(([tokenA_, tokenB_]) => {\r\n              if (!chainId) return true\r\n              const customBases = CUSTOM_BASES[chainId]\r\n\r\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\r\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\r\n\r\n              if (!customBasesA && !customBasesB) return true\r\n\r\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\r\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\r\n\r\n              return true\r\n            })\r\n        : [],\r\n    [tokenA, tokenB, bases, basePairs, chainId],\r\n  )\r\n\r\n  const allPairs = usePairs(allPairCombinations)\r\n\r\n  // only pass along valid pairs, non-duplicated pairs\r\n  return useMemo(\r\n    () =>\r\n      Object.values(\r\n        allPairs\r\n          // filter out invalid pairs\r\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n          // filter out duplicated pairs\r\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\r\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\r\n            return memo\r\n          }, {}),\r\n      ),\r\n    [allPairs],\r\n  )\r\n}\r\n\r\nconst MAX_HOPS = 3\r\n\r\n/**\r\n * Returns the best trade for the exact amount of tokens in to the given token out\r\n */\r\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  return useMemo(() => {\r\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\r\n      if (singleHopOnly) {\r\n        return (\r\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\r\n          null\r\n        )\r\n      }\r\n      // search through trades with varying hops, find best trade out of them\r\n      let bestTradeSoFar: Trade | null = null\r\n      for (let i = 1; i <= MAX_HOPS; i++) {\r\n        const currentTrade: Trade | null =\r\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\r\n          null\r\n        // if current trade is best yet, save it\r\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n          bestTradeSoFar = currentTrade\r\n        }\r\n      }\r\n      return bestTradeSoFar\r\n    }\r\n\r\n    return null\r\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\r\n}\r\n\r\n/**\r\n * Returns the best trade for the token in to the exact amount of token out\r\n */\r\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  return useMemo(() => {\r\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\r\n      if (singleHopOnly) {\r\n        return (\r\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\r\n          null\r\n        )\r\n      }\r\n      // search through trades with varying hops, find best trade out of them\r\n      let bestTradeSoFar: Trade | null = null\r\n      for (let i = 1; i <= MAX_HOPS; i++) {\r\n        const currentTrade =\r\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\r\n          null\r\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n          bestTradeSoFar = currentTrade\r\n        }\r\n      }\r\n      return bestTradeSoFar\r\n    }\r\n    return null\r\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\r\n}\r\n\r\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\r\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\r\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\r\n\r\n  // if unsupported list loaded & either token on list, mark as unsupported\r\n  if (unsupportedTokens) {\r\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\r\n      return true\r\n    }\r\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","export const TICKET_LIMIT_PER_REQUEST = 2500\r\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\r\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\r\n","import React, { useCallback } from 'react'\r\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ErrorIcon,\r\n  ArrowUpIcon,\r\n  MetamaskIcon,\r\n  Flex,\r\n  Box,\r\n  Link,\r\n  Spinner,\r\n  Modal,\r\n  InjectedModalProps,\r\n} from '@pancakeswap/uikit'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { RowFixed } from '../Layout/Row'\r\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\r\nimport { getBscScanLink } from '../../utils'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`\r\nconst Section = styled(AutoColumn)`\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 24px 0;\r\n`\r\n\r\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <ConfirmedIcon>\r\n        <Spinner />\r\n      </ConfirmedIcon>\r\n      <AutoColumn gap=\"12px\" justify=\"center\">\r\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text bold small textAlign=\"center\">\r\n            {pendingText}\r\n          </Text>\r\n        </AutoColumn>\r\n        <Text small color=\"textSubtle\" textAlign=\"center\">\r\n          {t('Confirm this transaction in your wallet')}\r\n        </Text>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nfunction TransactionSubmittedContent({\r\n  onDismiss,\r\n  chainId,\r\n  hash,\r\n  currencyToAdd,\r\n}: {\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  chainId: ChainId\r\n  currencyToAdd?: Currency | undefined\r\n}) {\r\n  const { library } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ConfirmedIcon>\r\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\r\n          {chainId && hash && (\r\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\r\n              {t('View on BscScan')}\r\n            </Link>\r\n          )}\r\n          {currencyToAdd && library?.provider?.isMetaMask && (\r\n            <Button\r\n              variant=\"tertiary\"\r\n              mt=\"12px\"\r\n              width=\"fit-content\"\r\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\r\n            >\r\n              <RowFixed>\r\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\r\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\r\n              </RowFixed>\r\n            </Button>\r\n          )}\r\n          <Button onClick={onDismiss} mt=\"20px\">\r\n            {t('Close')}\r\n          </Button>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function ConfirmationModalContent({\r\n  bottomContent,\r\n  topContent,\r\n}: {\r\n  topContent: () => React.ReactNode\r\n  bottomContent: () => React.ReactNode\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <Box>{topContent()}</Box>\r\n      <Box>{bottomContent()}</Box>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn justify=\"center\">\r\n        <ErrorIcon color=\"failure\" width=\"64px\" />\r\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\r\n          {message}\r\n        </Text>\r\n      </AutoColumn>\r\n\r\n      <Flex justifyContent=\"center\" pt=\"24px\">\r\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\ninterface ConfirmationModalProps {\r\n  title: string\r\n  customOnDismiss?: () => void\r\n  hash: string | undefined\r\n  content: () => React.ReactNode\r\n  attemptingTxn: boolean\r\n  pendingText: string\r\n  currencyToAdd?: Currency | undefined\r\n}\r\n\r\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\r\n  title,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  content,\r\n  currencyToAdd,\r\n}) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const handleDismiss = useCallback(() => {\r\n    if (customOnDismiss) {\r\n      customOnDismiss()\r\n    }\r\n    onDismiss()\r\n  }, [customOnDismiss, onDismiss])\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\r\n      {attemptingTxn ? (\r\n        <ConfirmationPendingContent pendingText={pendingText} />\r\n      ) : hash ? (\r\n        <TransactionSubmittedContent\r\n          chainId={chainId}\r\n          hash={hash}\r\n          onDismiss={onDismiss}\r\n          currencyToAdd={currencyToAdd}\r\n        />\r\n      ) : (\r\n        content()\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionConfirmationModal\r\n","import { isAddress } from '../../utils'\r\nimport useENSAddress from './useENSAddress'\r\nimport useENSName from './useENSName'\r\n\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(nameOrAddress?: string | null): {\r\n  loading: boolean\r\n  address: string | null\r\n  name: string | null\r\n} {\r\n  const validated = isAddress(nameOrAddress)\r\n  const reverseLookup = useENSName(validated || undefined)\r\n  const lookup = useENSAddress(nameOrAddress)\r\n\r\n  return {\r\n    loading: reverseLookup.loading || lookup.loading,\r\n    address: validated || lookup.address,\r\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport { isAddress } from '../../utils'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\nimport useDebounce from '../useDebounce'\r\n\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\r\n    try {\r\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedAddress])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\r\n\r\n  const changed = debouncedAddress !== address\r\n  return {\r\n    ENSName: changed ? null : name.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || name.loading,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\nimport useDebounce from '../useDebounce'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\r\n  const debouncedName = useDebounce(ensName, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedName) return [undefined]\r\n    try {\r\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\r\n\r\n  const changed = debouncedName !== ensName\r\n  return {\r\n    address: changed ? null : addr.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || addr.loading,\r\n  }\r\n}\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'Zero Loss',\r\n  description:\r\n    'The most robust PMMe on BSC! Earn ZLT through Staking/Farming or P2E games, then stake it in the Pools to earn more tokens. Initial Zeroloss Offerings (new token launch model pioneered by Zero loss), NFTs, and more, on a platform you can trust.',\r\n  image: '',\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  let basePath\r\n  if (path.startsWith('/swap')) {\r\n    basePath = '/swap'\r\n  } else if (path.startsWith('/add')) {\r\n    basePath = '/add'\r\n  } else if (path.startsWith('/remove')) {\r\n    basePath = '/remove'\r\n  } else if (path.startsWith('/teams')) {\r\n    basePath = '/teams'\r\n  } else if (path.startsWith('/voting/proposal') && path !== '/voting/proposal/create') {\r\n    basePath = '/voting/proposal'\r\n  } else if (path.startsWith('/nfts/collections')) {\r\n    basePath = '/nfts/collections'\r\n  } else if (path.startsWith('/nfts/profile')) {\r\n    basePath = '/nfts/profile'\r\n  } else if (path.startsWith('/pancake-squad')) {\r\n    basePath = '/pancake-squad'\r\n  } else {\r\n    basePath = path\r\n  }\r\n\r\n  switch (basePath) {\r\n    case '/':\r\n      return {\r\n        title: `${t('Home')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/swap':\r\n      return {\r\n        title: `${t('Exchange')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/add':\r\n      return {\r\n        title: `${t('Add Liquidity')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/remove':\r\n      return {\r\n        title: `${t('Remove Liquidity')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/liquidity':\r\n      return {\r\n        title: `${t('Liquidity')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/find':\r\n      return {\r\n        title: `${t('Import Pool')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/competition':\r\n      return {\r\n        title: `${t('Trading Battle')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/prediction':\r\n      return {\r\n        title: `${t('Prediction')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/prediction/leaderboard':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/farms':\r\n      return {\r\n        title: `${t('Farms')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/farms/auction':\r\n      return {\r\n        title: `${t('Farm Auctions')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/lottery':\r\n      return {\r\n        title: `${t('Lottery')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/ifo':\r\n      return {\r\n        title: `${t('Initial Farm Offering')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/teams':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/voting':\r\n      return {\r\n        title: `${t('Voting')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/voting/proposal':\r\n      return {\r\n        title: `${t('Proposals')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/voting/proposal/create':\r\n      return {\r\n        title: `${t('Make a Proposal')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/info':\r\n      return {\r\n        title: `${t('Overview')} | ${t('Zero Loss Info & Analytics')}`,\r\n        description: 'View statistics for Zero Loss exchanges.',\r\n      }\r\n    case '/info/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Zero Loss Info & Analytics')}`,\r\n        description: 'View statistics for Zero Loss exchanges.',\r\n      }\r\n    case '/info/tokens':\r\n      return {\r\n        title: `${t('Tokens')} | ${t('Zero Loss Info & Analytics')}`,\r\n        description: 'View statistics for Zero Loss exchanges.',\r\n      }\r\n    case '/nfts':\r\n      return {\r\n        title: `${t('Overview')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/nfts/collections':\r\n      return {\r\n        title: `${t('Collections')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/nfts/profile':\r\n      return {\r\n        title: `${t('Your Profile')} | ${t('Zero Loss')}`,\r\n      }\r\n    case '/pancake-squad':\r\n      return {\r\n        title: `${t('Pancake Squad')} | ${t('Zero Loss')}`,\r\n      }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const cakePriceUsd = useCakeBusdPrice()\r\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(13)}` : '...'\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n  if (symbol) {\r\n    pageTitle = [symbol, title].join(' - ')\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  symbol?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta symbol={symbol} />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\r\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport {\r\n  getNftsFromCollectionApi,\r\n  getNftsMarketData,\r\n  getCollectionsApi,\r\n  getCollectionsSg,\r\n  getUserActivity,\r\n  combineCollectionData,\r\n  getCollectionSg,\r\n  getCollectionApi,\r\n  getNftsFromDifferentCollectionsApi,\r\n  getCompleteAccountNftData,\r\n  getNftsByBunnyIdSg,\r\n  getMarketDataForTokenIds,\r\n  getMetadataWithFallback,\r\n  getPancakeBunniesAttributesField,\r\n  combineApiAndSgResponseToNftToken,\r\n  fetchNftsFiltered,\r\n} from './helpers'\r\nimport {\r\n  State,\r\n  Collection,\r\n  ApiCollections,\r\n  TokenIdWithCollectionAddress,\r\n  NFTMarketInitializationState,\r\n  UserNftInitializationState,\r\n  NftToken,\r\n  NftLocation,\r\n  ApiSingleTokenData,\r\n  NftAttribute,\r\n  NftFilterLoadingState,\r\n  NftFilter,\r\n} from './types'\r\n\r\nconst initialNftFilterState: NftFilter = {\r\n  loadingState: NftFilterLoadingState.IDLE,\r\n  activeFilters: {},\r\n  showOnlyOnSale: true,\r\n  ordering: {\r\n    field: 'currentAskPrice',\r\n    direction: 'asc',\r\n  },\r\n}\r\n\r\nconst initialState: State = {\r\n  initializationState: NFTMarketInitializationState.UNINITIALIZED,\r\n  data: {\r\n    collections: {},\r\n    nfts: {},\r\n    filters: {},\r\n    loadingState: {\r\n      isUpdatingPancakeBunnies: false,\r\n      latestPancakeBunniesUpdateAt: 0,\r\n    },\r\n    users: {},\r\n    user: {\r\n      userNftsInitializationState: UserNftInitializationState.UNINITIALIZED,\r\n      nfts: [],\r\n      activity: {\r\n        initializationState: UserNftInitializationState.UNINITIALIZED,\r\n        askOrderHistory: [],\r\n        buyTradeHistory: [],\r\n        sellTradeHistory: [],\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\n/**\r\n * Fetch all collections data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\r\n */\r\nexport const fetchCollections = createAsyncThunk<Record<string, Collection>>('nft/fetchCollections', async () => {\r\n  const [collections, collectionsMarket] = await Promise.all([getCollectionsApi(), getCollectionsSg()])\r\n  return combineCollectionData(collections?.data ?? [], collectionsMarket)\r\n})\r\n\r\n/**\r\n * Fetch collection data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\r\n */\r\nexport const fetchCollection = createAsyncThunk<Record<string, Collection>, string>(\r\n  'nft/fetchCollection',\r\n  async (collectionAddress) => {\r\n    const [collection, collectionMarket] = await Promise.all([\r\n      getCollectionApi(collectionAddress),\r\n      getCollectionSg(collectionAddress),\r\n    ])\r\n\r\n    return combineCollectionData([collection], [collectionMarket])\r\n  },\r\n)\r\n\r\n/**\r\n * Fetch all NFT data for a collections by combining data from the API (static metadata)\r\n * and the Subgraph (dynamic market data)\r\n * @param collectionAddress\r\n */\r\nexport const fetchNftsFromCollections = createAsyncThunk<\r\n  NftToken[],\r\n  { collectionAddress: string; page: number; size: number }\r\n>('nft/fetchNftsFromCollections', async ({ collectionAddress, page, size }) => {\r\n  try {\r\n    if (collectionAddress === pancakeBunniesAddress) {\r\n      // PancakeBunnies don't need to pre-fetch \"all nfts\" from the collection\r\n      // When user visits IndividualNFTPage required nfts will be fetched via bunny id\r\n      return []\r\n    }\r\n\r\n    const nfts = await getNftsFromCollectionApi(collectionAddress, size, page)\r\n\r\n    if (!nfts?.data) {\r\n      return []\r\n    }\r\n\r\n    const tokenIds = Object.values(nfts.data).map((nft) => nft.tokenId)\r\n    const nftsMarket = await getMarketDataForTokenIds(collectionAddress, tokenIds)\r\n\r\n    return tokenIds.map((id) => {\r\n      const apiMetadata = nfts.data[id]\r\n      const marketData = nftsMarket.find((nft) => nft.tokenId === id)\r\n\r\n      return {\r\n        tokenId: id,\r\n        name: apiMetadata.name,\r\n        description: apiMetadata.description,\r\n        collectionName: apiMetadata.collection.name,\r\n        collectionAddress,\r\n        image: apiMetadata.image,\r\n        attributes: apiMetadata.attributes,\r\n        marketData,\r\n      }\r\n    })\r\n  } catch (error) {\r\n    console.error(`Failed to fetch collection NFTs for ${collectionAddress}`, error)\r\n    return []\r\n  }\r\n})\r\n\r\nexport const filterNftsFromCollection = createAsyncThunk<\r\n  NftToken[],\r\n  { collectionAddress: string; nftFilters: Record<string, NftAttribute> }\r\n>('nft/filterNftsFromCollection', async ({ collectionAddress, nftFilters }) => {\r\n  try {\r\n    const attrParams = Object.values(nftFilters).reduce(\r\n      (accum, attr) => ({\r\n        ...accum,\r\n        [attr.traitType]: attr.value,\r\n      }),\r\n      {},\r\n    )\r\n    if (isEmpty(attrParams)) {\r\n      return []\r\n    }\r\n    const attrFilters = await fetchNftsFiltered(collectionAddress, attrParams)\r\n\r\n    // Fetch market data for each token returned\r\n    const tokenIds = Object.values(attrFilters.data).map((apiToken) => apiToken.tokenId)\r\n    const marketData = await getNftsMarketData({ tokenId_in: tokenIds, collection: collectionAddress.toLowerCase() })\r\n\r\n    const nftTokens: NftToken[] = Object.values(attrFilters.data).map((apiToken) => {\r\n      const apiTokenMarketData = marketData.find((tokenMarketData) => tokenMarketData.tokenId === apiToken.tokenId)\r\n\r\n      return {\r\n        tokenId: apiToken.tokenId,\r\n        name: apiToken.name,\r\n        description: apiToken.description,\r\n        collectionName: apiToken.collection.name,\r\n        collectionAddress,\r\n        image: apiToken.image,\r\n        attributes: apiToken.attributes,\r\n        marketData: apiTokenMarketData,\r\n      }\r\n    })\r\n\r\n    return nftTokens\r\n  } catch {\r\n    return []\r\n  }\r\n})\r\n\r\n/**\r\n * This action keeps data on the individual PancakeBunny page up-to-date. Operation is a twofold\r\n * 1. Update existing NFTs in the state in case some were sold or got price modified\r\n * 2. Fetch 30 more NFTs with specified bunny id\r\n */\r\nexport const fetchNewPBAndUpdateExisting = createAsyncThunk<\r\n  NftToken[],\r\n  {\r\n    bunnyId: string\r\n    existingTokensWithBunnyId: string[]\r\n    allExistingPBTokenIds: string[]\r\n    existingMetadata: ApiSingleTokenData\r\n    orderDirection: 'asc' | 'desc'\r\n  }\r\n>(\r\n  'nft/fetchNewPBAndUpdateExisting',\r\n  async ({ bunnyId, existingTokensWithBunnyId, allExistingPBTokenIds, existingMetadata, orderDirection }) => {\r\n    try {\r\n      // 1. Update existing NFTs in the state in case some were sold or got price modified\r\n      const [updatedNfts, updatedNftsMarket] = await Promise.all([\r\n        getNftsFromCollectionApi(pancakeBunniesAddress),\r\n        getMarketDataForTokenIds(pancakeBunniesAddress, allExistingPBTokenIds),\r\n      ])\r\n\r\n      if (!updatedNfts?.data) {\r\n        return []\r\n      }\r\n      const updatedTokens = updatedNftsMarket.map((marketData) => {\r\n        const apiMetadata = getMetadataWithFallback(updatedNfts.data, marketData.otherId)\r\n        const attributes = getPancakeBunniesAttributesField(marketData.otherId)\r\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\r\n      })\r\n\r\n      // 2. Fetch 30 more NFTs with specified bunny id\r\n      let newNfts = { data: { [bunnyId]: existingMetadata } }\r\n\r\n      if (!existingMetadata) {\r\n        newNfts = await getNftsFromCollectionApi(pancakeBunniesAddress)\r\n      }\r\n      const nftsMarket = await getNftsByBunnyIdSg(bunnyId, existingTokensWithBunnyId, orderDirection)\r\n\r\n      if (!newNfts?.data) {\r\n        return updatedTokens\r\n      }\r\n\r\n      const moreTokensWithRequestedBunnyId = nftsMarket.map((marketData) => {\r\n        const apiMetadata = getMetadataWithFallback(newNfts.data, marketData.otherId)\r\n        const attributes = getPancakeBunniesAttributesField(marketData.otherId)\r\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\r\n      })\r\n      return [...updatedTokens, ...moreTokensWithRequestedBunnyId]\r\n    } catch (error) {\r\n      console.error(`Failed to update PancakeBunnies NFTs`, error)\r\n      return []\r\n    }\r\n  },\r\n)\r\n\r\nexport const fetchUserNfts = createAsyncThunk<\r\n  NftToken[],\r\n  { account: string; profileNftWithCollectionAddress?: TokenIdWithCollectionAddress; collections: ApiCollections }\r\n>('nft/fetchUserNfts', async ({ account, profileNftWithCollectionAddress, collections }) => {\r\n  const completeNftData = await getCompleteAccountNftData(account, collections, profileNftWithCollectionAddress)\r\n  return completeNftData\r\n})\r\n\r\nexport const updateUserNft = createAsyncThunk<\r\n  NftToken,\r\n  { tokenId: string; collectionAddress: string; location?: NftLocation }\r\n>('nft/updateUserNft', async ({ tokenId, collectionAddress, location = NftLocation.WALLET }) => {\r\n  const marketDataForNft = await getNftsMarketData({\r\n    tokenId_in: [tokenId],\r\n    collection: collectionAddress.toLowerCase(),\r\n  })\r\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\r\n  const completeNftData = { ...metadataForNft[0], location, marketData: marketDataForNft[0] }\r\n\r\n  return completeNftData\r\n})\r\n\r\nexport const removeUserNft = createAsyncThunk<string, { tokenId: string }>(\r\n  'nft/removeUserNft',\r\n  async ({ tokenId }) => tokenId,\r\n)\r\n\r\nexport const addUserNft = createAsyncThunk<\r\n  NftToken,\r\n  { tokenId: string; collectionAddress: string; nftLocation?: NftLocation }\r\n>('nft/addUserNft', async ({ tokenId, collectionAddress, nftLocation = NftLocation.WALLET }) => {\r\n  const marketDataForNft = await getNftsMarketData({\r\n    tokenId_in: [tokenId],\r\n    collection: collectionAddress.toLowerCase(),\r\n  })\r\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\r\n\r\n  return {\r\n    ...metadataForNft[0],\r\n    location: nftLocation,\r\n    marketData: marketDataForNft[0],\r\n  }\r\n})\r\n\r\nexport const fetchUserActivity = createAsyncThunk('nft/fetchUserActivity', async (address: string) => {\r\n  const userActivity = await getUserActivity(address.toLocaleLowerCase())\r\n  return userActivity\r\n})\r\n\r\nexport const NftMarket = createSlice({\r\n  name: 'NftMarket',\r\n  initialState,\r\n  reducers: {\r\n    removeAllFilters: (state, action: PayloadAction<string>) => {\r\n      state.data.filters[action.payload] = { ...initialNftFilterState }\r\n      state.data.nfts[action.payload] = []\r\n    },\r\n    setOrdering: (state, action: PayloadAction<{ collection: string; field: string; direction: 'asc' | 'desc' }>) => {\r\n      if (state.data.filters[action.payload.collection]) {\r\n        state.data.filters[action.payload.collection].ordering = {\r\n          field: action.payload.field,\r\n          direction: action.payload.direction,\r\n        }\r\n      } else {\r\n        state.data.filters[action.payload.collection] = {\r\n          ...initialNftFilterState,\r\n          ordering: {\r\n            field: action.payload.field,\r\n            direction: action.payload.direction,\r\n          },\r\n        }\r\n      }\r\n    },\r\n    setShowOnlyOnSale: (state, action: PayloadAction<{ collection: string; showOnlyOnSale: boolean }>) => {\r\n      if (state.data.filters[action.payload.collection]) {\r\n        state.data.filters[action.payload.collection].showOnlyOnSale = action.payload.showOnlyOnSale\r\n      } else {\r\n        state.data.filters[action.payload.collection] = {\r\n          ...initialNftFilterState,\r\n          showOnlyOnSale: action.payload.showOnlyOnSale,\r\n        }\r\n      }\r\n    },\r\n    resetUserNftState: (state) => {\r\n      state.data.user = { ...initialState.data.user }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(filterNftsFromCollection.pending, (state, action) => {\r\n      const { collectionAddress } = action.meta.arg\r\n      if (state.data.filters[collectionAddress]) {\r\n        state.data.filters[collectionAddress].loadingState = NftFilterLoadingState.LOADING\r\n      } else {\r\n        state.data.filters[collectionAddress] = {\r\n          ...initialNftFilterState,\r\n          loadingState: NftFilterLoadingState.LOADING,\r\n        }\r\n      }\r\n    })\r\n    builder.addCase(filterNftsFromCollection.fulfilled, (state, action) => {\r\n      const { collectionAddress, nftFilters } = action.meta.arg\r\n\r\n      state.data.filters[collectionAddress] = {\r\n        ...state.data.filters[collectionAddress],\r\n        loadingState: NftFilterLoadingState.IDLE,\r\n        activeFilters: nftFilters,\r\n      }\r\n      state.data.nfts[collectionAddress] = action.payload\r\n    })\r\n\r\n    builder.addCase(fetchCollection.fulfilled, (state, action) => {\r\n      state.data.collections = { ...state.data.collections, ...action.payload }\r\n    })\r\n    builder.addCase(fetchCollections.fulfilled, (state, action) => {\r\n      state.data.collections = action.payload\r\n      state.initializationState = NFTMarketInitializationState.INITIALIZED\r\n    })\r\n    builder.addCase(fetchNftsFromCollections.pending, (state, action) => {\r\n      const { collectionAddress } = action.meta.arg\r\n      if (state.data.filters[collectionAddress]) {\r\n        state.data.filters[collectionAddress].loadingState = NftFilterLoadingState.LOADING\r\n      } else {\r\n        state.data.filters[collectionAddress] = {\r\n          ...initialNftFilterState,\r\n          loadingState: NftFilterLoadingState.LOADING,\r\n        }\r\n      }\r\n    })\r\n    builder.addCase(fetchNftsFromCollections.fulfilled, (state, action) => {\r\n      const { collectionAddress } = action.meta.arg\r\n      const existingNfts: NftToken[] = state.data.nfts[collectionAddress] ?? []\r\n      const existingNftsWithoutNewOnes = existingNfts.filter(\r\n        (nftToken) => !action.payload.find((newToken) => newToken.tokenId === nftToken.tokenId),\r\n      )\r\n\r\n      state.data.filters[collectionAddress] = {\r\n        ...state.data.filters[collectionAddress],\r\n        loadingState: NftFilterLoadingState.IDLE,\r\n        activeFilters: {},\r\n      }\r\n      state.data.nfts[collectionAddress] = [...existingNftsWithoutNewOnes, ...action.payload]\r\n    })\r\n    builder.addCase(fetchNewPBAndUpdateExisting.pending, (state) => {\r\n      state.data.loadingState.isUpdatingPancakeBunnies = true\r\n    })\r\n    builder.addCase(fetchNewPBAndUpdateExisting.fulfilled, (state, action) => {\r\n      if (action.payload.length > 0) {\r\n        state.data.nfts[pancakeBunniesAddress] = action.payload\r\n      }\r\n      state.data.loadingState.isUpdatingPancakeBunnies = false\r\n      state.data.loadingState.latestPancakeBunniesUpdateAt = Date.now()\r\n    })\r\n    builder.addCase(fetchNewPBAndUpdateExisting.rejected, (state) => {\r\n      state.data.loadingState.isUpdatingPancakeBunnies = false\r\n      state.data.loadingState.latestPancakeBunniesUpdateAt = Date.now()\r\n    })\r\n    builder.addCase(fetchUserNfts.rejected, (state) => {\r\n      state.data.user.userNftsInitializationState = UserNftInitializationState.ERROR\r\n    })\r\n    builder.addCase(fetchUserNfts.pending, (state) => {\r\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZING\r\n    })\r\n    builder.addCase(fetchUserNfts.fulfilled, (state, action) => {\r\n      state.data.user.nfts = action.payload\r\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZED\r\n    })\r\n    builder.addCase(updateUserNft.fulfilled, (state, action) => {\r\n      const userNftsState: NftToken[] = state.data.user.nfts\r\n      const nftToUpdate = userNftsState.find((nft) => nft.tokenId === action.payload.tokenId)\r\n      const indexInState = userNftsState.indexOf(nftToUpdate)\r\n      state.data.user.nfts[indexInState] = action.payload\r\n    })\r\n    builder.addCase(removeUserNft.fulfilled, (state, action) => {\r\n      const copyOfState: NftToken[] = [...state.data.user.nfts]\r\n      const nftToRemove = copyOfState.find((nft) => nft.tokenId === action.payload)\r\n      const indexInState = copyOfState.indexOf(nftToRemove)\r\n      copyOfState.splice(indexInState, 1)\r\n      state.data.user.nfts = copyOfState\r\n    })\r\n    builder.addCase(addUserNft.fulfilled, (state, action) => {\r\n      state.data.user.nfts = [...state.data.user.nfts, action.payload]\r\n    })\r\n    builder.addCase(fetchUserActivity.fulfilled, (state, action) => {\r\n      state.data.user.activity = { ...action.payload, initializationState: UserNftInitializationState.INITIALIZED }\r\n    })\r\n    builder.addCase(fetchUserActivity.rejected, (state) => {\r\n      state.data.user.activity.initializationState = UserNftInitializationState.ERROR\r\n    })\r\n    builder.addCase(fetchUserActivity.pending, (state) => {\r\n      state.data.user.activity.initializationState = UserNftInitializationState.INITIALIZING\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { removeAllFilters, setOrdering, setShowOnlyOnSale, resetUserNftState } = NftMarket.actions\r\n\r\nexport default NftMarket.reducer\r\n","export const MINIMUM_SEARCH_CHARACTERS = 2\r\n\r\nexport const WEEKS_IN_YEAR = 52.1429\r\n\r\nexport const TOTAL_FEE = 0.0025\r\nexport const LP_HOLDERS_FEE = 0.0017\r\nexport const TREASURY_FEE = 0.0003\r\nexport const BUYBACK_FEE = 0.0005\r\n\r\nexport const PCS_V2_START = 1619136000 // April 23, 2021, 12:00:00 AM\r\nexport const ONE_DAY_UNIX = 86400 // 24h * 60m * 60s\r\nexport const ONE_HOUR_SECONDS = 3600\r\n\r\nexport const ITEMS_PER_INFO_TABLE_PAGE = 10\r\n\r\n// These tokens are either incorrectly priced or have some other issues that spoil the query data\r\n// None of them present any interest as they have almost 0 daily trade volume\r\nexport const TOKEN_BLACKLIST = [\r\n  // These ones are copied from v1 info\r\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\r\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\r\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\r\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\r\n  '0xe40fc6ff5f2895b44268fd2e1a421e07f567e007',\r\n  '0xfd158609228b43aa380140b46fff3cdf9ad315de',\r\n  '0xc00af6212fcf0e6fd3143e692ccd4191dc308bea',\r\n  '0x205969b3ad459f7eba0dee07231a6357183d3fb6',\r\n  '0x0bd67d358636fd7b0597724aa4f20beedbf3073a',\r\n  '0xedf5d2a561e8a3cb5a846fbce24d2ccd88f50075',\r\n  '0x702b0789a3d4dade1688a0c8b7d944e5ba80fc30',\r\n  '0x041929a760d7049edaef0db246fa76ec975e90cc',\r\n  '0xba098df8c6409669f5e6ec971ac02cd5982ac108',\r\n  '0x1bbed115afe9e8d6e9255f18ef10d43ce6608d94',\r\n  '0xe99512305bf42745fae78003428dcaf662afb35d',\r\n  '0xbE609EAcbFca10F6E5504D39E3B113F808389056',\r\n  '0x847daf9dfdc22d5c61c4a857ec8733ef5950e82e',\r\n  '0xdbf8913dfe14536c0dae5dd06805afb2731f7e7b',\r\n  // These ones are newly found\r\n  '0xF1D50dB2C40b63D2c598e2A808d1871a40b1E653',\r\n  '0x4269e4090ff9dfc99d8846eb0d42e67f01c3ac8b',\r\n]\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function CircleLoader({\r\n  size = '16px',\r\n  stroke,\r\n  ...rest\r\n}: {\r\n  size?: string\r\n  stroke?: string\r\n  [k: string]: any\r\n}) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Tag,\r\n  VerifiedIcon,\r\n  CommunityIcon,\r\n  RefreshIcon,\r\n  AutoRenewIcon,\r\n  TagProps,\r\n  TimerIcon,\r\n  BlockIcon,\r\n  VoteIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"primary\" startIcon={<RefreshIcon width=\"18px\" color=\"primary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst VoteNowTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Vote Now')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst SoonTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Soon')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ClosedTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\r\n      {t('Closed')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from '../types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","import sample from 'lodash/sample'\r\n\r\nif (\r\n  process.env.NODE_ENV !== 'production' &&\r\n  (!process.env.REACT_APP_NODE_1 || !process.env.REACT_APP_NODE_2 || !process.env.REACT_APP_NODE_3)\r\n) {\r\n  throw Error('One base RPC URL is undefined')\r\n}\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  // Use custom node if available (both for development and production)\r\n  // However on the testnet it wouldn't work, so if on testnet - comment out the REACT_APP_NODE_PRODUCTION from env file\r\n  if (process.env.REACT_APP_NODE_PRODUCTION) {\r\n    return process.env.REACT_APP_NODE_PRODUCTION\r\n  }\r\n  return sample(nodes)\r\n}\r\n\r\nexport default getNodeUrl\r\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\r\n\r\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\r\n  const match = ensAddress.match(ENS_NAME_REGEX)\r\n  if (!match) return undefined\r\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\r\n}\r\n\r\nexport default parseENSAddress\r\n","import React, { useState } from 'react'\r\nimport { escapeRegExp } from 'utils'\r\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\r\nimport QuestionHelper from '../../QuestionHelper'\r\n\r\nenum SlippageError {\r\n  InvalidInput = 'InvalidInput',\r\n  RiskyLow = 'RiskyLow',\r\n  RiskyHigh = 'RiskyHigh',\r\n}\r\n\r\nenum DeadlineError {\r\n  InvalidInput = 'InvalidInput',\r\n}\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nconst SlippageTabs = () => {\r\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\r\n  const [ttl, setTtl] = useUserTransactionTTL()\r\n  const [slippageInput, setSlippageInput] = useState('')\r\n  const [deadlineInput, setDeadlineInput] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const slippageInputIsValid =\r\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\r\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\r\n\r\n  let slippageError: SlippageError | undefined\r\n  if (slippageInput !== '' && !slippageInputIsValid) {\r\n    slippageError = SlippageError.InvalidInput\r\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\r\n    slippageError = SlippageError.RiskyLow\r\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\r\n    slippageError = SlippageError.RiskyHigh\r\n  } else {\r\n    slippageError = undefined\r\n  }\r\n\r\n  let deadlineError: DeadlineError | undefined\r\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\r\n    deadlineError = DeadlineError.InvalidInput\r\n  } else {\r\n    deadlineError = undefined\r\n  }\r\n\r\n  const parseCustomSlippage = (value: string) => {\r\n    if (value === '' || inputRegex.test(escapeRegExp(value))) {\r\n      setSlippageInput(value)\r\n\r\n      try {\r\n        const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\r\n        if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\r\n          setUserSlippageTolerance(valueAsIntFromRoundedFloat)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n  }\r\n\r\n  const parseCustomDeadline = (value: string) => {\r\n    setDeadlineInput(value)\r\n\r\n    try {\r\n      const valueAsInt: number = Number.parseInt(value) * 60\r\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\r\n        setTtl(valueAsInt)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\" mb=\"24px\">\r\n        <Flex mb=\"12px\">\r\n          <Text>{t('Slippage Tolerance')}</Text>\r\n          <QuestionHelper\r\n            text={t(\r\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\r\n            )}\r\n            placement=\"top-start\"\r\n            ml=\"4px\"\r\n          />\r\n        </Flex>\r\n        <Flex flexWrap=\"wrap\">\r\n          <Button\r\n            mt=\"4px\"\r\n            mr=\"4px\"\r\n            scale=\"sm\"\r\n            onClick={() => {\r\n              setSlippageInput('')\r\n              setUserSlippageTolerance(10)\r\n            }}\r\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\r\n          >\r\n            0.1%\r\n          </Button>\r\n          <Button\r\n            mt=\"4px\"\r\n            mr=\"4px\"\r\n            scale=\"sm\"\r\n            onClick={() => {\r\n              setSlippageInput('')\r\n              setUserSlippageTolerance(50)\r\n            }}\r\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\r\n          >\r\n            0.5%\r\n          </Button>\r\n          <Button\r\n            mr=\"4px\"\r\n            mt=\"4px\"\r\n            scale=\"sm\"\r\n            onClick={() => {\r\n              setSlippageInput('')\r\n              setUserSlippageTolerance(100)\r\n            }}\r\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\r\n          >\r\n            1.0%\r\n          </Button>\r\n          <Flex alignItems=\"center\">\r\n            <Box width=\"76px\" mt=\"4px\">\r\n              <Input\r\n                scale=\"sm\"\r\n                inputMode=\"decimal\"\r\n                pattern=\"^[0-9]*[.,]?[0-9]{0,2}$\"\r\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\r\n                value={slippageInput}\r\n                onBlur={() => {\r\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\r\n                }}\r\n                onChange={(event) => {\r\n                  if (event.currentTarget.validity.valid) {\r\n                    parseCustomSlippage(event.target.value.replace(/,/g, '.'))\r\n                  }\r\n                }}\r\n                isWarning={!slippageInputIsValid}\r\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\r\n              />\r\n            </Box>\r\n            <Text color=\"primary\" bold ml=\"2px\">\r\n              %\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n        {!!slippageError && (\r\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\r\n            {slippageError === SlippageError.InvalidInput\r\n              ? t('Enter a valid slippage percentage')\r\n              : slippageError === SlippageError.RiskyLow\r\n              ? t('Your transaction may fail')\r\n              : t('Your transaction may be frontrun')}\r\n          </Text>\r\n        )}\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Flex alignItems=\"center\">\r\n          <Text>{t('Tx deadline (mins)')}</Text>\r\n          <QuestionHelper\r\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\r\n            placement=\"top-start\"\r\n            ml=\"4px\"\r\n          />\r\n        </Flex>\r\n        <Flex>\r\n          <Box width=\"52px\" mt=\"4px\">\r\n            <Input\r\n              scale=\"sm\"\r\n              inputMode=\"numeric\"\r\n              pattern=\"^[0-9]+$\"\r\n              color={deadlineError ? 'red' : undefined}\r\n              onBlur={() => {\r\n                parseCustomDeadline((ttl / 60).toString())\r\n              }}\r\n              placeholder={(ttl / 60).toString()}\r\n              value={deadlineInput}\r\n              onChange={(event) => {\r\n                if (event.currentTarget.validity.valid) {\r\n                  parseCustomDeadline(event.target.value)\r\n                }\r\n              }}\r\n            />\r\n          </Box>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SlippageTabs\r\n","import React, { useState } from 'react'\r\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ExpertModalProps extends InjectedModalProps {\r\n  setShowConfirmExpertModal: (boolean) => void\r\n  setShowExpertModeAcknowledgement: (boolean) => void\r\n}\r\n\r\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\r\n  const [, toggleExpertMode] = useExpertModeManager()\r\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('Expert Mode')}\r\n      onBack={() => setShowConfirmExpertModal(false)}\r\n      onDismiss={() => setShowConfirmExpertModal(false)}\r\n      headerBackground=\"gradients.cardHeader\"\r\n      style={{ maxWidth: '360px' }}\r\n    >\r\n      <Message variant=\"warning\" mb=\"24px\">\r\n        <Text>\r\n          {t(\r\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\r\n          )}\r\n        </Text>\r\n      </Message>\r\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\r\n      <Flex alignItems=\"center\" mb=\"24px\">\r\n        <Checkbox\r\n          name=\"confirmed\"\r\n          type=\"checkbox\"\r\n          checked={isRememberChecked}\r\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\r\n          scale=\"sm\"\r\n        />\r\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\r\n          {t('Don’t show this again')}\r\n        </Text>\r\n      </Flex>\r\n      <Button\r\n        mb=\"8px\"\r\n        id=\"confirm-expert-mode\"\r\n        onClick={() => {\r\n          // eslint-disable-next-line no-alert\r\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\r\n            toggleExpertMode()\r\n            setShowConfirmExpertModal(false)\r\n            if (isRememberChecked) {\r\n              setShowExpertModeAcknowledgement(false)\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {t('Turn On Expert Mode')}\r\n      </Button>\r\n      <Button\r\n        variant=\"secondary\"\r\n        onClick={() => {\r\n          setShowConfirmExpertModal(false)\r\n        }}\r\n      >\r\n        {t('Cancel')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ExpertModal\r\n","import React from 'react'\r\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\r\nimport { useGasPriceManager } from 'state/user/hooks'\r\n\r\nconst GasSettings = () => {\r\n  const { t } = useTranslation()\r\n  const [gasPrice, setGasPrice] = useGasPriceManager()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex mb=\"12px\" alignItems=\"center\">\r\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\r\n        <QuestionHelper\r\n          text={t(\r\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\r\n          )}\r\n          placement=\"top-start\"\r\n          ml=\"4px\"\r\n        />\r\n      </Flex>\r\n      <Flex flexWrap=\"wrap\">\r\n        <Button\r\n          mt=\"4px\"\r\n          mr=\"4px\"\r\n          scale=\"sm\"\r\n          onClick={() => {\r\n            setGasPrice(GAS_PRICE_GWEI.default)\r\n          }}\r\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\r\n        >\r\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\r\n        </Button>\r\n        <Button\r\n          mt=\"4px\"\r\n          mr=\"4px\"\r\n          scale=\"sm\"\r\n          onClick={() => {\r\n            setGasPrice(GAS_PRICE_GWEI.fast)\r\n          }}\r\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\r\n        >\r\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\r\n        </Button>\r\n        <Button\r\n          mr=\"4px\"\r\n          mt=\"4px\"\r\n          scale=\"sm\"\r\n          onClick={() => {\r\n            setGasPrice(GAS_PRICE_GWEI.instant)\r\n          }}\r\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\r\n        >\r\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\r\n        </Button>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default GasSettings\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps, ThemeSwitcher } from '@pancakeswap/uikit'\r\nimport {\r\n  useAudioModeManager,\r\n  useExpertModeManager,\r\n  useUserExpertModeAcknowledgementShow,\r\n  useUserSingleHopOnly,\r\n} from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useSwapActionHandlers } from 'state/swap/hooks'\r\nimport useTheme from 'hooks/useTheme'\r\nimport QuestionHelper from '../../QuestionHelper'\r\nimport TransactionSettings from './TransactionSettings'\r\nimport ExpertModal from './ExpertModal'\r\nimport GasSettings from './GasSettings'\r\n\r\nconst ScrollableContainer = styled(Flex)`\r\n  flex-direction: column;\r\n  max-height: 400px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-height: none;\r\n  }\r\n`\r\n\r\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\r\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\r\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\r\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\r\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\r\n  const { onChangeRecipient } = useSwapActionHandlers()\r\n\r\n  const { t } = useTranslation()\r\n  const { theme, isDark, toggleTheme } = useTheme()\r\n\r\n  if (showConfirmExpertModal) {\r\n    return (\r\n      <ExpertModal\r\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\r\n        onDismiss={onDismiss}\r\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleExpertModeToggle = () => {\r\n    if (expertMode) {\r\n      onChangeRecipient(null)\r\n      toggleExpertMode()\r\n    } else if (!showExpertModeAcknowledgement) {\r\n      onChangeRecipient(null)\r\n      toggleExpertMode()\r\n    } else {\r\n      setShowConfirmExpertModal(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={t('Settings')}\r\n      headerBackground=\"gradients.cardHeader\"\r\n      onDismiss={onDismiss}\r\n      style={{ maxWidth: '420px' }}\r\n    >\r\n      <ScrollableContainer>\r\n        <Flex pb=\"24px\" flexDirection=\"column\">\r\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\r\n            {t('Global')}\r\n          </Text>\r\n{/* Delete mode setting */}\r\n          {/* <Flex justifyContent=\"space-between\">\r\n            <Text mb=\"24px\">{t('Dark mode')}</Text>\r\n            <ThemeSwitcher isDark={isDark} toggleTheme={toggleTheme} />\r\n          </Flex> */}\r\n          <GasSettings />\r\n        </Flex>\r\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\r\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\r\n            {t('Swaps & Liquidity')}\r\n          </Text>\r\n          <TransactionSettings />\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n          <Flex alignItems=\"center\">\r\n            <Text>{t('Expert Mode')}</Text>\r\n            <QuestionHelper\r\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\r\n              placement=\"top-start\"\r\n              ml=\"4px\"\r\n            />\r\n          </Flex>\r\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\r\n        </Flex>\r\n{/* Disable 2 settings */}\r\n        {/* <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n          <Flex alignItems=\"center\">\r\n            <Text>{t('Disable Multihops')}</Text>\r\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\r\n          </Flex>\r\n          <Toggle\r\n            id=\"toggle-disable-multihop-button\"\r\n            checked={singleHopOnly}\r\n            scale=\"md\"\r\n            onChange={() => {\r\n              setSingleHopOnly(!singleHopOnly)\r\n            }}\r\n          />\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Flex alignItems=\"center\">\r\n            <Text>{t('Flippy sounds')}</Text>\r\n            <QuestionHelper\r\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\r\n              placement=\"top-start\"\r\n              ml=\"4px\"\r\n            />\r\n          </Flex>\r\n          <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\r\n        </Flex> */}\r\n      </ScrollableContainer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n","import React from 'react'\r\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\r\nimport SettingsModal from './SettingsModal'\r\n\r\ntype Props = {\r\n  color?: string\r\n  mr?: string\r\n}\r\n\r\nconst GlobalSettings = ({ color, mr = '8px' }: Props) => {\r\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\r\n\r\n  return (\r\n    <Flex>\r\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr={mr} id=\"open-settings-dialog-button\">\r\n        <CogIcon height={24} width={24} color={color || 'textSubtle'} />\r\n      </IconButton>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default GlobalSettings\r\n","/* eslint-disable no-continue */\r\n/* eslint-disable no-await-in-loop */\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\r\nimport Ajv from 'ajv'\r\nimport contenthashToUri from './contenthashToUri'\r\nimport { parseENSAddress } from './ENS/parseENSAddress'\r\nimport uriToHttp from './uriToHttp'\r\n\r\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\r\n\r\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n * @param resolveENSContentHash resolves an ens name to a contenthash\r\n */\r\nexport default async function getTokenList(\r\n  listUrl: string,\r\n  resolveENSContentHash: (ensName: string) => Promise<string>,\r\n): Promise<TokenList> {\r\n  const parsedENS = parseENSAddress(listUrl)\r\n  let urls: string[]\r\n  if (parsedENS) {\r\n    let contentHashUri\r\n    try {\r\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\r\n    } catch (error) {\r\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\r\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\r\n    }\r\n    let translatedUri\r\n    try {\r\n      translatedUri = contenthashToUri(contentHashUri)\r\n    } catch (error) {\r\n      console.error('Failed to translate contenthash to URI', contentHashUri)\r\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\r\n    }\r\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\r\n  } else {\r\n    urls = uriToHttp(listUrl)\r\n  }\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i]\r\n    const isLast = i === urls.length - 1\r\n    let response\r\n    try {\r\n      response = await fetch(url)\r\n    } catch (error) {\r\n      console.error('Failed to fetch list', listUrl, error)\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    const json = await response.json()\r\n    if (!tokenListValidator(json)) {\r\n      const validationErrors: string =\r\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\r\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\r\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\r\n        }, '') ?? 'unknown error'\r\n      throw new Error(`Token list failed validation: ${validationErrors}`)\r\n    }\r\n    return json as TokenList\r\n  }\r\n  throw new Error('Unrecognized list URL protocol.')\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { Provider } from '@ethersproject/abstract-provider'\r\nimport { namehash } from 'ethers/lib/utils'\r\n\r\nconst REGISTRAR_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: 'node',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'resolver',\r\n    outputs: [\r\n      {\r\n        name: 'resolverAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n]\r\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n\r\nconst RESOLVER_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'node',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'contenthash',\r\n    outputs: [\r\n      {\r\n        internalType: 'bytes',\r\n        name: '',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n]\r\n\r\n// cache the resolver contracts since most of them are the public resolver\r\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\r\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\r\n}\r\n\r\n/**\r\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\r\n * @param ensName to resolve\r\n * @param provider provider to use to fetch the data\r\n */\r\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\r\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\r\n  const hash = namehash(ensName)\r\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\r\n  return resolverContract(resolverAddress, provider).contenthash(hash)\r\n}\r\n","import { nanoid } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppDispatch } from '../state'\r\nimport { fetchTokenList } from '../state/lists/actions'\r\nimport getTokenList from '../utils/getTokenList'\r\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\r\nimport useWeb3Provider from './useActiveWeb3React'\r\n\r\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\r\n  const { library } = useWeb3Provider()\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const ensResolver = useCallback(\r\n    (ensName: string) => {\r\n      if (chainId !== ChainId.MAINNET) {\r\n        throw new Error('Could not construct mainnet ENS resolver')\r\n      }\r\n      return resolveENSContentHash(ensName, library)\r\n    },\r\n    [chainId, library],\r\n  )\r\n\r\n  // note: prevent dispatch if using for list search or unsupported list\r\n  return useCallback(\r\n    async (listUrl: string, sendDispatch = true) => {\r\n      const requestId = nanoid()\r\n      if (sendDispatch) {\r\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\r\n      }\r\n      return getTokenList(listUrl, ensResolver)\r\n        .then((tokenList) => {\r\n          if (sendDispatch) {\r\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\r\n          }\r\n          return tokenList\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Failed to get list at url ${listUrl}`, error)\r\n          if (sendDispatch) {\r\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\r\n          }\r\n          throw error\r\n        })\r\n    },\r\n    [dispatch, ensResolver],\r\n  )\r\n}\r\n\r\nexport default useFetchListCallback\r\n","import React, { createContext, useCallback, useState } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from 'components/Toast'\r\nimport { ToastContextApi } from './types'\r\n\r\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\r\n\r\nexport const ToastsProvider: React.FC = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\r\n\r\n  const toast = useCallback(\r\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\r\n      setToasts((prevToasts) => {\r\n        const id = kebabCase(title)\r\n\r\n        // Remove any existing toasts with the same id\r\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\r\n\r\n        return [\r\n          {\r\n            id,\r\n            title,\r\n            description,\r\n            type,\r\n          },\r\n          ...currentToasts,\r\n        ]\r\n      })\r\n    },\r\n    [setToasts],\r\n  )\r\n\r\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.DANGER })\r\n  }\r\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.INFO })\r\n  }\r\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.SUCCESS })\r\n  }\r\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.WARNING })\r\n  }\r\n  const clear = () => setToasts([])\r\n  const remove = (id: string) => {\r\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\r\n  }\r\n\r\n  return (\r\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\r\n      {children}\r\n    </ToastsContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ToastContainer } from 'components/Toast'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst ToastListener = () => {\r\n  const { toasts, remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { escapeRegExp } from '../../utils'\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  text-align: right;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number\r\n  onUserInput: (input: string) => void\r\n  error?: boolean\r\n  fontSize?: string\r\n  align?: 'right' | 'left'\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput)\r\n    }\r\n  }\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={(event) => {\r\n        // replace commas with periods, because we exclusively uses period as the decimal separator\r\n        enforcer(event.target.value.replace(/,/g, '.'))\r\n      }}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title={t('Token Amount')}\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  )\r\n})\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { Currency, Pair } from '@pancakeswap/sdk'\r\nimport { Button, ChevronDownIcon, Text, useModal, Flex, Box } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\r\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\r\n\r\nimport { RowBetween } from '../Layout/Row'\r\nimport { Input as NumericalInput } from './NumericalInput'\r\n\r\nconst InputRow = styled.div<{ selected: boolean }>`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\r\n`\r\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\r\n  padding: 0 0.5rem;\r\n`\r\nconst LabelRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem 0 1rem;\r\n`\r\nconst InputPanel = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: '20px';\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  z-index: 1;\r\n`\r\nconst Container = styled.div`\r\n  border-radius: 16px;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n`\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: string\r\n  onCurrencySelect: (currency: Currency) => void\r\n  currency?: Currency | null\r\n  disableCurrencySelect?: boolean\r\n  hideBalance?: boolean\r\n  pair?: Pair | null\r\n  otherCurrency?: Currency | null\r\n  id: string\r\n  showCommonBases?: boolean\r\n}\r\nexport default function CurrencyInputPanel({\r\n  value,\r\n  onUserInput,\r\n  onMax,\r\n  showMaxButton,\r\n  label,\r\n  onCurrencySelect,\r\n  currency,\r\n  disableCurrencySelect = false,\r\n  hideBalance = false,\r\n  pair = null, // used for double token logo\r\n  otherCurrency,\r\n  id,\r\n  showCommonBases,\r\n}: CurrencyInputPanelProps) {\r\n  const { account } = useActiveWeb3React()\r\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n  const { t } = useTranslation()\r\n\r\n  const [onPresentCurrencyModal] = useModal(\r\n    <CurrencySearchModal\r\n      onCurrencySelect={onCurrencySelect}\r\n      selectedCurrency={currency}\r\n      otherSelectedCurrency={otherCurrency}\r\n      showCommonBases={showCommonBases}\r\n    />,\r\n  )\r\n  return (\r\n    <Box>\r\n      <Flex mb=\"6px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <CurrencySelectButton\r\n          selected={!!currency}\r\n          onClick={() => {\r\n            if (!disableCurrencySelect) {\r\n              onPresentCurrencyModal()\r\n            }\r\n          }}\r\n        >\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            {pair ? (\r\n              <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\r\n            ) : currency ? (\r\n              <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\r\n            ) : null}\r\n            {pair ? (\r\n              <Text id=\"pair\" bold>\r\n                {pair?.token0.symbol}:{pair?.token1.symbol}\r\n              </Text>\r\n            ) : (\r\n              <Text id=\"pair\" bold>\r\n                {(currency && currency.symbol && currency.symbol.length > 20\r\n                  ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                      currency.symbol.length - 5,\r\n                      currency.symbol.length,\r\n                    )}`\r\n                  : currency?.symbol) || t('Select a currency')}\r\n              </Text>\r\n            )}\r\n            {!disableCurrencySelect && <ChevronDownIcon />}\r\n          </Flex>\r\n        </CurrencySelectButton>\r\n        {account && (\r\n          <Text onClick={onMax} color=\"textSubtle\" fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\r\n            {!hideBalance && !!currency\r\n              ? t('Balance: %balance%', { balance: selectedCurrencyBalance?.toSignificant(6) ?? t('Loading') })\r\n              : ' -'}\r\n          </Text>\r\n        )}\r\n      </Flex>\r\n      <InputPanel id={id}>\r\n        <Container>\r\n          <LabelRow>\r\n            <RowBetween>\r\n              <NumericalInput\r\n                className=\"token-amount-input\"\r\n                value={value}\r\n                onUserInput={(val) => {\r\n                  onUserInput(val)\r\n                }}\r\n              />\r\n            </RowBetween>\r\n          </LabelRow>\r\n          <InputRow selected={disableCurrencySelect}>\r\n            {account && currency && showMaxButton && label !== 'To' && (\r\n              <Button onClick={onMax} scale=\"xs\" variant=\"secondary\">\r\n                MAX\r\n              </Button>\r\n            )}\r\n          </InputRow>\r\n        </Container>\r\n      </InputPanel>\r\n    </Box>\r\n  )\r\n}\r\n","import Cookies from 'js-cookie'\r\nimport { Profile } from 'state/types'\r\nimport { GetUserProfileResponse } from 'utils/types'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { getTeam } from 'state/teams/helpers'\r\nimport { NftToken } from 'state/nftMarket/types'\r\nimport { getNftApi } from 'state/nftMarket/helpers'\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: collectionAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: userId.toNumber(),\r\n    points: numberPoints.toNumber(),\r\n    teamId: teamId.toNumber(),\r\n    tokenId: tokenId.toNumber(),\r\n    collectionAddress,\r\n    isActive,\r\n  }\r\n}\r\n\r\nconst profileContract = getProfileContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport const getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\n/**\r\n * Intended to be used for getting a profile avatar\r\n */\r\nexport const getProfileAvatar = async (address: string) => {\r\n  try {\r\n    const hasRegistered = await profileContract.hasRegistered(address)\r\n\r\n    if (!hasRegistered) {\r\n      return null\r\n    }\r\n\r\n    const profileResponse = await profileContract.getUserProfile(address)\r\n    const { tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\r\n\r\n    let nft = null\r\n    if (isActive) {\r\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\r\n\r\n      nft = {\r\n        tokenId: apiRes.tokenId,\r\n        name: apiRes.name,\r\n        collectionName: apiRes.collection.name,\r\n        collectionAddress,\r\n        description: apiRes.description,\r\n        attributes: apiRes.attributes,\r\n        createdAt: apiRes.createdAt,\r\n        updatedAt: apiRes.updatedAt,\r\n        image: {\r\n          original: apiRes.image?.original,\r\n          thumbnail: apiRes.image?.thumbnail,\r\n        },\r\n      }\r\n    }\r\n\r\n    return { nft, hasRegistered }\r\n  } catch {\r\n    return { nft: null, hasRegistered: false }\r\n  }\r\n}\r\n\r\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = await profileContract.hasRegistered(address)\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.getUserProfile(address)\r\n    const { userId, points, teamId, tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n    let nftToken: NftToken\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    if (isActive) {\r\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\r\n\r\n      nftToken = {\r\n        tokenId: apiRes.tokenId,\r\n        name: apiRes.name,\r\n        collectionName: apiRes.collection.name,\r\n        collectionAddress,\r\n        description: apiRes.description,\r\n        attributes: apiRes.attributes,\r\n        createdAt: apiRes.createdAt,\r\n        updatedAt: apiRes.updatedAt,\r\n        image: {\r\n          original: apiRes.image?.original,\r\n          thumbnail: apiRes.image?.thumbnail,\r\n        },\r\n      }\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `${nftToken.image.thumbnail}`,\r\n        },\r\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      collectionAddress,\r\n      isActive,\r\n      nft: nftToken,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (e) {\r\n    console.error(e)\r\n    return null\r\n  }\r\n}\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n  {\r\n    id: '511110000',\r\n    type: 'ifo',\r\n    title: 'Kalmar',\r\n    badge: 'ifo-kalm.svg',\r\n  },\r\n  {\r\n    id: '511100000',\r\n    type: 'ifo',\r\n    title: 'Hotcross',\r\n    badge: 'ifo-hotcross.svg',\r\n  },\r\n  {\r\n    id: '511090000',\r\n    type: 'ifo',\r\n    title: 'Horizon Protocol',\r\n    badge: 'ifo-hzn.svg',\r\n  },\r\n  {\r\n    id: '511080000',\r\n    type: 'ifo',\r\n    title: 'Belt',\r\n    badge: 'ifo-belt.svg',\r\n  },\r\n  {\r\n    id: '511070000',\r\n    type: 'ifo',\r\n    title: 'Yieldwatch',\r\n    badge: 'ifo-watch.svg',\r\n  },\r\n  {\r\n    id: '511060000',\r\n    type: 'ifo',\r\n    title: 'Berry',\r\n    badge: 'ifo-bry.svg',\r\n  },\r\n  {\r\n    id: '511050000',\r\n    type: 'ifo',\r\n    title: 'Soteria',\r\n    badge: 'ifo-wsote.svg',\r\n  },\r\n  {\r\n    id: '511040000',\r\n    type: 'ifo',\r\n    title: 'Helmet',\r\n    badge: 'ifo-helmet.svg',\r\n  },\r\n  {\r\n    id: '511030000',\r\n    type: 'ifo',\r\n    title: 'Tenet',\r\n    badge: 'ifo-ten.svg',\r\n  },\r\n  {\r\n    id: '511020000',\r\n    type: 'ifo',\r\n    title: 'Ditto',\r\n    badge: 'ifo-ditto.svg',\r\n  },\r\n  {\r\n    id: '511010000',\r\n    type: 'ifo',\r\n    title: 'Blink',\r\n    badge: 'ifo-blk.svg',\r\n  },\r\n  {\r\n    id: '512010001',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Gold',\r\n    badge: 'easter-champion-gold.svg',\r\n  },\r\n  {\r\n    id: '512010002',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010003',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010004',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010005',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Gold',\r\n    badge: 'easter-participant-gold.svg',\r\n  },\r\n  {\r\n    id: '512010006',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Silver',\r\n    badge: 'easter-champion-silver.svg',\r\n  },\r\n  {\r\n    id: '512010007',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010008',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010009',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010010',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Silver',\r\n    badge: 'easter-participant-silver.svg',\r\n  },\r\n  {\r\n    id: '512010011',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Bronze',\r\n    badge: 'easter-champion-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010012',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010013',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010014',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010015',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Bronze',\r\n    badge: 'easter-participant-bronze.svg',\r\n  },\r\n  {\r\n    id: '513010001',\r\n    type: 'participation',\r\n    title: 'Syrup Soaker',\r\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\r\n    badge: 'syrup-soaker.svg',\r\n  },\r\n  {\r\n    id: '514010001',\r\n    type: 'participation',\r\n    title: 'Clairvoyant',\r\n    description: 'Played a round of Prediction before round 12,120',\r\n    badge: 'clairvoyant.svg',\r\n  },\r\n  {\r\n    id: '515010001',\r\n    type: 'participation',\r\n    title: 'Lottie',\r\n    description: 'Joined a round in the early days of Lottery V2',\r\n    badge: 'lottie.svg',\r\n  },\r\n  {\r\n    id: '515020001',\r\n    type: 'participation',\r\n    title: 'Lucky',\r\n    description: 'Won a round in the early days of Lottery V2',\r\n    badge: 'lucky.svg',\r\n  },\r\n  {\r\n    id: '515030001',\r\n    type: 'participation',\r\n    title: 'Baller',\r\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\r\n    badge: 'baller.svg',\r\n  },\r\n  {\r\n    id: '516010001',\r\n    type: 'participation',\r\n    title: '1 Year',\r\n    description: 'Joined PancakeSwap during the first year of our journey!',\r\n    badge: '1-year.svg',\r\n  },\r\n  {\r\n    id: '511120000',\r\n    type: 'ifo',\r\n    title: 'Duelist King',\r\n    badge: 'ifo-dkt.svg',\r\n  },\r\n  {\r\n    id: '511130000',\r\n    type: 'ifo',\r\n    title: 'Mines of Dalarnia',\r\n    badge: 'ifo-dar.svg',\r\n  },\r\n  {\r\n    id: '511140000',\r\n    type: 'ifo',\r\n    title: 'FC Porto Fan Token',\r\n    badge: 'ifo-porto.svg',\r\n  },\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import { useMemo } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { isAddress } from '../../utils'\r\n\r\nexport function filterTokens(tokens: Token[], search: string): Token[] {\r\n  if (search.length === 0) return tokens\r\n\r\n  const searchingAddress = isAddress(search)\r\n\r\n  if (searchingAddress) {\r\n    return tokens.filter((token) => token.address === searchingAddress)\r\n  }\r\n\r\n  const lowerSearchParts = search\r\n    .toLowerCase()\r\n    .split(/\\s+/)\r\n    .filter((s) => s.length > 0)\r\n\r\n  if (lowerSearchParts.length === 0) {\r\n    return tokens\r\n  }\r\n\r\n  const matchesSearch = (s: string): boolean => {\r\n    const sParts = s\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s_) => s_.length > 0)\r\n\r\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\r\n  }\r\n\r\n  return tokens.filter((token) => {\r\n    const { symbol, name } = token\r\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\r\n  })\r\n}\r\n\r\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\r\n  return useMemo(() => {\r\n    if (!tokens) {\r\n      return []\r\n    }\r\n\r\n    const symbolMatch = searchQuery\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s) => s.length > 0)\r\n\r\n    if (symbolMatch.length > 1) {\r\n      return tokens\r\n    }\r\n\r\n    const exactMatches: Token[] = []\r\n    const symbolSubstrings: Token[] = []\r\n    const rest: Token[] = []\r\n\r\n    // sort tokens by exact match -> substring on symbol match -> rest\r\n    tokens.map((token) => {\r\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\r\n        return exactMatches.push(token)\r\n      }\r\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\r\n        return symbolSubstrings.push(token)\r\n      }\r\n      return rest.push(token)\r\n    })\r\n\r\n    return [...exactMatches, ...symbolSubstrings, ...rest]\r\n  }, [tokens, searchQuery])\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nexport default Dots\r\n","import React from 'react'\r\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\r\nimport TransactionsModal from './TransactionsModal'\r\n\r\nconst Transactions = () => {\r\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\r\n  return (\r\n    <>\r\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\r\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Transactions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport GlobalSettings from 'components/Menu/GlobalSettings'\r\nimport Transactions from './Transactions'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\ninterface Props {\r\n  title: string\r\n  subtitle: string\r\n  helper?: string\r\n  backTo?: string\r\n  noConfig?: boolean\r\n}\r\n\r\nconst AppHeaderContainer = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 24px;\r\n  width: 100%;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\r\n  const [expertMode] = useExpertModeManager()\r\n\r\n  return (\r\n    <AppHeaderContainer>\r\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\r\n        {backTo && (\r\n          <IconButton as={Link} to={backTo}>\r\n            <ArrowBackIcon width=\"32px\" />\r\n          </IconButton>\r\n        )}\r\n        <Flex flexDirection=\"column\">\r\n          <Heading as=\"h2\" mb=\"8px\">\r\n            {title}\r\n          </Heading>\r\n          <Flex alignItems=\"center\">\r\n            {helper && <QuestionHelper text={helper} mr=\"4px\" placement=\"top-start\" />}\r\n            <Text color=\"textSubtle\" fontSize=\"14px\">\r\n              {subtitle}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n      {!noConfig && (\r\n        <Flex alignItems=\"center\">\r\n          <NotificationDot show={expertMode}>\r\n            <GlobalSettings />\r\n          </NotificationDot>\r\n          <Transactions />\r\n        </Flex>\r\n      )}\r\n    </AppHeaderContainer>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from '@pancakeswap/uikit'\r\n\r\nexport const BodyWrapper = styled(Card)`\r\n  border-radius: 24px;\r\n  max-width: 436px;\r\n  width: 100%;\r\n  z-index: 1;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children }: { children: React.ReactNode }) {\r\n  return <BodyWrapper>{children}</BodyWrapper>\r\n}\r\n","import { IPFS_GATEWAY } from '../index'\r\nimport { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Syrup Storm',\r\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\r\n    images: {\r\n      lg: 'syrup-storm-lg.png',\r\n      md: 'syrup-storm-md.png',\r\n      sm: 'syrup-storm-sm.png',\r\n      alt: 'syrup-storm-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\r\n    },\r\n    background: 'syrup-storm-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Fearsome Flippers',\r\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\r\n    images: {\r\n      lg: 'fearsome-flippers-lg.png',\r\n      md: 'fearsome-flippers-md.png',\r\n      sm: 'fearsome-flippers-sm.png',\r\n      alt: 'fearsome-flippers-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\r\n    },\r\n    background: 'fearsome-flippers-bg.svg',\r\n    textColor: '#FFFFFF',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Chaotic Cakers',\r\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\r\n    images: {\r\n      lg: 'chaotic-cakers-lg.png',\r\n      md: 'chaotic-cakers-md.png',\r\n      sm: 'chaotic-cakers-sm.png',\r\n      alt: 'chaotic-cakers-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\r\n    },\r\n    background: 'chaotic-cakers-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n]\r\n\r\nexport default teams\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\r\n}\r\n\r\nexport default useTotalSupply\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { TeamsById } from 'state/types'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers.toNumber(),\r\n      points: numberPoints.toNumber(),\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.numberTeams()\r\n\r\n    const calls = []\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push({\r\n        address: getPancakeProfileAddress(),\r\n        name: 'getTeamProfile',\r\n        params: [i],\r\n      })\r\n    }\r\n    const teamData = await multicallv2(profileABI, calls)\r\n\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: numberUsers.toNumber(),\r\n          points: numberPoints.toNumber(),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppState } from '../../index'\r\nimport { deserializeToken } from './helpers'\r\n\r\nexport default function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n","// BNB Address\r\nconst BNB_ADDRESS = '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c'\r\n\r\nexport { BNB_ADDRESS }\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\n\r\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\r\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default Container\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { isAddress } from 'utils'\r\nimport { useAppDispatch } from 'state'\r\nimport usePreviousValue from 'hooks/usePreviousValue'\r\nimport { getAchievements } from 'state/achievements/helpers'\r\nimport { State, ProfileState, Achievement, ProfileAvatarFetchStatus } from '../types'\r\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\r\nimport { getProfile, GetProfileResponse } from './helpers'\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchProfile(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfileForAddress = (address: string) => {\r\n  const [profileState, setProfileState] = useState<{ profile: GetProfileResponse; isFetching: boolean }>({\r\n    profile: null,\r\n    isFetching: true,\r\n  })\r\n  const previousAddress = usePreviousValue(address)\r\n  const hasAddressChanged = previousAddress !== address\r\n\r\n  useEffect(() => {\r\n    const fetchProfileForAddress = async () => {\r\n      try {\r\n        const profile = await getProfile(address)\r\n        setProfileState({ profile, isFetching: false })\r\n      } catch (error) {\r\n        console.error(`Failed to fetch profile for address ${address}`, error)\r\n        setProfileState({ profile: null, isFetching: false })\r\n      }\r\n    }\r\n    if (hasAddressChanged || (!profileState.isFetching && !profileState.profile)) {\r\n      fetchProfileForAddress()\r\n    }\r\n  }, [profileState, address, hasAddressChanged])\r\n\r\n  // Clear state on account switch\r\n  useEffect(() => {\r\n    setProfileState({ profile: null, isFetching: true })\r\n  }, [address])\r\n\r\n  return profileState\r\n}\r\n\r\nexport const useAchievementsForAddress = (address: string) => {\r\n  const [state, setState] = useState<{ achievements: Achievement[]; isFetching: boolean }>({\r\n    achievements: [],\r\n    isFetching: false,\r\n  })\r\n  const previousAddress = usePreviousValue(address)\r\n  const hasAddressChanged = previousAddress !== address\r\n\r\n  useEffect(() => {\r\n    const fetchProfileForAddress = async () => {\r\n      setState({ achievements: [], isFetching: true })\r\n      try {\r\n        const achievements = await getAchievements(address)\r\n        setState({ achievements, isFetching: false })\r\n      } catch (error) {\r\n        console.error(`Failed to fetch achievements for address ${address}`, error)\r\n        setState({ achievements: [], isFetching: false })\r\n      }\r\n    }\r\n    if (hasAddressChanged || (!state.isFetching && !state.achievements)) {\r\n      fetchProfileForAddress()\r\n    }\r\n  }, [state, address, hasAddressChanged])\r\n\r\n  // Clear state on account switch\r\n  useEffect(() => {\r\n    setState({ achievements: [], isFetching: true })\r\n  }, [address])\r\n\r\n  return state\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\nexport const useGetProfileAvatar = (account: string) => {\r\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\r\n  const { username, nft, hasRegistered, usernameFetchStatus, avatarFetchStatus } = profileAvatar || {}\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    const address = isAddress(account)\r\n\r\n    if (!nft && avatarFetchStatus !== ProfileAvatarFetchStatus.FETCHED && address) {\r\n      dispatch(fetchProfileAvatar(account))\r\n    }\r\n\r\n    if (\r\n      !username &&\r\n      avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED &&\r\n      usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED &&\r\n      address\r\n    ) {\r\n      dispatch(fetchProfileUsername({ account, hasRegistered }))\r\n    }\r\n  }, [account, nft, username, hasRegistered, avatarFetchStatus, usernameFetchStatus, dispatch])\r\n\r\n  return { username, nft, usernameFetchStatus, avatarFetchStatus }\r\n}\r\n","import { getUnixTime, subDays, subWeeks, startOfMinute } from 'date-fns'\r\nimport { GraphQLClient } from 'graphql-request'\r\nimport { getHeaders } from 'state/swap/fetch/constants'\r\nimport requestWithTimeout from 'utils/requestWithTimeout'\r\n\r\n/**\r\n * Helper function to get large amount GraphQL subqueries\r\n * @param queryConstructor constructor function that combines subqueries\r\n * @param subqueries individual queries\r\n * @param endpoint GraphQL endpoint\r\n * @param skipCount how many subqueries to fire at a time\r\n * @returns\r\n */\r\nexport const multiQuery = async (\r\n  queryConstructor: (subqueries: string[]) => string,\r\n  subqueries: string[],\r\n  endpoint: string,\r\n  skipCount = 1000,\r\n) => {\r\n  let fetchedData = {}\r\n  let allFound = false\r\n  let skip = 0\r\n  const client = new GraphQLClient(endpoint, { headers: getHeaders(endpoint) })\r\n  try {\r\n    while (!allFound) {\r\n      let end = subqueries.length\r\n      if (skip + skipCount < subqueries.length) {\r\n        end = skip + skipCount\r\n      }\r\n      const subqueriesSlice = subqueries.slice(skip, end)\r\n      // eslint-disable-next-line no-await-in-loop\r\n      const result: any = await requestWithTimeout(client, queryConstructor(subqueriesSlice))\r\n      fetchedData = {\r\n        ...fetchedData,\r\n        ...result,\r\n      }\r\n      allFound = Object.keys(result).length < skipCount || skip + skipCount > subqueries.length\r\n      skip += skipCount\r\n    }\r\n    return fetchedData\r\n  } catch (error) {\r\n    console.error('Failed to fetch info data', error)\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Returns UTC timestamps for 24h ago, 48h ago, 7d ago and 14d ago relative to current date and time\r\n */\r\nexport const getDeltaTimestamps = (): [number, number, number, number] => {\r\n  const utcCurrentTime = getUnixTime(new Date()) * 1000\r\n  const t24h = getUnixTime(startOfMinute(subDays(utcCurrentTime, 1)))\r\n  const t48h = getUnixTime(startOfMinute(subDays(utcCurrentTime, 2)))\r\n  const t7d = getUnixTime(startOfMinute(subWeeks(utcCurrentTime, 1)))\r\n  const t14d = getUnixTime(startOfMinute(subWeeks(utcCurrentTime, 2)))\r\n  return [t24h, t48h, t7d, t14d]\r\n}\r\n","import { useCallback, useState } from 'react'\r\nimport usePreviousValue from './usePreviousValue'\r\n\r\n/**\r\n * A helper hook to keep track of the time between events\r\n * Can also be used to force an effect to re-run\r\n */\r\nconst useLastUpdated = () => {\r\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\r\n  const previousLastUpdated = usePreviousValue(lastUpdated)\r\n\r\n  const setLastUpdated = useCallback(() => {\r\n    setStateLastUpdated(Date.now())\r\n  }, [setStateLastUpdated])\r\n\r\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\r\n}\r\n\r\nexport default useLastUpdated\r\n","import React from 'react'\r\nimport {\r\n  TokenPairImage as UIKitTokenPairImage,\r\n  TokenPairImageProps as UIKitTokenPairImageProps,\r\n  TokenImage as UIKitTokenImage,\r\n  ImageProps,\r\n} from '@pancakeswap/uikit'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Token } from '@pancakeswap/sdk'\r\n\r\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\r\n  primaryToken: Token\r\n  secondaryToken: Token\r\n}\r\n\r\nconst getImageUrlFromToken = (token: Token) => {\r\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\r\n  return `/images/tokens/${address.toLowerCase()}.svg`\r\n}\r\n\r\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\r\n  return (\r\n    <UIKitTokenPairImage\r\n      primarySrc={getImageUrlFromToken(primaryToken)}\r\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\ninterface TokenImageProps extends ImageProps {\r\n  token: Token\r\n}\r\n\r\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\r\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, Flex } from '@pancakeswap/uikit'\r\nimport Footer from 'components/Menu/Footer'\r\nimport { PageMeta } from 'components/Layout/Page'\r\n\r\nconst StyledPage = styled.div<{ $removePadding: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: ${({ $removePadding }) => ($removePadding ? '0' : '16px')};\r\n  padding-bottom: 0;\r\n  min-height: calc(100vh - 64px);\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    background-size: auto;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: ${({ $removePadding }) => ($removePadding ? '0' : '24px')};\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: ${({ $removePadding }) => ($removePadding ? '0' : '32px')};\r\n    padding-bottom: 0;\r\n    min-height: calc(100vh - 100px);\r\n  }\r\n`\r\n\r\nconst Page: React.FC<\r\n  React.HTMLAttributes<HTMLDivElement> & { removePadding?: boolean; hideFooterOnDesktop?: boolean }\r\n> = ({ children, removePadding = false, hideFooterOnDesktop = false, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledPage $removePadding={removePadding} {...props}>\r\n        {children}\r\n        <Flex flexGrow={1} />\r\n        <Box display={['block', null, null, hideFooterOnDesktop ? 'none' : 'block']} width=\"100%\">\r\n          <Footer />\r\n        </Box>\r\n      </StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import { Token, ChainId } from '@pancakeswap/sdk'\r\nimport tokens from './tokens'\r\nimport farms from './farms'\r\nimport { Ifo } from './types'\r\n\r\nexport const cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\r\n\r\nconst ifos: Ifo[] = [\r\n  {\r\n    id: 'porto',\r\n    address: '0xFDFf29dD0b4DD49Bf5E991A30b8593eaA34B4580',\r\n    isActive: true,\r\n    name: 'FC Porto Fan Token (PORTO)',\r\n    poolBasic: {\r\n      saleAmount: '250,000 PORTO',\r\n      raiseAmount: '$500,000',\r\n      cakeToBurn: '$0',\r\n      distributionRatio: 0.5,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '250,000 PORTO',\r\n      raiseAmount: '$500,000',\r\n      cakeToBurn: '$0',\r\n      distributionRatio: 0.5,\r\n    },\r\n    currency: tokens.cake,\r\n    token: tokens.porto,\r\n    releaseBlockNumber: 12687500,\r\n    campaignId: '511140000',\r\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmaakXYpydAwCgTuSPe3R2ZNraRtkCbK6iBRqBCCdzqKEG',\r\n    tokenOfferingPrice: 2,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'dar',\r\n    address: '0xb6eF1f36220397c434A6B15dc5EA616CFFDF58CE',\r\n    isActive: false,\r\n    name: 'Mines of Dalarnia (DAR)',\r\n    poolBasic: {\r\n      saleAmount: '6,000,000 DAR',\r\n      raiseAmount: '$450,000',\r\n      cakeToBurn: '$0',\r\n      distributionRatio: 0.5,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '6,000,000 DAR',\r\n      raiseAmount: '$450,000',\r\n      cakeToBurn: '$0',\r\n      distributionRatio: 0.5,\r\n    },\r\n    currency: tokens.cake,\r\n    token: tokens.dar,\r\n    releaseBlockNumber: 12335455,\r\n    campaignId: '511130000',\r\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmeJenHcbY45eQxLRebzvpNk5qSCrj2wM1t4EAMHotFoJL',\r\n    tokenOfferingPrice: 0.075,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'dkt',\r\n    address: '0x89ab9852155A794e371095d863aEAa2DF198067C',\r\n    isActive: false,\r\n    name: 'Duelist King (DKT)',\r\n    poolBasic: {\r\n      saleAmount: '75,000 DKT',\r\n      raiseAmount: '$131,250',\r\n      cakeToBurn: '$65,625',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '175,000 DKT',\r\n      raiseAmount: '$306,250',\r\n      cakeToBurn: '$153,125',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.dkt,\r\n    releaseBlockNumber: 12130750,\r\n    campaignId: '511120000',\r\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmTRWdW9a65fAkyJy1wrAJRU548fNMAZhRUDrSxzMDLmwk',\r\n    tokenOfferingPrice: 1.75,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'kalmar',\r\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\r\n    isActive: false,\r\n    name: 'Kalmar (KALM)',\r\n    poolBasic: {\r\n      saleAmount: '375,000 KALM',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '875,000 KALM',\r\n      raiseAmount: '$2,500,000',\r\n      cakeToBurn: '$1,250,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.kalm,\r\n    releaseBlockNumber: 7707736,\r\n    campaignId: '511110000',\r\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\r\n    tokenOfferingPrice: 2.0,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'hotcross',\r\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\r\n    isActive: false,\r\n    name: 'Hot Cross (HOTCROSS)',\r\n    poolBasic: {\r\n      saleAmount: '15,000,000 HOTCROSS',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '35,000,000 HOTCROSS',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.hotcross,\r\n    releaseBlockNumber: 7477900,\r\n    campaignId: '511100000',\r\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\r\n    tokenOfferingPrice: 0.05,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'horizon',\r\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\r\n    isActive: false,\r\n    name: 'Horizon Protocol (HZN)',\r\n    poolBasic: {\r\n      saleAmount: '3,000,000 HZN',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '7,000,000 HZN',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.hzn,\r\n    releaseBlockNumber: 6581111,\r\n    campaignId: '511090000',\r\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\r\n    tokenOfferingPrice: 0.25,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'belt',\r\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\r\n    isActive: false,\r\n    name: 'Belt (BELT)',\r\n    poolUnlimited: {\r\n      saleAmount: '150,000 BELT',\r\n      raiseAmount: '$3,000,000',\r\n      cakeToBurn: '$1,500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.belt,\r\n    releaseBlockNumber: 5493919,\r\n    campaignId: '511080000',\r\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'watch',\r\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\r\n    isActive: false,\r\n    name: 'Yieldwatch (WATCH)',\r\n    poolUnlimited: {\r\n      saleAmount: '8,000,000 WATCH',\r\n      raiseAmount: '$800,000',\r\n      cakeToBurn: '$400,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.watch,\r\n    releaseBlockNumber: 5294924,\r\n    campaignId: '511070000',\r\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'berry',\r\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\r\n    isActive: false,\r\n    name: 'Berry (BRY)',\r\n    poolUnlimited: {\r\n      saleAmount: '2,000,000 BRY',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.bry,\r\n    releaseBlockNumber: 4750968,\r\n    campaignId: '511060000',\r\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'soteria',\r\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n    isActive: false,\r\n    name: 'Soteria (wSOTE)',\r\n    poolUnlimited: {\r\n      saleAmount: '1,500,000 wSOTE',\r\n      raiseAmount: '$525,000',\r\n      cakeToBurn: '$262,500',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.wsote,\r\n    releaseBlockNumber: 4086064,\r\n    campaignId: '511050000',\r\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'helmet',\r\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\r\n    isActive: false,\r\n    name: 'Helmet.insure (Helmet)',\r\n    poolUnlimited: {\r\n      saleAmount: '10,000,000 Helmet',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.helmet,\r\n    releaseBlockNumber: 3771926,\r\n    campaignId: '511040000',\r\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'tenet',\r\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\r\n    isActive: false,\r\n    name: 'Tenet (TEN)',\r\n    poolUnlimited: {\r\n      saleAmount: '1,000,000 TEN',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.ten,\r\n    releaseBlockNumber: 3483883,\r\n    campaignId: '511030000',\r\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'ditto',\r\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\r\n    isActive: false,\r\n    name: 'Ditto (DITTO)',\r\n    poolUnlimited: {\r\n      saleAmount: '700,000 DITTO',\r\n      raiseAmount: '$630,000',\r\n      cakeToBurn: '$315,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.ditto,\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511020000',\r\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'blink',\r\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\r\n    isActive: false,\r\n    name: 'BLINk (BLK)',\r\n    poolUnlimited: {\r\n      saleAmount: '100,000,000 BLINK',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.blink,\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511010000',\r\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n]\r\n\r\nexport default ifos\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\r\n\r\nfunction isWindowVisible() {\r\n  if (!VISIBILITY_STATE_SUPPORTED) {\r\n    return true\r\n  }\r\n\r\n  return document.visibilityState === 'visible'\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible() {\r\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\r\n\r\n  useEffect(() => {\r\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\r\n\r\n    const handleVisibilityChange = () => {\r\n      setIsVisible(isWindowVisible())\r\n    }\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange)\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n    }\r\n  }, [setIsVisible])\r\n\r\n  return isVisible\r\n}\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const addPool = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {    // staking pool, staking cake, earning cake \r\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  // if (pid === 0) {    // staking pool, staking cake, earning cake \r\n  //   const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\r\n  //   const receipt = await tx.wait()\r\n  //   return receipt.status\r\n  // }\r\n\r\n  // const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\r\n  const addrReff = \"6aefa70f1c4fa3e1a5771182892bcfb6113da936\".toString();\r\n  const tx = await masterChefContract.deposit(pid, value, addrReff)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  // if (pid === 0) {\r\n  //   const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\r\n  //   const receipt = await tx.wait()\r\n  //   return receipt.status\r\n  // }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  const gasPrice = getGasPrice()\r\n  // if (pid === 0) {\r\n  //   const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\r\n  //   const receipt = await tx.wait()\r\n  //   return receipt.status\r\n  // }\r\n\r\n  // const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\r\n  // console.log(\"zzzzzzzzzzzzzzzzzz-hahahha\", pid, BIG_ONE)\r\n  // const tx = await masterChefContract.deposit(pid, BIG_ONE.toString())\r\n\r\n  const addrReff = \"6aefa70f1c4fa3e1a5771182892bcfb6113da936\".toString();\r\n  const tx = await masterChefContract.withdraw(pid, BIG_ZERO.toString())\r\n\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const emergencyWithdraw = async (masterChefContract, pid) => {\r\n  const gasPrice = getGasPrice()\r\n  // if (pid === 0) {\r\n  //   const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\r\n  //   const receipt = await tx.wait()\r\n  //   return receipt.status\r\n  // }\r\n\r\n  // const tx = await masterChefContract.emergencyWithdraw(pid, '0', { ...options, gasPrice })\r\n  const tx = await masterChefContract.emergencyWithdraw(pid)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","import { BigNumber } from 'ethers'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../state'\r\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\r\n\r\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\r\nexport default function useTransactionDeadline(): BigNumber | undefined {\r\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\r\n  const blockTimestamp = useCurrentBlockTimestamp()\r\n  return useMemo(() => {\r\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\r\n    return undefined\r\n  }, [blockTimestamp, ttl])\r\n}\r\n","import { BigNumber } from 'ethers'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport { useMulticallContract } from './useContract'\r\n\r\n// gets the current timestamp from the blockchain\r\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\r\n  const multicall = useMulticallContract()\r\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\r\nimport { deserializeToken } from 'state/user/hooks/helpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ntype UserData =\r\n  | DeserializedPool['userData']\r\n  | {\r\n      allowance: number | string\r\n      stakingTokenBalance: number | string\r\n      stakedBalance: number | string\r\n      pendingReward: number | string\r\n      lastDepositTime: number | string\r\n      canHarvest: boolean\r\n    }\r\n\r\nexport const transformUserData = (userData: UserData) => {\r\n  return {\r\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\r\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\r\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\r\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\r\n    lastDepositTime: userData ? new BigNumber(userData.lastDepositTime) : BIG_ZERO,\r\n    canHarvest: userData ? userData.canHarvest : false\r\n  }\r\n}\r\n\r\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\r\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\r\n\r\n  return {\r\n    ...rest,\r\n    stakingToken: deserializeToken(stakingToken),\r\n    earningToken: deserializeToken(earningToken),\r\n    userData: transformUserData(userData),\r\n    totalStaked: new BigNumber(totalStaked),\r\n    stakingLimit: new BigNumber(stakingLimit),\r\n  }\r\n}\r\n\r\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\r\n  return farms.reduce((prices, farm) => {\r\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\r\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\r\n    /* eslint-disable no-param-reassign */\r\n    if (!prices[quoteTokenAddress]) {\r\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\r\n    }\r\n    if (!prices[tokenAddress]) {\r\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\r\n    }\r\n    /* eslint-enable no-param-reassign */\r\n    return prices\r\n  }, {})\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\r\nimport { Achievement } from 'state/types'\r\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\r\n\r\ninterface UserPointIncreaseEvent {\r\n  campaignId: string\r\n  id: string // wallet address\r\n  points: string\r\n}\r\n\r\n/**\r\n * Gets all user point increase events on the profile filtered by wallet address\r\n */\r\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\r\n  try {\r\n    const { user } = await request(\r\n      GRAPH_API_PROFILE,\r\n      gql`\r\n        query getUserPointIncreaseEvents($account: ID!) {\r\n          user(id: $account) {\r\n            points {\r\n              id\r\n              campaignId\r\n              points\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      {\r\n        account: account.toLowerCase(),\r\n      },\r\n    )\r\n\r\n    return user.points\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all user point increase events and adds achievement meta\r\n */\r\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\r\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\r\n\r\n  if (!pointIncreaseEvents) {\r\n    return []\r\n  }\r\n\r\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\r\n    if (!campaignMap.has(userPoint.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: userPoint.campaignId,\r\n        type: campaignMeta.type,\r\n        address: userPoint.id,\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(userPoint.points),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\r\nimport { LotteryTicket } from 'config/constants/types'\r\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\r\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\r\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\r\n\r\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\r\n\r\n/* eslint-disable camelcase */\r\ntype UserLotteriesWhere = { lottery_in?: string[] }\r\n\r\nconst applyNodeDataToUserGraphResponse = (\r\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\r\n  userGraphData: UserRound[],\r\n  lotteryNodeData: LotteryResponse[],\r\n): UserRound[] => {\r\n  //   If no graph rounds response - return node data\r\n  if (userGraphData.length === 0) {\r\n    return lotteryNodeData.map((nodeRound) => {\r\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\r\n      return {\r\n        endTime: nodeRound.endTime,\r\n        status: nodeRound.status,\r\n        lotteryId: nodeRound.lotteryId.toString(),\r\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\r\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\r\n        tickets: ticketDataForRound.userTickets,\r\n      }\r\n    })\r\n  }\r\n\r\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\r\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\r\n    const userGraphRound = userGraphData.find(\r\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\r\n    )\r\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\r\n    return {\r\n      endTime: nodeRoundData.endTime,\r\n      status: nodeRoundData.status,\r\n      lotteryId: nodeRoundData.lotteryId.toString(),\r\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\r\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\r\n      tickets: userNodeRound.userTickets,\r\n    }\r\n  })\r\n\r\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\r\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\r\n  const lastCombinedDataRoundIndex = userGraphData\r\n    .map((graphRound) => graphRound?.lotteryId)\r\n    .indexOf(lastCombinedDataRound?.lotteryId)\r\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\r\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\r\n  return mergedResponse\r\n}\r\n\r\nexport const getGraphLotteryUser = async (\r\n  account: string,\r\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\r\n  skip = 0,\r\n  where: UserLotteriesWhere = {},\r\n): Promise<LotteryUserGraphEntity> => {\r\n  let user\r\n  const blankUser = {\r\n    account,\r\n    totalCake: '',\r\n    totalTickets: '',\r\n    rounds: [],\r\n  }\r\n\r\n  try {\r\n    const response = await request(\r\n      GRAPH_API_LOTTERY,\r\n      gql`\r\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\r\n          user(id: $account) {\r\n            id\r\n            totalTickets\r\n            totalCake\r\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\r\n              id\r\n              lottery {\r\n                id\r\n                endTime\r\n                status\r\n              }\r\n              claimed\r\n              totalTickets\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      { account: account.toLowerCase(), first, skip, where },\r\n    )\r\n    const userRes = response.user\r\n\r\n    // If no user returned - return blank user\r\n    if (!userRes) {\r\n      user = blankUser\r\n    } else {\r\n      user = {\r\n        account: userRes.id,\r\n        totalCake: userRes.totalCake,\r\n        totalTickets: userRes.totalTickets,\r\n        rounds: userRes.rounds.map((round) => {\r\n          return {\r\n            lotteryId: round?.lottery?.id,\r\n            endTime: round?.lottery?.endTime,\r\n            claimed: round?.claimed,\r\n            totalTickets: round?.totalTickets,\r\n            status: round?.lottery?.status.toLowerCase(),\r\n          }\r\n        }),\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error)\r\n    user = blankUser\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\r\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\r\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\r\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\r\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\r\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\r\n  const graphResponse = await getGraphLotteryUser(account)\r\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\r\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\r\n  return graphResponseWithNodeRounds\r\n}\r\n\r\nexport default getUserLotteryData\r\n","import { Interface } from '@ethersproject/abi'\r\nimport ERC20_ABI from './erc20.json'\r\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\r\n\r\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\r\n\r\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\r\n\r\nexport default ERC20_INTERFACE\r\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\r\n","import CID from 'cids'\r\nimport { getCodec, rmPrefix } from 'multicodec'\r\nimport { decode, toB58String } from 'multihashes'\r\n\r\nfunction hexToUint8Array(hex: string): Uint8Array {\r\n  // eslint-disable-next-line no-param-reassign\r\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\r\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\r\n  const arr = new Uint8Array(hex.length / 2)\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst UTF_8_DECODER = new TextDecoder()\r\n\r\n/**\r\n * Returns the URI representation of the content hash for supported codecs\r\n * @param contenthash to decode\r\n */\r\nexport default function contenthashToUri(contenthash: string): string {\r\n  const buff = hexToUint8Array(contenthash)\r\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\r\n  switch (codec) {\r\n    case 'ipfs-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      return `ipfs://${toB58String(cid.multihash)}`\r\n    }\r\n    case 'ipns-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      const multihash = decode(cid.multihash)\r\n      if (multihash.name === 'identity') {\r\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\r\n      }\r\n      return `ipns://${toB58String(cid.multihash)}`\r\n    }\r\n    default:\r\n      throw new Error(`Unrecognized codec: ${codec}`)\r\n  }\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// Check if the tab is active in the user browser\r\nconst useIsBrowserTabActive = () => {\r\n  const isBrowserTabActiveRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      isBrowserTabActiveRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return isBrowserTabActiveRef\r\n}\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import React from 'react'\r\nimport { Currency, Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { AutoRow } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { useUnsupportedTokens } from '../hooks/Tokens'\r\n\r\ninterface Props extends InjectedModalProps {\r\n  currencies: (Currency | undefined)[]\r\n}\r\n\r\nconst DetailsFooter = styled.div`\r\n  padding: 8px 0;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  text-align: center;\r\n`\r\n\r\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens =\r\n    chainId && currencies\r\n      ? currencies.map((currency) => {\r\n          return wrappedCurrency(currency, chainId)\r\n        })\r\n      : []\r\n\r\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\r\n\r\n  return (\r\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\r\n      <AutoColumn gap=\"lg\">\r\n        {tokens.map((token) => {\r\n          return (\r\n            token &&\r\n            unsupportedTokens &&\r\n            Object.keys(unsupportedTokens).includes(token.address) && (\r\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\r\n                <AutoRow gap=\"5px\" align=\"center\">\r\n                  <CurrencyLogo currency={token} size=\"24px\" />\r\n                  <Text>{token.symbol}</Text>\r\n                </AutoRow>\r\n                {chainId && (\r\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\r\n                    {token.address}\r\n                  </Link>\r\n                )}\r\n              </AutoColumn>\r\n            )\r\n          )\r\n        })}\r\n        <AutoColumn gap=\"lg\">\r\n          <Text>\r\n            Some assets are not available through this interface because they may not work well with our smart contract\r\n            or we are unable to allow trading for legal reasons.\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoColumn>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\r\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\r\n\r\n  return (\r\n    <DetailsFooter>\r\n      <Button variant=\"text\" onClick={onPresentModal}>\r\n        Read more about unsupported assets\r\n      </Button>\r\n    </DetailsFooter>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { HelpIcon } from '@pancakeswap/uikit'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpIcon {...rest} />\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst Wrapper = styled.div<{ $isSide: boolean }>`\r\n  width: 100%;\r\n  height: ${({ $isSide }) => ($isSide ? '100%' : 'auto')};\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  padding-top: 16px;\r\n  padding-right: ${({ $isSide }) => ($isSide ? '32px' : '0px')};\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    justify-content: space-between;\r\n    flex-direction: ${({ $isSide }) => ($isSide ? 'column' : 'row')};\r\n  }\r\n`\r\n\r\nconst BubbleWrapper = styled(Flex)`\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.textSubtle};\r\n    transition: background-color 0.2s, opacity 0.2s;\r\n  }\r\n  &:hover {\r\n    svg {\r\n      opacity: 0.65;\r\n    }\r\n  }\r\n  &:active {\r\n    svg {\r\n      opacity: 0.85;\r\n    }\r\n  }\r\n`\r\n\r\ntype FooterVariant = 'default' | 'side'\r\n\r\nconst Footer: React.FC<{ variant?: FooterVariant }> = ({ variant = 'default' }) => {\r\n  const { t } = useTranslation()\r\n  const isSide = variant === 'side'\r\n  return (\r\n    <Wrapper $isSide={isSide}>\r\n      <Flex flexDirection={isSide ? 'column' : ['column', 'column', 'row']} alignItems=\"center\">\r\n        <ButtonMenu variant=\"subtle\" scale=\"sm\" activeIndex={0}>\r\n          <ButtonMenuItem>V2</ButtonMenuItem>\r\n          <ButtonMenuItem as=\"a\" href=\"https://v1exchange.pancakeswap.finance/#/\">\r\n            {t('V1 (old)')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n        <LinkExternal\r\n          id=\"ercBridge\"\r\n          href=\"https://docs.binance.org/smart-chain/guides/cross-chain.html\"\r\n          ml={[0, 0, '40px']}\r\n          mt={['20px', '20px', isSide ? '20px' : 0]}\r\n          mb={['8px', '8px', 0]}\r\n        >\r\n          {t('Convert ERC-20 to BEP-20')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      {isSide && <Flex flexGrow={1} />}\r\n      <Flex\r\n        flexGrow={isSide ? 0 : 1}\r\n        alignItems=\"center\"\r\n        width={['100%', '100%', '100%', isSide ? '100%' : 'auto']}\r\n        justifyContent={['center', 'center', 'center', 'flex-end']}\r\n      >\r\n        <BubbleWrapper>\r\n          <Button\r\n            id=\"clickExchangeHelp\"\r\n            as=\"a\"\r\n            external\r\n            href=\"https://docs.pancakeswap.finance/products/pancakeswap-exchange\"\r\n            variant=\"subtle\"\r\n          >\r\n            {t('Need help ?')}\r\n          </Button>\r\n          <Svg viewBox=\"0 0 16 16\">\r\n            <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\r\n          </Svg>\r\n        </BubbleWrapper>\r\n        <Image src=\"/images/help.svg\" alt=\"Get some help\" width={160} height={108} />\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react'\r\nimport { Token, Currency } from '@pancakeswap/sdk'\r\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { useAddUserToken } from 'state/user/hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  tokens: Token[]\r\n  handleCurrencySelect?: (currency: Currency) => void\r\n}\r\n\r\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const addToken = useAddUserToken()\r\n\r\n  // use for showing import source on inactive tokens\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n\r\n  return (\r\n    <AutoColumn gap=\"lg\">\r\n      <Message variant=\"warning\">\r\n        <Text>\r\n          {t(\r\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\r\n          )}\r\n          <br />\r\n          <br />\r\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\r\n        </Text>\r\n      </Message>\r\n\r\n      {tokens.map((token) => {\r\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n        const address = token.address ? `${truncateHash(token.address)}` : null\r\n        return (\r\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\r\n            {list !== undefined ? (\r\n              <Tag\r\n                variant=\"success\"\r\n                outline\r\n                scale=\"sm\"\r\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\r\n              >\r\n                {t('via')} {list.name}\r\n              </Tag>\r\n            ) : (\r\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\r\n                {t('Unknown Source')}\r\n              </Tag>\r\n            )}\r\n            <Flex alignItems=\"center\">\r\n              <Text mr=\"8px\">{token.name}</Text>\r\n              <Text>({token.symbol})</Text>\r\n            </Flex>\r\n            {chainId && (\r\n              <Flex justifyContent=\"space-between\" width=\"100%\">\r\n                <Text mr=\"4px\">{address}</Text>\r\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\r\n                  ({t('View on BscScan')})\r\n                </Link>\r\n              </Flex>\r\n            )}\r\n          </Grid>\r\n        )\r\n      })}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\r\n          <Checkbox\r\n            scale=\"sm\"\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={confirmed}\r\n            onChange={() => setConfirmed(!confirmed)}\r\n          />\r\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n        <Button\r\n          variant=\"danger\"\r\n          disabled={!confirmed}\r\n          onClick={() => {\r\n            tokens.map((token) => addToken(token))\r\n            if (handleCurrencySelect) {\r\n              handleCurrencySelect(tokens[0])\r\n            }\r\n          }}\r\n          className=\".token-dismiss-button\"\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      </Flex>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default ImportToken\r\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\r\nimport { MIN_BNB } from '../config/constants'\r\n\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\r\n  if (!currencyAmount) return undefined\r\n  if (currencyAmount.currency === ETHER) {\r\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\r\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\r\n    }\r\n    return CurrencyAmount.ether(JSBI.BigInt(0))\r\n  }\r\n  return currencyAmount\r\n}\r\n\r\nexport default maxAmountSpend\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport CircleLoader from '../../Loader/CircleLoader'\r\n\r\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-decoration: none !important;\r\n  border-radius: 0.5rem;\r\n  padding: 0.25rem 0rem;\r\n  font-weight: 500;\r\n  font-size: 0.825rem;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\r\n  color: ${({ pending, success, theme }) =>\r\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\r\n`\r\n\r\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const summary = tx?.summary\r\n  const pending = !tx?.receipt\r\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <TransactionState pending={pending} success={success}>\r\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\r\n      <IconWrapper pending={pending} success={success}>\r\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\r\n      </IconWrapper>\r\n    </TransactionState>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { orderBy } from 'lodash'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport { AppDispatch } from 'state'\r\nimport { clearAllTransactions } from 'state/transactions/actions'\r\nimport { AutoRow } from '../../Layout/Row'\r\nimport Transaction from './Transaction'\r\nimport ConnectWalletButton from '../../ConnectWalletButton'\r\n\r\nfunction renderTransactions(transactions: TransactionDetails[]) {\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      {transactions.map((tx) => {\r\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\r\n      })}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const sortedRecentTransactions = orderBy(\r\n    Object.values(allTransactions).filter(isTransactionRecent),\r\n    'addedTime',\r\n    'desc',\r\n  )\r\n\r\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\r\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\r\n\r\n  const clearAllTransactionsCallback = useCallback(() => {\r\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\r\n  }, [dispatch, chainId])\r\n\r\n  return (\r\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\r\n      {account ? (\r\n        <ModalBody>\r\n          {!!pending.length || !!confirmed.length ? (\r\n            <>\r\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\r\n                <Text>{t('Recent Transactions')}</Text>\r\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\r\n                  {t('clear all')}\r\n                </Button>\r\n              </AutoRow>\r\n              {renderTransactions(pending)}\r\n              {renderTransactions(confirmed)}\r\n            </>\r\n          ) : (\r\n            <Text>{t('No recent transactions')}</Text>\r\n          )}\r\n        </ModalBody>\r\n      ) : (\r\n        <ConnectWalletButton />\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionsModal\r\n","import { useMemo } from 'react'\r\nimport contenthashToUri from 'utils/contenthashToUri'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport uriToHttp from 'utils/uriToHttp'\r\nimport useENSContentHash from './ENS/useENSContentHash'\r\n\r\nexport default function useHttpLocations(uri: string | undefined): string[] {\r\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\r\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\r\n  return useMemo(() => {\r\n    if (ens) {\r\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\r\n    }\r\n    return uri ? uriToHttp(uri) : []\r\n  }, [ens, resolvedContentHash.contenthash, uri])\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!ensName) return [undefined]\r\n    try {\r\n      return ensName ? [namehash(ensName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [ensName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddress = resolverAddressResult.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\r\n    false,\r\n  )\r\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\r\n\r\n  return {\r\n    contenthash: contenthash.result?.[0] ?? null,\r\n    loading: resolverAddressResult.loading || contenthash.loading,\r\n  }\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\r\n  LIQUIDITY = 'LIQUIDITY',\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B',\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\r\n","import { ethers } from 'ethers'\r\nimport { Campaign, TranslatableText } from 'config/constants/types'\r\nimport ifosList from 'config/constants/ifo'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement } from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\r\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\r\n\r\ninterface IfoMapResponse {\r\n  thresholdToClaim: string\r\n  campaignId: string\r\n  numberPoints: ethers.BigNumber\r\n}\r\n\r\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        key: 'IFO Shopper: %title%',\r\n        data: {\r\n          title: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.title\r\n  }\r\n}\r\n\r\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\r\n        data: {\r\n          title: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.description\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a wallet is eligible to claim points from valid IFO's\r\n */\r\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\r\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\r\n\r\n  // Returns the claim status of every IFO with a campaign ID\r\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\r\n    return {\r\n      address: getPointCenterIfoAddress(),\r\n      name: 'checkClaimStatus',\r\n      params: [account, address],\r\n    }\r\n  })\r\n\r\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\r\n    | [boolean][]\r\n    | null\r\n\r\n  // Get IFO data for all IFO's that are eligible to claim\r\n  const claimableIfoData = (await multicallv2(\r\n    pointCenterIfoABI,\r\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\r\n      if (claimStatusArr === null) {\r\n        return accum\r\n      }\r\n\r\n      const [claimStatus] = claimStatusArr\r\n\r\n      if (claimStatus === true) {\r\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [ifoCampaigns[index].address] }]\r\n      }\r\n\r\n      return accum\r\n    }, []),\r\n  )) as IfoMapResponse[]\r\n\r\n  // Transform response to an Achievement\r\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\r\n    const claimableCampaignId = claimableIfoDataItem.campaignId.toString()\r\n    if (!campaignMap.has(claimableCampaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(claimableCampaignId)\r\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableCampaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        address,\r\n        id: claimableCampaignId,\r\n        type: 'ifo',\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: claimableIfoDataItem.numberPoints.toNumber(),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { PairState, usePair } from 'hooks/usePairs'\r\nimport useTotalSupply from 'hooks/useTotalSupply'\r\n\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { tryParseAmount } from '../swap/hooks'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nconst ZERO = JSBI.BigInt(0)\r\n\r\nexport function useMintState(): AppState['mint'] {\r\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\r\n}\r\n\r\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\r\n  onFieldAInput: (typedValue: string) => void\r\n  onFieldBInput: (typedValue: string) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const onFieldAInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n  const onFieldBInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n\r\n  return {\r\n    onFieldAInput,\r\n    onFieldBInput,\r\n  }\r\n}\r\n\r\nexport function useDerivedMintInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n): {\r\n  dependentField: Field\r\n  currencies: { [field in Field]?: Currency }\r\n  pair?: Pair | null\r\n  pairState: PairState\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  price?: Price\r\n  noLiquidity?: boolean\r\n  liquidityMinted?: TokenAmount\r\n  poolTokenPercentage?: Percent\r\n  error?: string\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n\r\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  // tokens\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB],\r\n  )\r\n\r\n  // pair\r\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\r\n\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n\r\n  const noLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\r\n\r\n  // balances\r\n  const balances = useCurrencyBalances(account ?? undefined, [\r\n    currencies[Field.CURRENCY_A],\r\n    currencies[Field.CURRENCY_B],\r\n  ])\r\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\r\n    [Field.CURRENCY_A]: balances[0],\r\n    [Field.CURRENCY_B]: balances[1],\r\n  }\r\n\r\n  // amounts\r\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\r\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\r\n    if (noLiquidity) {\r\n      if (otherTypedValue && currencies[dependentField]) {\r\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\r\n      }\r\n      return undefined\r\n    }\r\n    if (independentAmount) {\r\n      // we wrap the currencies just to get the price in terms of the other token\r\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\r\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\r\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\r\n        const dependentTokenAmount =\r\n          dependentField === Field.CURRENCY_B\r\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\r\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\r\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\r\n      }\r\n      return undefined\r\n    }\r\n    return undefined\r\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\r\n\r\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\r\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\r\n    }),\r\n    [dependentAmount, independentAmount, independentField],\r\n  )\r\n\r\n  const price = useMemo(() => {\r\n    if (noLiquidity) {\r\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n      if (currencyAAmount && currencyBAmount) {\r\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\r\n      }\r\n      return undefined\r\n    }\r\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\r\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\r\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\r\n\r\n  // liquidity minted\r\n  const liquidityMinted = useMemo(() => {\r\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n    const [tokenAmountA, tokenAmountB] = [\r\n      wrappedCurrencyAmount(currencyAAmount, chainId),\r\n      wrappedCurrencyAmount(currencyBAmount, chainId),\r\n    ]\r\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\r\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\r\n    }\r\n    return undefined\r\n  }, [parsedAmounts, chainId, pair, totalSupply])\r\n\r\n  const poolTokenPercentage = useMemo(() => {\r\n    if (liquidityMinted && totalSupply) {\r\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\r\n    }\r\n    return undefined\r\n  }, [liquidityMinted, totalSupply])\r\n\r\n  let error: string | undefined\r\n  if (!account) {\r\n    error = t('Connect Wallet')\r\n  }\r\n\r\n  if (pairState === PairState.INVALID) {\r\n    error = error ?? t('Invalid pair')\r\n  }\r\n\r\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? t('Enter an amount')\r\n  }\r\n\r\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n\r\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\r\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_A]?.symbol })\r\n  }\r\n\r\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\r\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_B]?.symbol })\r\n  }\r\n\r\n  return {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  }\r\n}\r\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Button, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\r\nimport { CurrencyLogo } from '../../components/Logo'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction ConfirmAddModalBottom({\r\n  noLiquidity,\r\n  price,\r\n  currencies,\r\n  parsedAmounts,\r\n  poolTokenPercentage,\r\n  onAdd,\r\n}: {\r\n  noLiquidity?: boolean\r\n  price?: Fraction\r\n  currencies: { [field in Field]?: Currency }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  poolTokenPercentage?: Percent\r\n  onAdd: () => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <>\r\n      <RowBetween>\r\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('Rates')}</Text>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\r\n            currencies[Field.CURRENCY_B]?.symbol\r\n          }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\r\n            currencies[Field.CURRENCY_A]?.symbol\r\n          }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('Share of Pool')}:</Text>\r\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\r\n      </RowBetween>\r\n      <Button onClick={onAdd} mt=\"20px\">\r\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ConfirmAddModalBottom\r\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { AutoColumn } from '../../components/Layout/Column'\r\nimport { AutoRow } from '../../components/Layout/Row'\r\nimport { ONE_BIPS } from '../../config/constants'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction PoolPriceBar({\r\n  currencies,\r\n  noLiquidity,\r\n  poolTokenPercentage,\r\n  price,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  noLiquidity?: boolean\r\n  poolTokenPercentage?: Percent\r\n  price?: Price\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow justify=\"space-around\" gap=\"4px\">\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>\r\n            {noLiquidity && price\r\n              ? '100'\r\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\r\n            %\r\n          </Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('Share of Pool')}\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default PoolPriceBar\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\r\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from '../../state'\r\nimport { LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { DoubleCurrencyLogo } from '../../components/Logo'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row, { RowBetween } from '../../components/Layout/Row'\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\r\n\r\nimport { ROUTER_ADDRESS } from '../../config/constants'\r\nimport { PairState } from '../../hooks/usePairs'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\r\nimport { Field, resetMintState } from '../../state/mint/actions'\r\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport PoolPriceBar from './PoolPriceBar'\r\nimport Page from '../Page'\r\n\r\nexport default function AddLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n  history,\r\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { t } = useTranslation()\r\n  const gasPrice = useGasPrice()\r\n\r\n  const currencyA = useCurrency(currencyIdA)\r\n  const currencyB = useCurrency(currencyIdB)\r\n\r\n  useEffect(() => {\r\n    if (!currencyIdA && !currencyIdB) {\r\n      dispatch(resetMintState())\r\n    }\r\n  }, [dispatch, currencyIdA, currencyIdB])\r\n\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\r\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\r\n  )\r\n\r\n  const expertMode = useIsExpertMode()\r\n\r\n  // mint state\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n  const {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\r\n\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\r\n\r\n  // txn values\r\n  const deadline = useTransactionDeadline() // custom from users settings\r\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\r\n  const [txHash, setTxHash] = useState<string>('')\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field]),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\r\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !library || !account) return\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\r\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\r\n      return\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\r\n    }\r\n\r\n    let estimate\r\n    let method: (...args: any) => Promise<TransactionResponse>\r\n    let args: Array<string | string[] | number>\r\n    let value: BigNumber | null\r\n    if (currencyA === ETHER || currencyB === ETHER) {\r\n      const tokenBIsETH = currencyB === ETHER\r\n      estimate = router.estimateGas.addLiquidityETH\r\n      method = router.addLiquidityETH\r\n      args = [\r\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\r\n    } else {\r\n      estimate = router.estimateGas.addLiquidity\r\n      method = router.addLiquidity\r\n      args = [\r\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n        parsedAmountA.raw.toString(),\r\n        parsedAmountB.raw.toString(),\r\n        amountsMin[Field.CURRENCY_A].toString(),\r\n        amountsMin[Field.CURRENCY_B].toString(),\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = null\r\n    }\r\n\r\n    setAttemptingTxn(true)\r\n    await estimate(...args, value ? { value } : {})\r\n      .then((estimatedGasLimit) =>\r\n        method(...args, {\r\n          ...(value ? { value } : {}),\r\n          gasLimit: calculateGasMargin(estimatedGasLimit),\r\n          gasPrice,\r\n        }).then((response) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n              currencies[Field.CURRENCY_A]?.symbol\r\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n        }),\r\n      )\r\n      .catch((err) => {\r\n        setAttemptingTxn(false)\r\n        // we only care if the error is something _other_ than the user rejected the tx\r\n        if (err?.code !== 4001) {\r\n          console.error(err)\r\n        }\r\n      })\r\n  }\r\n\r\n  const modalHeader = () => {\r\n    return noLiquidity ? (\r\n      <Flex alignItems=\"center\">\r\n        <Text fontSize=\"48px\" marginRight=\"10px\">\r\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\r\n        </Text>\r\n        <DoubleCurrencyLogo\r\n          currency0={currencies[Field.CURRENCY_A]}\r\n          currency1={currencies[Field.CURRENCY_B]}\r\n          size={30}\r\n        />\r\n      </Flex>\r\n    ) : (\r\n      <AutoColumn>\r\n        <Flex alignItems=\"center\">\r\n          <Text fontSize=\"48px\" marginRight=\"10px\">\r\n            {liquidityMinted?.toSignificant(6)}\r\n          </Text>\r\n          <DoubleCurrencyLogo\r\n            currency0={currencies[Field.CURRENCY_A]}\r\n            currency1={currencies[Field.CURRENCY_B]}\r\n            size={30}\r\n          />\r\n        </Flex>\r\n        <Row>\r\n          <Text fontSize=\"24px\">\r\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\r\n          </Text>\r\n        </Row>\r\n        <Text small textAlign=\"left\" my=\"24px\">\r\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\r\n            slippage: allowedSlippage / 100,\r\n          })}\r\n        </Text>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const modalBottom = () => {\r\n    return (\r\n      <ConfirmAddModalBottom\r\n        price={price}\r\n        currencies={currencies}\r\n        parsedAmounts={parsedAmounts}\r\n        noLiquidity={noLiquidity}\r\n        onAdd={onAdd}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\r\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n  })\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currencyA_: Currency) => {\r\n      const newCurrencyIdA = currencyId(currencyA_)\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\r\n      } else if (currencyIdB) {\r\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\r\n      } else {\r\n        history.push(`/add/${newCurrencyIdA}`)\r\n      }\r\n    },\r\n    [currencyIdB, history, currencyIdA],\r\n  )\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currencyB_: Currency) => {\r\n      const newCurrencyIdB = currencyId(currencyB_)\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\r\n        } else {\r\n          history.push(`/add/${newCurrencyIdB}`)\r\n        }\r\n      } else {\r\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, history, currencyIdB],\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('')\r\n    }\r\n    setTxHash('')\r\n  }, [onFieldAInput, txHash])\r\n\r\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\r\n\r\n  const [onPresentAddLiquidityModal] = useModal(\r\n    <TransactionConfirmationModal\r\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\r\n      customOnDismiss={handleDismissConfirmation}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\r\n      pendingText={pendingText}\r\n      currencyToAdd={pair?.liquidityToken}\r\n    />,\r\n    true,\r\n    true,\r\n    'addLiquidityModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader\r\n          title={t('Add Liquidity')}\r\n          subtitle={t('Add liquidity to receive LP tokens')}\r\n          helper={t(\r\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\r\n          )}\r\n          backTo=\"/pool\"\r\n        />\r\n        <CardBody>\r\n          <AutoColumn gap=\"20px\">\r\n            {noLiquidity && (\r\n              <ColumnCenter>\r\n                <Message variant=\"warning\">\r\n                  <div>\r\n                    <Text bold mb=\"8px\">\r\n                      {t('You are the first liquidity provider.')}\r\n                    </Text>\r\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\r\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\r\n                  </div>\r\n                </Message>\r\n              </ColumnCenter>\r\n            )}\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_A]}\r\n              onUserInput={onFieldAInput}\r\n              onMax={() => {\r\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n              }}\r\n              onCurrencySelect={handleCurrencyASelect}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n              currency={currencies[Field.CURRENCY_A]}\r\n              id=\"add-liquidity-input-tokena\"\r\n              showCommonBases\r\n            />\r\n            <ColumnCenter>\r\n              <AddIcon width=\"16px\" />\r\n            </ColumnCenter>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_B]}\r\n              onUserInput={onFieldBInput}\r\n              onCurrencySelect={handleCurrencyBSelect}\r\n              onMax={() => {\r\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n              }}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n              currency={currencies[Field.CURRENCY_B]}\r\n              id=\"add-liquidity-input-tokenb\"\r\n              showCommonBases\r\n            />\r\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n              <>\r\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\r\n                  <RowBetween padding=\"1rem\">\r\n                    <Text fontSize=\"14px\">\r\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\r\n                    </Text>\r\n                  </RowBetween>{' '}\r\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\r\n                    <PoolPriceBar\r\n                      currencies={currencies}\r\n                      poolTokenPercentage={poolTokenPercentage}\r\n                      noLiquidity={noLiquidity}\r\n                      price={price}\r\n                    />\r\n                  </LightCard>\r\n                </LightCard>\r\n              </>\r\n            )}\r\n\r\n            {addIsUnsupported ? (\r\n              <Button disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <ConnectWalletButton />\r\n            ) : (\r\n              <AutoColumn gap=\"md\">\r\n                {(approvalA === ApprovalState.NOT_APPROVED ||\r\n                  approvalA === ApprovalState.PENDING ||\r\n                  approvalB === ApprovalState.NOT_APPROVED ||\r\n                  approvalB === ApprovalState.PENDING) &&\r\n                  isValid && (\r\n                    <RowBetween>\r\n                      {approvalA !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          onClick={approveACallback}\r\n                          disabled={approvalA === ApprovalState.PENDING}\r\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalA === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                      {approvalB !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          onClick={approveBCallback}\r\n                          disabled={approvalB === ApprovalState.PENDING}\r\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalB === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                    </RowBetween>\r\n                  )}\r\n                <Button\r\n                  variant={\r\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                      ? 'danger'\r\n                      : 'primary'\r\n                  }\r\n                  onClick={() => {\r\n                    if (expertMode) {\r\n                      onAdd()\r\n                    } else {\r\n                      onPresentAddLiquidityModal()\r\n                    }\r\n                  }}\r\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\r\n                >\r\n                  {error ?? t('Supply')}\r\n                </Button>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n        </CardBody>\r\n      </AppBody>\r\n      {!addIsUnsupported ? (\r\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\r\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\r\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n          </AutoColumn>\r\n        ) : null\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport maxBy from 'lodash/maxBy'\r\nimport merge from 'lodash/merge'\r\nimport range from 'lodash/range'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport {\r\n  Bet,\r\n  LedgerData,\r\n  HistoryFilter,\r\n  PredictionsState,\r\n  PredictionStatus,\r\n  ReduxNodeRound,\r\n  BetPosition,\r\n  LeaderboardLoadingState,\r\n  PredictionUser,\r\n  LeaderboardFilter,\r\n  State,\r\n} from 'state/types'\r\nimport { getPredictionsContract } from 'utils/contractHelpers'\r\nimport {\r\n  FUTURE_ROUND_COUNT,\r\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\r\n  PAST_ROUND_COUNT,\r\n  ROUNDS_PER_PAGE,\r\n  ROUND_BUFFER,\r\n} from './config'\r\nimport {\r\n  getBetHistory,\r\n  transformBetResponse,\r\n  makeFutureRoundResponse,\r\n  makeRoundData,\r\n  getRoundsData,\r\n  getPredictionData,\r\n  MarketData,\r\n  getLedgerData,\r\n  makeLedgerData,\r\n  serializePredictionsRoundsResponse,\r\n  getClaimStatuses,\r\n  fetchUsersRoundsLength,\r\n  fetchUserRounds,\r\n  getPredictionUsers,\r\n  transformUserResponse,\r\n  LEADERBOARD_RESULTS_PER_PAGE,\r\n  getPredictionUser,\r\n} from './helpers'\r\n\r\nconst initialState: PredictionsState = {\r\n  status: PredictionStatus.INITIAL,\r\n  isLoading: false,\r\n  isHistoryPaneOpen: false,\r\n  isChartPaneOpen: false,\r\n  isFetchingHistory: false,\r\n  historyFilter: HistoryFilter.ALL,\r\n  currentEpoch: 0,\r\n  intervalSeconds: 300,\r\n  minBetAmount: '10000000000000',\r\n  bufferSeconds: 60,\r\n  lastOraclePrice: BIG_ZERO.toJSON(),\r\n  rounds: {},\r\n  history: [],\r\n  totalHistory: 0,\r\n  currentHistoryPage: 1,\r\n  hasHistoryLoaded: false,\r\n  ledgers: {},\r\n  claimableStatuses: {},\r\n  leaderboard: {\r\n    selectedAddress: null,\r\n    loadingState: LeaderboardLoadingState.INITIAL,\r\n    filters: {\r\n      address: null,\r\n      orderBy: 'netBNB',\r\n      timePeriod: 'all',\r\n    },\r\n    skip: 0,\r\n    hasMoreResults: true,\r\n    addressResults: {},\r\n    results: [],\r\n  },\r\n}\r\n\r\n// Thunks\r\ntype PredictionInitialization = Pick<\r\n  PredictionsState,\r\n  | 'status'\r\n  | 'currentEpoch'\r\n  | 'intervalSeconds'\r\n  | 'minBetAmount'\r\n  | 'rounds'\r\n  | 'ledgers'\r\n  | 'claimableStatuses'\r\n  | 'bufferSeconds'\r\n>\r\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\r\n  'predictions/initialize',\r\n  async (account = null) => {\r\n    // Static values\r\n    const marketData = await getPredictionData()\r\n    const epochs =\r\n      marketData.currentEpoch > PAST_ROUND_COUNT\r\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\r\n        : [marketData.currentEpoch]\r\n\r\n    // Round data\r\n    const roundsResponse = await getRoundsData(epochs)\r\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\r\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\r\n\r\n      return {\r\n        ...accum,\r\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\r\n      }\r\n    }, {})\r\n\r\n    const initializedData = {\r\n      ...marketData,\r\n      rounds: initialRoundData,\r\n      ledgers: {},\r\n      claimableStatuses: {},\r\n    }\r\n\r\n    if (!account) {\r\n      return initializedData\r\n    }\r\n\r\n    // Bet data\r\n    const ledgerResponses = await getLedgerData(account, epochs)\r\n\r\n    // Claim statuses\r\n    const claimableStatuses = await getClaimStatuses(account, epochs)\r\n\r\n    return merge({}, initializedData, {\r\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\r\n      claimableStatuses,\r\n    })\r\n  },\r\n)\r\n\r\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\r\n  const predictionContract = getPredictionsContract()\r\n  const response = await predictionContract.rounds(epoch)\r\n  return serializePredictionsRoundsResponse(response)\r\n})\r\n\r\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\r\n  'predictions/fetchRounds',\r\n  async (epochs) => {\r\n    const rounds = await getRoundsData(epochs)\r\n    return rounds.reduce((accum, round) => {\r\n      if (!round) {\r\n        return accum\r\n      }\r\n\r\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\r\n\r\n      return {\r\n        ...accum,\r\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\r\n      }\r\n    }, {})\r\n  },\r\n)\r\n\r\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\r\n  const marketData = await getPredictionData()\r\n  return marketData\r\n})\r\n\r\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\r\n  'predictions/fetchLedgerData',\r\n  async ({ account, epochs }) => {\r\n    const ledgers = await getLedgerData(account, epochs)\r\n    return makeLedgerData(account, ledgers, epochs)\r\n  },\r\n)\r\n\r\nexport const fetchClaimableStatuses = createAsyncThunk<\r\n  PredictionsState['claimableStatuses'],\r\n  { account: string; epochs: number[] }\r\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\r\n  const ledgers = await getClaimStatuses(account, epochs)\r\n  return ledgers\r\n})\r\n\r\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\r\n  'predictions/fetchHistory',\r\n  async ({ account, claimed }) => {\r\n    const response = await getBetHistory({\r\n      user: account.toLowerCase(),\r\n      claimed,\r\n    })\r\n    const bets = response.map(transformBetResponse)\r\n\r\n    return { account, bets }\r\n  },\r\n)\r\n\r\nexport const fetchNodeHistory = createAsyncThunk<\r\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\r\n  { account: string; page?: number }\r\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\r\n  const userRoundsLength = await fetchUsersRoundsLength(account)\r\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\r\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\r\n\r\n  if (userRoundsLength.eq(0)) {\r\n    return emptyResult\r\n  }\r\n\r\n  if (page > maxPages) {\r\n    return emptyResult\r\n  }\r\n\r\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\r\n\r\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\r\n  const size =\r\n    maxPages === page\r\n      ? userRoundsLength\r\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\r\n          .toNumber()\r\n      : ROUNDS_PER_PAGE\r\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\r\n\r\n  if (!userRounds) {\r\n    return emptyResult\r\n  }\r\n\r\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\r\n  const roundData = await getRoundsData(epochs)\r\n  const claimableStatuses = await getClaimStatuses(account, epochs)\r\n\r\n  // Turn the data from the node into an Bet object that comes from the graph\r\n  const bets: Bet[] = roundData.reduce((accum, round) => {\r\n    const reduxRound = serializePredictionsRoundsResponse(round)\r\n    const ledger = userRounds[reduxRound.epoch]\r\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\r\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\r\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\r\n\r\n    const getRoundPosition = () => {\r\n      if (!closePrice) {\r\n        return null\r\n      }\r\n\r\n      if (round.closePrice.eq(round.lockPrice)) {\r\n        return BetPosition.HOUSE\r\n      }\r\n\r\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\r\n    }\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: null,\r\n        hash: null,\r\n        amount: parseFloat(formatUnits(ledgerAmount)),\r\n        position: ledger.position,\r\n        claimed: ledger.claimed,\r\n        claimedAt: null,\r\n        claimedHash: null,\r\n        claimedBNB: 0,\r\n        claimedNetBNB: 0,\r\n        createdAt: null,\r\n        updatedAt: null,\r\n        block: 0,\r\n        round: {\r\n          id: null,\r\n          epoch: round.epoch.toNumber(),\r\n          failed: false,\r\n          startBlock: null,\r\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\r\n          startHash: null,\r\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\r\n          lockBlock: null,\r\n          lockPrice,\r\n          lockHash: null,\r\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\r\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\r\n          closeHash: null,\r\n          closeAt: null,\r\n          closePrice,\r\n          closeBlock: null,\r\n          totalBets: 0,\r\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\r\n          bullBets: 0,\r\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\r\n          bearBets: 0,\r\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\r\n          position: getRoundPosition(),\r\n        },\r\n      },\r\n    ]\r\n  }, [])\r\n\r\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\r\n})\r\n\r\n// Leaderboard\r\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\r\n  'predictions/filterLeaderboard',\r\n  async ({ filters }) => {\r\n    const usersResponse = await getPredictionUsers({\r\n      skip: 0,\r\n      orderBy: filters.orderBy,\r\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\r\n    })\r\n\r\n    return { results: usersResponse.map(transformUserResponse) }\r\n  },\r\n)\r\n\r\nexport const fetchAddressResult = createAsyncThunk<\r\n  { account: string; data: PredictionUser },\r\n  string,\r\n  { rejectValue: string }\r\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\r\n  const userResponse = await getPredictionUser(account)\r\n\r\n  if (!userResponse) {\r\n    return rejectWithValue(account)\r\n  }\r\n\r\n  return { account, data: transformUserResponse(userResponse) }\r\n})\r\n\r\nexport const filterNextPageLeaderboard = createAsyncThunk<\r\n  { results: PredictionUser[]; skip: number },\r\n  number,\r\n  { state: State }\r\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\r\n  const state = getState()\r\n  const usersResponse = await getPredictionUsers({\r\n    skip,\r\n    orderBy: state.predictions.leaderboard.filters.orderBy,\r\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\r\n  })\r\n\r\n  return { results: usersResponse.map(transformUserResponse), skip }\r\n})\r\n\r\nexport const predictionsSlice = createSlice({\r\n  name: 'predictions',\r\n  initialState,\r\n  reducers: {\r\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\r\n      state.leaderboard.filters = {\r\n        ...state.leaderboard.filters,\r\n        ...action.payload,\r\n      }\r\n\r\n      // Anytime we filters change we need to reset back to page 1\r\n      state.leaderboard.skip = 0\r\n      state.leaderboard.hasMoreResults = true\r\n    },\r\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isHistoryPaneOpen = action.payload\r\n      state.historyFilter = HistoryFilter.ALL\r\n    },\r\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isChartPaneOpen = action.payload\r\n    },\r\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\r\n      state.historyFilter = action.payload\r\n    },\r\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\r\n      state.lastOraclePrice = action.payload\r\n    },\r\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\r\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\r\n    },\r\n    setSelectedAddress: (state, action: PayloadAction<string>) => {\r\n      state.leaderboard.selectedAddress = action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Leaderboard filter\r\n    builder.addCase(filterLeaderboard.pending, (state) => {\r\n      // Only mark as loading if we come from IDLE. This allows initialization.\r\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\r\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n      }\r\n    })\r\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\r\n      const { results } = action.payload\r\n\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.results = results\r\n\r\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\r\n        state.leaderboard.hasMoreResults = false\r\n      }\r\n\r\n      // Populate address results to reduce calls\r\n      state.leaderboard.addressResults = {\r\n        ...state.leaderboard.addressResults,\r\n        ...results.reduce((accum, result) => {\r\n          return {\r\n            ...accum,\r\n            [result.id]: result,\r\n          }\r\n        }, {}),\r\n      }\r\n    })\r\n\r\n    // Leaderboard account result\r\n    builder.addCase(fetchAddressResult.pending, (state) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n    })\r\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\r\n      const { account, data } = action.payload\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.addressResults[account] = data\r\n    })\r\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.addressResults[action.payload] = null\r\n    })\r\n\r\n    // Leaderboard next page\r\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n    })\r\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\r\n      const { results, skip } = action.payload\r\n\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\r\n      state.leaderboard.skip = skip\r\n\r\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\r\n        state.leaderboard.hasMoreResults = false\r\n      }\r\n    })\r\n\r\n    // Claimable statuses\r\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\r\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\r\n    })\r\n\r\n    // Ledger (bet) records\r\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\r\n      state.ledgers = merge({}, state.ledgers, action.payload)\r\n    })\r\n\r\n    // Get static market data\r\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\r\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\r\n\r\n      // If the round has change add a new future round\r\n      if (state.currentEpoch !== currentEpoch) {\r\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\r\n        const futureRound = makeFutureRoundResponse(\r\n          newestRound.epoch + 1,\r\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\r\n        )\r\n\r\n        state.rounds[futureRound.epoch] = futureRound\r\n      }\r\n\r\n      state.status = status\r\n      state.currentEpoch = currentEpoch\r\n      state.intervalSeconds = intervalSeconds\r\n      state.minBetAmount = minBetAmount\r\n    })\r\n\r\n    // Initialize predictions\r\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\r\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\r\n        action.payload\r\n      const futureRounds: ReduxNodeRound[] = []\r\n      const currentRound = rounds[currentEpoch]\r\n\r\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\r\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        status,\r\n        currentEpoch,\r\n        intervalSeconds,\r\n        bufferSeconds,\r\n        claimableStatuses,\r\n        ledgers,\r\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\r\n      }\r\n    })\r\n\r\n    // Get single round\r\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\r\n      state.rounds = merge({}, state.rounds, {\r\n        [action.payload.epoch.toString()]: action.payload,\r\n      })\r\n    })\r\n\r\n    // Get multiple rounds\r\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\r\n      state.rounds = merge({}, state.rounds, action.payload)\r\n    })\r\n\r\n    // Show History\r\n    builder.addCase(fetchHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n    })\r\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\r\n      const { account, bets } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.history[account] = merge([], state.history[account] ?? [], bets)\r\n    })\r\n\r\n    // History from the node\r\n    builder.addCase(fetchNodeHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n    })\r\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\r\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.history = page === 1 ? bets : [...state.history, ...bets]\r\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\r\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\r\n      state.totalHistory = totalHistory\r\n      state.currentHistoryPage = page\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const {\r\n  setChartPaneState,\r\n  setHistoryFilter,\r\n  setHistoryPaneState,\r\n  setLastOraclePrice,\r\n  markAsCollected,\r\n  setLeaderboardFilter,\r\n  setSelectedAddress,\r\n} = predictionsSlice.actions\r\n\r\nexport default predictionsSlice.reducer\r\n","import { ChainId, Currency, currencyEquals, JSBI, Price } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport tokens, { mainnetTokens } from 'config/constants/tokens'\r\nimport { PairState, usePairs } from './usePairs'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst BUSD_MAINNET = mainnetTokens.busd\r\nconst { wbnb: WBNB } = tokens\r\n\r\n/**\r\n * Returns the price in BUSD of the input currency\r\n * @param currency currency to compute the BUSD price of\r\n */\r\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const wrapped = wrappedCurrency(currency, chainId)\r\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\r\n    () => [\r\n      [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\r\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n      [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n    ],\r\n    [chainId, currency, wrapped],\r\n  )\r\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\r\n\r\n  return useMemo(() => {\r\n    if (!currency || !wrapped || !chainId) {\r\n      return undefined\r\n    }\r\n    // handle weth/eth\r\n    if (wrapped.equals(WBNB)) {\r\n      if (busdPair) {\r\n        const price = busdPair.priceOf(WBNB)\r\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\r\n      }\r\n      return undefined\r\n    }\r\n    // handle busd\r\n    if (wrapped.equals(BUSD_MAINNET)) {\r\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\r\n    }\r\n\r\n    const ethPairETHAmount = ethPair?.reserveOf(WBNB)\r\n    const ethPairETHBUSDValue: JSBI =\r\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\r\n\r\n    // all other tokens\r\n    // first try the busd pair\r\n    if (\r\n      busdPairState === PairState.EXISTS &&\r\n      busdPair &&\r\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\r\n    ) {\r\n      const price = busdPair.priceOf(wrapped)\r\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\r\n    }\r\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\r\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\r\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\r\n        const currencyEthPrice = ethPair.priceOf(WBNB)\r\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\r\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\r\n      }\r\n    }\r\n\r\n    return undefined\r\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\r\n}\r\n\r\nexport const useCakeBusdPrice = (): Price | undefined => {\r\n  const cakeBusdPrice = useBUSDPrice(tokens.zlt)\r\n  return cakeBusdPrice\r\n}\r\n\r\nexport const useBNBBusdPrice = (): Price | undefined => {\r\n  const bnbBusdPrice = useBUSDPrice(tokens.wbnb)\r\n  return bnbBusdPrice\r\n}\r\n","import numeral from 'numeral'\r\n\r\n// Returns first 2 digits after first non-zero decimal\r\n// i.e. 0.001286 -> 0.0012, 0.9845 -> 0.98, 0.0102 -> 0.010, etc\r\n// Intended to be used for tokens whose value is less than $1\r\n// https://stackoverflow.com/a/23887837\r\nexport const getFirstThreeNonZeroDecimals = (value: number) => {\r\n  return value.toFixed(9).match(/^-?\\d*\\.?0*\\d{0,2}/)[0]\r\n}\r\n\r\nexport type formatAmountNotation = 'compact' | 'standard'\r\n\r\n/**\r\n * This function is used to format token prices, liquidity, amount of tokens in TX, and in general any numbers on info section\r\n * @param amount - amount to be formatted\r\n * @param notation - whether to show 1M or 1,000,000\r\n * @param displayThreshold - threshold below which it will return simply <displayThreshold instead of actual value, e.g. if 0.001 -> returns <0.001 for 0.0005\r\n * @param tokenPrecision - set to true when you want precision to be 3 decimals for values < 1 and 2 decimals for values > 1\r\n * @param isInteger - if true the values will contain decimal part only if the amount is > 1000\r\n * @returns formatted string ready to be displayed\r\n */\r\nexport const formatAmount = (\r\n  amount: number | undefined,\r\n  options?: {\r\n    notation?: formatAmountNotation\r\n    displayThreshold?: number\r\n    tokenPrecision?: boolean\r\n    isInteger?: boolean\r\n  },\r\n) => {\r\n  const { notation = 'compact', displayThreshold, tokenPrecision, isInteger } = options || { notation: 'compact' }\r\n  if (amount === 0) {\r\n    if (isInteger) {\r\n      return '0'\r\n    }\r\n    return '0.00'\r\n  }\r\n  if (!amount) return '-'\r\n  if (displayThreshold && amount < displayThreshold) {\r\n    return `<${displayThreshold}`\r\n  }\r\n  if (amount < 1 && !tokenPrecision) {\r\n    return getFirstThreeNonZeroDecimals(amount)\r\n  }\r\n\r\n  let precision = 2\r\n  if (tokenPrecision) {\r\n    precision = amount < 1 ? 3 : 2\r\n  }\r\n\r\n  let format = `0.${'0'.repeat(precision)}a`\r\n\r\n  if (notation === 'standard') {\r\n    format = `0,0.${'0'.repeat(precision)}`\r\n  }\r\n\r\n  if (isInteger && amount < 1000) {\r\n    format = '0'\r\n  }\r\n\r\n  const amountWithPrecision = parseFloat(amount.toFixed(precision))\r\n\r\n  // toUpperCase is needed cause numeral doesn't have support for capital K M B out of the box\r\n  return numeral(amountWithPrecision).format(format).toUpperCase()\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap/uikit'\r\nimport Page from '../Layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport Container from '../Layout/Container'\r\nimport { PageHeaderProps } from './types'\r\n\r\nconst Outer = styled(Box)<{ background?: string }>`\r\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Inner = styled(Container)`\r\n  padding-top: 32px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\r\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\r\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\r\nimport getLotteriesData from './getLotteriesData'\r\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\r\n\r\ninterface PublicLotteryData {\r\n  currentLotteryId: string\r\n  maxNumberTicketsPerBuyOrClaim: string\r\n}\r\n\r\nconst initialState: LotteryState = {\r\n  currentLotteryId: null,\r\n  isTransitioning: false,\r\n  maxNumberTicketsPerBuyOrClaim: null,\r\n  currentRound: {\r\n    isLoading: true,\r\n    lotteryId: null,\r\n    status: LotteryStatus.PENDING,\r\n    startTime: '',\r\n    endTime: '',\r\n    priceTicketInCake: '',\r\n    discountDivisor: '',\r\n    treasuryFee: '',\r\n    firstTicketId: '',\r\n    lastTicketId: '',\r\n    amountCollectedInCake: '',\r\n    finalNumber: null,\r\n    cakePerBracket: [],\r\n    countWinnersPerBracket: [],\r\n    rewardsBreakdown: [],\r\n    userTickets: {\r\n      isLoading: true,\r\n      tickets: [],\r\n    },\r\n  },\r\n  lotteriesData: null,\r\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\r\n}\r\n\r\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\r\n  'lottery/fetchCurrentLottery',\r\n  async ({ currentLotteryId }) => {\r\n    const lotteryInfo = await fetchLottery(currentLotteryId)\r\n    return lotteryInfo\r\n  },\r\n)\r\n\r\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\r\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\r\n  return currentIdAndMaxBuy\r\n})\r\n\r\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\r\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\r\n  { account: string; currentLotteryId: string }\r\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\r\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\r\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\r\n  const userTickets = userParticipationInCurrentRound?.tickets\r\n\r\n  // User has not bought tickets for the current lottery, or there has been an error\r\n  if (!userTickets || userTickets.length === 0) {\r\n    return { userTickets: null, userLotteries: userLotteriesRes }\r\n  }\r\n\r\n  return { userTickets, userLotteries: userLotteriesRes }\r\n})\r\n\r\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\r\n  'lottery/fetchPublicLotteries',\r\n  async ({ currentLotteryId }) => {\r\n    const lotteries = await getLotteriesData(currentLotteryId)\r\n    return lotteries\r\n  },\r\n)\r\n\r\nexport const fetchUserLotteries = createAsyncThunk<\r\n  LotteryUserGraphEntity,\r\n  { account: string; currentLotteryId: string }\r\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\r\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\r\n  return userLotteries\r\n})\r\n\r\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\r\n  LotteryUserGraphEntity,\r\n  { account: string; skip?: number }\r\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\r\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\r\n  return additionalUserLotteries\r\n})\r\n\r\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\r\n  `lottery/setIsTransitioning`,\r\n  async ({ isTransitioning }) => {\r\n    return { isTransitioning }\r\n  },\r\n)\r\n\r\nexport const LotterySlice = createSlice({\r\n  name: 'Lottery',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\r\n      state.currentRound = { ...state.currentRound, ...action.payload }\r\n    })\r\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\r\n      state.currentLotteryId = action.payload.currentLotteryId\r\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\r\n    })\r\n    builder.addCase(\r\n      fetchUserTicketsAndLotteries.fulfilled,\r\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\r\n        state.currentRound.userTickets.isLoading = false\r\n        state.currentRound.userTickets.tickets = action.payload.userTickets\r\n        state.userLotteryData = action.payload.userLotteries\r\n      },\r\n    )\r\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\r\n      state.lotteriesData = action.payload\r\n    })\r\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\r\n      state.userLotteryData = action.payload\r\n    })\r\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\r\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\r\n      state.userLotteryData.rounds = mergedRounds\r\n    })\r\n    builder.addCase(\r\n      setLotteryIsTransitioning.fulfilled,\r\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\r\n        state.isTransitioning = action.payload.isTransitioning\r\n      },\r\n    )\r\n  },\r\n})\r\n\r\nexport default LotterySlice.reducer\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = Math.abs(seconds)\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import { gql } from 'graphql-request'\r\nimport { useState, useEffect } from 'react'\r\nimport { multiQuery } from 'views/Info/utils/infoQueryHelpers'\r\nimport { BLOCKS_CLIENT } from 'config/constants/endpoints'\r\nimport { Block } from 'state/info/types'\r\n\r\nconst getBlockSubqueries = (timestamps: number[]) =>\r\n  timestamps.map((timestamp) => {\r\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\r\n      timestamp + 600\r\n    } }) {\r\n      number\r\n    }`\r\n  })\r\n\r\nconst blocksQueryConstructor = (subqueries: string[]) => {\r\n  return gql`query blocks {\r\n    ${subqueries}\r\n  }`\r\n}\r\n\r\n/**\r\n * @notice Fetches block objects for an array of timestamps.\r\n * @param {Array} timestamps\r\n */\r\nexport const getBlocksFromTimestamps = async (\r\n  timestamps: number[],\r\n  sortDirection: 'asc' | 'desc' = 'desc',\r\n  skipCount = 500,\r\n): Promise<Block[]> => {\r\n  if (timestamps?.length === 0) {\r\n    return []\r\n  }\r\n\r\n  const fetchedData: any = await multiQuery(\r\n    blocksQueryConstructor,\r\n    getBlockSubqueries(timestamps),\r\n    BLOCKS_CLIENT,\r\n    skipCount,\r\n  )\r\n\r\n  const sortingFunction =\r\n    sortDirection === 'desc' ? (a: Block, b: Block) => b.number - a.number : (a: Block, b: Block) => a.number - b.number\r\n\r\n  const blocks: Block[] = []\r\n  if (fetchedData) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const key of Object.keys(fetchedData)) {\r\n      if (fetchedData[key].length > 0) {\r\n        blocks.push({\r\n          timestamp: key.split('t')[1],\r\n          number: parseInt(fetchedData[key][0].number, 10),\r\n        })\r\n      }\r\n    }\r\n    // graphql-request does not guarantee same ordering of batched requests subqueries, hence manual sorting\r\n    blocks.sort(sortingFunction)\r\n  }\r\n  return blocks\r\n}\r\n\r\n/**\r\n * for a given array of timestamps, returns block entities\r\n * @param timestamps\r\n * @param sortDirection\r\n * @param skipCount\r\n */\r\nexport const useBlocksFromTimestamps = (\r\n  timestamps: number[],\r\n  sortDirection: 'asc' | 'desc' = 'desc',\r\n  skipCount = 1000,\r\n): {\r\n  blocks?: Block[]\r\n  error: boolean\r\n} => {\r\n  const [blocks, setBlocks] = useState<Block[]>()\r\n  const [error, setError] = useState(false)\r\n\r\n  const timestampsString = JSON.stringify(timestamps)\r\n  const blocksString = blocks ? JSON.stringify(blocks) : undefined\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const timestampsArray = JSON.parse(timestampsString)\r\n      const result = await getBlocksFromTimestamps(timestampsArray, sortDirection, skipCount)\r\n      if (result.length === 0) {\r\n        setError(true)\r\n      } else {\r\n        setBlocks(result)\r\n      }\r\n    }\r\n    const blocksArray = blocksString ? JSON.parse(blocksString) : undefined\r\n    if (!blocksArray && !error) {\r\n      fetchData()\r\n    }\r\n  }, [blocksString, error, skipCount, sortDirection, timestampsString])\r\n\r\n  return {\r\n    blocks,\r\n    error,\r\n  }\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\nconst useIntersectionObserver = () => {\r\n  const observerRef = useRef<HTMLDivElement>(null)\r\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const [isIntersecting, setIsIntersecting] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\r\n      setIsIntersecting(entry.isIntersecting)\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      intersectionObserverRef.current.observe(observerRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n\r\n    return () => {\r\n      if (intersectionObserverRef.current && observerIsSet) {\r\n        intersectionObserverRef.current.disconnect()\r\n      }\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  return { observerRef, isIntersecting }\r\n}\r\n\r\nexport default useIntersectionObserver\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n  user-select: none;\r\n  z-index: 20;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps extends BoxProps {\r\n  options: OptionProps[]\r\n  onOptionChange?: (option: OptionProps) => void\r\n  defaultOptionIndex?: number\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({\r\n  options,\r\n  onOptionChange,\r\n  defaultOptionIndex = 0,\r\n  ...props\r\n}) => {\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\r\n\r\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    setIsOpen(!isOpen)\r\n    event.stopPropagation()\r\n  }\r\n\r\n  const onOptionClicked = (selectedIndex: number) => () => {\r\n    setSelectedOptionIndex(selectedIndex)\r\n    setIsOpen(false)\r\n\r\n    if (onOptionChange) {\r\n      onOptionChange(options[selectedIndex])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = () => {\r\n      setIsOpen(false)\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} {...props}>\r\n      <DropDownHeader onClick={toggling}>\r\n        <Text>{options[selectedOptionIndex].label}</Text>\r\n      </DropDownHeader>\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option, index) =>\r\n            index !== selectedOptionIndex ? (\r\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React, { useState } from 'react'\r\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Card,\r\n  CardBody,\r\n  Flex,\r\n  CardProps,\r\n  AddIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport useTotalSupply from '../../hooks/useTotalSupply'\r\n\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\r\n\r\nimport { LightCard } from '../Card'\r\nimport { AutoColumn } from '../Layout/Column'\r\nimport CurrencyLogo from '../Logo/CurrencyLogo'\r\nimport { DoubleCurrencyLogo } from '../Logo'\r\nimport { RowBetween, RowFixed } from '../Layout/Row'\r\nimport { BIG_INT_ZERO } from '../../config/constants'\r\nimport Dots from '../Loader/Dots'\r\n\r\nconst FixedHeightRow = styled(RowBetween)`\r\n  height: 24px;\r\n`\r\n\r\ninterface PositionCardProps extends CardProps {\r\n  pair: Pair\r\n  showUnwrapped?: boolean\r\n}\r\n\r\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\r\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <>\r\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\r\n        <Card>\r\n          <CardBody>\r\n            <AutoColumn gap=\"16px\">\r\n              <FixedHeightRow>\r\n                <RowFixed>\r\n                  <Text color=\"secondary\" bold>\r\n                    {t('LP tokens in your wallet')}\r\n                  </Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n                  <Text small color=\"textSubtle\">\r\n                    {currency0.symbol}-{currency1.symbol} LP\r\n                  </Text>\r\n                </RowFixed>\r\n                <RowFixed>\r\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <AutoColumn gap=\"4px\">\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Share of Pool')}:\r\n                  </Text>\r\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\r\n                  </Text>\r\n                  {token0Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\r\n                  </Text>\r\n                  {token1Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n              </AutoColumn>\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </Card>\r\n      ) : (\r\n        <LightCard>\r\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\r\n            <span role=\"img\" aria-label=\"pancake-icon\">\r\n              🥞\r\n            </span>{' '}\r\n            {t(\r\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\r\n            )}\r\n          </Text>\r\n        </LightCard>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = unwrappedToken(pair.token0)\r\n  const currency1 = unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <Card style={{ borderRadius: '12px' }} {...props}>\r\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\r\n        <Flex flexDirection=\"column\">\r\n          <Flex alignItems=\"center\" mb=\"4px\">\r\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\r\n            <Text bold ml=\"8px\">\r\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\r\n            </Text>\r\n          </Flex>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {userPoolBalance?.toSignificant(4)}\r\n          </Text>\r\n        </Flex>\r\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n      </Flex>\r\n\r\n      {showMore && (\r\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"20px\" currency={currency0} />\r\n              <Text color=\"textSubtle\" ml=\"4px\">\r\n                Pooled {currency0.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            {token0Deposited ? (\r\n              <RowFixed>\r\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n              </RowFixed>\r\n            ) : (\r\n              '-'\r\n            )}\r\n          </FixedHeightRow>\r\n\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"20px\" currency={currency1} />\r\n              <Text color=\"textSubtle\" ml=\"4px\">\r\n                Pooled {currency1.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            {token1Deposited ? (\r\n              <RowFixed>\r\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n              </RowFixed>\r\n            ) : (\r\n              '-'\r\n            )}\r\n          </FixedHeightRow>\r\n\r\n          <FixedHeightRow>\r\n            <Text color=\"textSubtle\">Share of pool</Text>\r\n            <Text>\r\n              {poolTokenPercentage\r\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\r\n                : '-'}\r\n            </Text>\r\n          </FixedHeightRow>\r\n\r\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\r\n            <Flex flexDirection=\"column\">\r\n              <Button\r\n                as={Link}\r\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                variant=\"primary\"\r\n                width=\"100%\"\r\n                mb=\"8px\"\r\n              >\r\n                Remove\r\n              </Button>\r\n              <Button\r\n                as={Link}\r\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                variant=\"text\"\r\n                startIcon={<AddIcon color=\"primary\" />}\r\n                width=\"100%\"\r\n              >\r\n                Add liquidity instead\r\n              </Button>\r\n            </Flex>\r\n          )}\r\n        </AutoColumn>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nconst LineChartLoaderSVG: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg width=\"100%\" height=\"100%\" preserveAspectRatio=\"none\" viewBox=\"0 0 100 50\" {...props}>\r\n      <path\r\n        d=\"M 0 49 C 1 49 1 45 4 47 C 7 49 7 35 11 37 C 13 38 14 32 16 34 C 18 35.6667 20 40 22 39 C 24 38 24 34 26 34 C 27 34 29 39 32 36 C 33 35 34 32 35 32 C 37 32 37 35 39 34 C 40 33 39 29 43 31 C 46 32 45 28 47 30 C 50 32 49 22 51 24 Q 53 26 55 24 C 56 23 56 25 57 26 C 58 27 59 28 60 28 C 63 28 66 17 67 16 C 68 15 69 17 70 16 C 71 15 71 13 74 13 C 76 13 76 14 77 15 C 79 17 80 18 82 18 C 83 18 83 17 84 17 C 87 17 89 24 91 24 C 93 24 95 20 96 17 C 97.6667 13.3333 98 9 101 6\"\r\n        stroke=\"#7645D9\"\r\n        strokeWidth=\"0.2\"\r\n        strokeDasharray=\"156\"\r\n        strokeDashoffset=\"156\"\r\n        fill=\"transparent\"\r\n        opacity=\"0.5\"\r\n        filter=\"url(#glow)\"\r\n      >\r\n        <animate\r\n          id=\"firstline\"\r\n          attributeName=\"stroke-dashoffset\"\r\n          dur=\"2s\"\r\n          from=\"156\"\r\n          to=\"-156\"\r\n          begin=\"0s;firstline.end+0.5s\"\r\n        />\r\n      </path>\r\n      <path\r\n        d=\"M 0 49 C 1 49 1 45 4 47 C 7 49 7 35 11 37 C 13 38 14 32 16 34 C 18 35.6667 20 40 22 39 C 24 38 24 34 26 34 C 27 34 29 39 32 36 C 33 35 34 32 35 32 C 37 32 37 35 39 34 C 40 33 39 29 43 31 C 46 32 45 28 47 30 C 50 32 49 22 51 24 Q 53 26 55 24 C 56 23 56 25 57 26 C 58 27 59 28 60 28 C 63 28 66 17 67 16 C 68 15 69 17 70 16 C 71 15 71 13 74 13 C 76 13 76 14 77 15 C 79 17 80 18 82 18 C 83 18 83 17 84 17 C 87 17 89 24 91 24 C 93 24 95 20 96 17 C 97.6667 13.3333 98 9 101 6\"\r\n        stroke=\"#7645D9\"\r\n        strokeWidth=\"0.2\"\r\n        strokeDasharray=\"156\"\r\n        strokeDashoffset=\"156\"\r\n        fill=\"transparent\"\r\n        opacity=\"0.5\"\r\n        filter=\"url(#glow)\"\r\n      >\r\n        <animate\r\n          id=\"secondline\"\r\n          attributeName=\"stroke-dashoffset\"\r\n          dur=\"2s\"\r\n          from=\"156\"\r\n          to=\"-156\"\r\n          begin=\"1.3s;secondline.end+0.5s\"\r\n        />\r\n      </path>\r\n      <defs>\r\n        <filter id=\"glow\">\r\n          <feGaussianBlur className=\"blur\" result=\"coloredBlur\" stdDeviation=\"4\" />\r\n          <feMerge>\r\n            <feMergeNode in=\"coloredBlur\" />\r\n            <feMergeNode in=\"coloredBlur\" />\r\n            <feMergeNode in=\"coloredBlur\" />\r\n            <feMergeNode in=\"SourceGraphic\" />\r\n          </feMerge>\r\n        </filter>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport default LineChartLoaderSVG\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nconst BarChartLoaderSVG: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 50 25\" preserveAspectRatio=\"none\" opacity=\"0.1\" {...props}>\r\n      <rect width=\"8%\" fill=\"#1FC7D4\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"0.9s\"\r\n          values=\"15%; 90%; 15%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.9s\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"0.9s\"\r\n          values=\"85%; 10%; 85%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.9s\"\r\n        />\r\n      </rect>\r\n      <rect x=\"10.222%\" width=\"8%\" fill=\"#1FC7D4\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"0.9s\"\r\n          values=\"15%; 90%; 15%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.8s\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"0.9s\"\r\n          values=\"85%; 10%; 85%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.8s\"\r\n        />\r\n      </rect>\r\n      <rect x=\"20.444%\" width=\"8%\" fill=\"#1FC7D4\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"0.9s\"\r\n          values=\"15%; 90%; 15%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.7s\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"0.9s\"\r\n          values=\"85%; 10%; 85%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.7s\"\r\n        />\r\n      </rect>\r\n      <rect x=\"30.666%\" width=\"8%\" fill=\"#1FC7D4\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"0.9s\"\r\n          values=\"15%; 90%; 15%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.6s\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"0.9s\"\r\n          values=\"85%; 10%; 85%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.6s\"\r\n        />\r\n      </rect>\r\n      <rect x=\"40.888%\" width=\"8%\" fill=\"#1FC7D4\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"0.9s\"\r\n          values=\"15%; 90%; 15%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.5s\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"0.9s\"\r\n          values=\"85%; 10%; 85%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.5s\"\r\n        />\r\n      </rect>\r\n      <rect x=\"51.11%\" width=\"8%\" fill=\"#1FC7D4\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"0.9s\"\r\n          values=\"15%; 90%; 15%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.4s\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"0.9s\"\r\n          values=\"85%; 10%; 85%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.4s\"\r\n        />\r\n      </rect>\r\n      <rect x=\"61.332%\" width=\"8%\" fill=\"#1FC7D4\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"0.9s\"\r\n          values=\"15%; 90%; 15%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.3s\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"0.9s\"\r\n          values=\"85%; 10%; 85%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.3s\"\r\n        />\r\n      </rect>\r\n      <rect x=\"71.554%\" width=\"8%\" fill=\"#1FC7D4\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"0.9s\"\r\n          values=\"15%; 90%; 15%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.2s\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"0.9s\"\r\n          values=\"85%; 10%; 85%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.2s\"\r\n        />\r\n      </rect>\r\n      <rect x=\"81.776%\" width=\"8%\" fill=\"#1FC7D4\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"0.9s\"\r\n          values=\"15%; 90%; 15%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.1s\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"0.9s\"\r\n          values=\"85%; 10%; 85%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n          begin=\"-0.1s\"\r\n        />\r\n      </rect>\r\n      <rect x=\"91.998%\" width=\"8%\" fill=\"#1FC7D4\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"0.9s\"\r\n          values=\"15%; 90%; 15%\"\r\n          keyTimes=\"0; 0.55; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate attributeName=\"y\" dur=\"0.9s\" values=\"85%; 10%; 85%\" keyTimes=\"0; 0.55; 1\" repeatCount=\"indefinite\" />\r\n      </rect>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport default BarChartLoaderSVG\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nconst CandleChartLoaderSVG: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 50\" opacity=\"0.1\" {...props}>\r\n      <rect width=\"5%\" fill=\"#31D0AA\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"2s\"\r\n          values=\"0%; 40%; 40%; 10%; 10%\"\r\n          keyTimes=\"0; 0.125; 0.5; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"2s\"\r\n          from=\"50%\"\r\n          to=\"30%\"\r\n          values=\"30%; 10%; 10%; 25%; 25%\"\r\n          keyTimes=\"0; 0.125; 0.5; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"rx\"\r\n          dur=\"2s\"\r\n          values=\"0%; 0%; 100%; 100%;\"\r\n          keyTimes=\"0; 0.6; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"x\"\r\n          dur=\"2s\"\r\n          values=\"32.5%; 32.5%; 47.5%; 47.5%;\"\r\n          keyTimes=\"0; 0.7; 0.8; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"opacity\"\r\n          dur=\"2s\"\r\n          values=\"1; 1; 0; 0;\"\r\n          keyTimes=\"0; 0.75; 0.9; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </rect>\r\n      <rect width=\"5%\" fill=\"#31D0AA\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"2s\"\r\n          values=\"0%; 0%; 20%; 20%; 10%; 10%\"\r\n          keyTimes=\"0; 0.125; 0.25; 0.5; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"2s\"\r\n          values=\"15%; 15%; 5%; 5%; 25%; 25%\"\r\n          keyTimes=\"0; 0.125; 0.25; 0.5; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"rx\"\r\n          dur=\"2s\"\r\n          values=\"0%; 0%; 100%; 100%;\"\r\n          keyTimes=\"0; 0.6; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"x\"\r\n          dur=\"2s\"\r\n          values=\"42.5%; 42.5%; 47.5%; 47.5%;\"\r\n          keyTimes=\"0; 0.7; 0.8; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"opacity\"\r\n          dur=\"2s\"\r\n          values=\"1; 1; 0; 0;\"\r\n          keyTimes=\"0; 0.75; 0.9; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </rect>\r\n      <rect width=\"5%\" fill=\"#ED4B9E\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"2s\"\r\n          values=\"0%; 0%; 35%; 35%; 10%; 10%\"\r\n          keyTimes=\"0; 0.25; 0.375; 0.5; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"2s\"\r\n          values=\"25%; 25%; 10%; 10%; 25%; 25%\"\r\n          keyTimes=\"0; 0.25; 0.375; 0.5; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"rx\"\r\n          dur=\"2s\"\r\n          values=\"0%; 0%; 100%; 100%;\"\r\n          keyTimes=\"0; 0.6; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"x\"\r\n          dur=\"2s\"\r\n          values=\"52.5%; 52.5%; 47.5%; 47.5%;\"\r\n          keyTimes=\"0; 0.7; 0.8; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"opacity\"\r\n          dur=\"2s\"\r\n          values=\"1; 1; 0; 0;\"\r\n          keyTimes=\"0; 0.75; 0.9; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </rect>\r\n      <rect width=\"5%\" fill=\"#31D0AA\">\r\n        <animate\r\n          attributeName=\"height\"\r\n          dur=\"2s\"\r\n          values=\"0%; 0%; 35%; 35%; 10%; 10%\"\r\n          keyTimes=\"0; 0.375; 0.5; 0.5; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          dur=\"2s\"\r\n          values=\"15%; 15%; 0%; 0%; 25%; 25%\"\r\n          keyTimes=\"0; 0.375; 0.5; 0.5; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"rx\"\r\n          dur=\"2s\"\r\n          values=\"0%; 0%; 100%; 100%;\"\r\n          keyTimes=\"0; 0.6; 0.625; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"x\"\r\n          dur=\"2s\"\r\n          values=\"62.5%; 62.5%; 47.5%; 47.5%;\"\r\n          keyTimes=\"0; 0.7; 0.8; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"opacity\"\r\n          dur=\"2s\"\r\n          values=\"1; 1; 0; 0;\"\r\n          keyTimes=\"0; 0.75; 0.9; 1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </rect>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport default CandleChartLoaderSVG\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport LineChartLoaderSVG from './LineChartLoaderSVG'\r\nimport BarChartLoaderSVG from './BarChartLoaderSVG'\r\nimport CandleChartLoaderSVG from './CandleChartLoaderSVG'\r\n\r\nconst LoadingText = styled(Box)`\r\n  position: absolute;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  top: 50%;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: center;\r\n`\r\n\r\nconst LoadingIndicator = styled(Box)`\r\n  height: 100%;\r\n  position: relative;\r\n`\r\n\r\nexport const BarChartLoader: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <LoadingIndicator>\r\n      <BarChartLoaderSVG />\r\n      <LoadingText>\r\n        <Text color=\"textSubtle\" fontSize=\"20px\">\r\n          {t('Loading chart data...')}\r\n        </Text>\r\n      </LoadingText>\r\n    </LoadingIndicator>\r\n  )\r\n}\r\n\r\nexport const LineChartLoader: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <LoadingIndicator>\r\n      <LineChartLoaderSVG />\r\n      <LoadingText>\r\n        <Text color=\"textSubtle\" fontSize=\"20px\">\r\n          {t('Loading chart data...')}\r\n        </Text>\r\n      </LoadingText>\r\n    </LoadingIndicator>\r\n  )\r\n}\r\n\r\nexport const CandleChartLoader: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <LoadingIndicator>\r\n      <CandleChartLoaderSVG />\r\n      <LoadingText>\r\n        <Text color=\"textSubtle\" fontSize=\"20px\">\r\n          {t('Loading chart data...')}\r\n        </Text>\r\n      </LoadingText>\r\n    </LoadingIndicator>\r\n  )\r\n}\r\n","import request, { gql } from 'graphql-request'\r\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n\r\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\r\n  const response: { proposals: Proposal[] } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\r\n        proposals(\r\n          first: $first\r\n          skip: $skip\r\n          orderBy: \"end\"\r\n          orderDirection: desc\r\n          where: { space_in: \"cake.eth\", state: $state }\r\n        ) {\r\n          id\r\n          title\r\n          body\r\n          choices\r\n          start\r\n          end\r\n          snapshot\r\n          state\r\n          author\r\n          space {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { first, skip, state },\r\n  )\r\n  return response.proposals\r\n}\r\n\r\nexport const getProposal = async (id: string): Promise<Proposal> => {\r\n  const response: { proposal: Proposal } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getProposal($id: String) {\r\n        proposal(id: $id) {\r\n          id\r\n          title\r\n          body\r\n          choices\r\n          start\r\n          end\r\n          snapshot\r\n          state\r\n          author\r\n          space {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { id },\r\n  )\r\n  return response.proposal\r\n}\r\n\r\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\r\n  const response: { votes: Vote[] } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\r\n        votes(first: $first, skip: $skip, where: $where) {\r\n          id\r\n          voter\r\n          created\r\n          choice\r\n          space {\r\n            id\r\n            name\r\n          }\r\n          proposal {\r\n            choices\r\n          }\r\n          metadata\r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.votes\r\n}\r\n\r\nexport const getVoteVerificationStatuses = async (\r\n  votes: Vote[],\r\n  block?: number,\r\n): Promise<{ [key: string]: boolean }> => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n\r\n  const votesToVerify = votes.map((vote) => ({\r\n    address: vote.voter,\r\n    verificationHash: vote.metadata?.verificationHash,\r\n    total: vote.metadata?.votingPower,\r\n  }))\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      block: blockNumber,\r\n      votes: votesToVerify,\r\n    }),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return votes.reduce((accum, vote) => {\r\n    return {\r\n      ...accum,\r\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\r\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  return new Promise((resolve, reject) => {\r\n    let votes: Vote[] = []\r\n\r\n    const fetchVoteChunk = async (newSkip: number) => {\r\n      try {\r\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\r\n\r\n        if (voteChunk.length === 0) {\r\n          resolve(votes)\r\n        } else {\r\n          votes = [...votes, ...voteChunk]\r\n          fetchVoteChunk(newSkip + votesPerChunk)\r\n        }\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n\r\n    fetchVoteChunk(0)\r\n  })\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { merge } from 'lodash'\r\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\r\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\r\n\r\nconst initialState: VotingState = {\r\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\r\n  proposals: {},\r\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\r\n  votes: {},\r\n}\r\n\r\n// Thunks\r\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\r\n  'voting/fetchProposals',\r\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\r\n    const response = await getProposals(first, skip, state)\r\n    return response\r\n  },\r\n)\r\n\r\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\r\n  const response = await getProposal(proposalId)\r\n  return response\r\n})\r\n\r\nexport const fetchVotes = createAsyncThunk<\r\n  { votes: Vote[]; proposalId: string },\r\n  { proposalId: string; block?: number }\r\n>('voting/fetchVotes', async ({ proposalId, block }) => {\r\n  const response = await getAllVotes(proposalId, block)\r\n  return { votes: response, proposalId }\r\n})\r\n\r\nexport const verifyVotes = createAsyncThunk<\r\n  { results: { [key: string]: boolean }; proposalId: string },\r\n  { proposalId: string; snapshot?: string },\r\n  { state: State }\r\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\r\n  const state = getState()\r\n  const proposalVotes = state.voting.votes[proposalId]\r\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\r\n  return { results: response, proposalId }\r\n})\r\n\r\nexport const votingSlice = createSlice({\r\n  name: 'voting',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    // Verify Votes\r\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\r\n      const { proposalId, results } = action.payload\r\n\r\n      if (state.votes[proposalId]) {\r\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\r\n          return {\r\n            ...vote,\r\n            _inValid: results[vote.id] === false,\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    // Fetch Proposals\r\n    builder.addCase(fetchProposals.pending, (state) => {\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\r\n      const proposals = action.payload.reduce((accum, proposal) => {\r\n        return {\r\n          ...accum,\r\n          [proposal.id]: proposal,\r\n        }\r\n      }, {})\r\n\r\n      state.proposals = merge({}, state.proposals, proposals)\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n\r\n    // Fetch Proposal\r\n    builder.addCase(fetchProposal.pending, (state) => {\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\r\n      state.proposals[action.payload.id] = action.payload\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n\r\n    // Fetch Votes\r\n    builder.addCase(fetchVotes.pending, (state) => {\r\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\r\n      const { votes, proposalId } = action.payload\r\n\r\n      state.votes = {\r\n        ...state.votes,\r\n        [proposalId]: votes,\r\n      }\r\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n  },\r\n})\r\n\r\nexport default votingSlice.reducer\r\n","import BigNumber from 'bignumber.js'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\r\nimport lpAprs from 'config/constants/lpAprs.json'\r\n\r\n/**\r\n * Get the APR value in %\r\n * @param stakingTokenPrice Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of stakingToken in the pool\r\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\r\n * @returns Null if the APR is NaN or infinite.\r\n */\r\nexport const getPoolApr = (\r\n  stakingTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  rate: number,\r\n  totalStaked: number,\r\n  tokenPerBlock: number,\r\n): number => {\r\n  const bnRate = new BigNumber(rate)\r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR).times(bnRate)\r\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\r\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\n/**\r\n * Get farm APR value in %\r\n * @param poolWeight allocationPoint / totalAllocationPoint\r\n * @param cakePriceUsd Cake price in USD\r\n * @param poolLiquidityUsd Total pool liquidity in USD\r\n * @param farmAddress Farm Address\r\n * @returns Farm Apr\r\n */\r\nexport const getFarmApr = (\r\n  poolWeight: BigNumber,\r\n  cakePriceUsd: BigNumber,\r\n  poolLiquidityUsd: BigNumber,\r\n  farmAddress: string,\r\n  tokenPerBlock: BigNumber\r\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\r\n  const TokenPerYear = tokenPerBlock.times(BLOCKS_PER_YEAR)\r\n  const yearlyCakeRewardAllocation = poolWeight ? poolWeight.times(TokenPerYear) : new BigNumber(NaN)\r\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\r\n  let cakeRewardsAprAsNumber = null\r\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\r\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\r\n  }\r\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\r\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\r\n}\r\n\r\nexport default null\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { AchievementState, Achievement, AchievementFetchStatus } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  achievements: [],\r\n  achievementFetchStatus: AchievementFetchStatus.NOT_FETCHED,\r\n}\r\n\r\nexport const fetchAchievements = createAsyncThunk<Achievement[], string>(\r\n  'achievements/fetchAchievements',\r\n  async (account) => {\r\n    const achievements = await getAchievements(account)\r\n    return achievements\r\n  },\r\n)\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.achievements.push(action.payload)\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchAchievements.pending, (state) => {\r\n      state.achievementFetchStatus = AchievementFetchStatus.FETCHING\r\n    })\r\n    builder.addCase(fetchAchievements.fulfilled, (state, action) => {\r\n      state.achievementFetchStatus = AchievementFetchStatus.FETCHED\r\n      state.achievements = action.payload\r\n    })\r\n    builder.addCase(fetchAchievements.rejected, (state) => {\r\n      state.achievementFetchStatus = AchievementFetchStatus.ERROR\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement } = achievementSlice.actions\r\n\r\nexport default achievementSlice.reducer\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\r\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\r\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\r\n\r\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\r\n\r\n/* eslint-disable camelcase */\r\ntype LotteriesWhere = { id_in?: string[] }\r\n\r\nconst applyNodeDataToLotteriesGraphResponse = (\r\n  nodeData: LotteryResponse[],\r\n  graphResponse: LotteryRoundGraphEntity[],\r\n): LotteryRoundGraphEntity[] => {\r\n  //   If no graph response - return node data\r\n  if (graphResponse.length === 0) {\r\n    return nodeData.map((nodeRound) => {\r\n      return {\r\n        endTime: nodeRound.endTime,\r\n        finalNumber: nodeRound.finalNumber.toString(),\r\n        startTime: nodeRound.startTime,\r\n        status: nodeRound.status,\r\n        id: nodeRound.lotteryId.toString(),\r\n        ticketPrice: nodeRound.priceTicketInCake,\r\n        totalTickets: '',\r\n        totalUsers: '',\r\n        winningTickets: '',\r\n      }\r\n    })\r\n  }\r\n\r\n  // Populate all nodeRound data with supplementary graphResponse round data when available\r\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\r\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\r\n    return {\r\n      endTime: nodeRoundData.endTime,\r\n      finalNumber: nodeRoundData.finalNumber.toString(),\r\n      startTime: nodeRoundData.startTime,\r\n      status: nodeRoundData.status,\r\n      id: nodeRoundData.lotteryId,\r\n      ticketPrice: graphRoundData?.ticketPrice,\r\n      totalTickets: graphRoundData?.totalTickets,\r\n      totalUsers: graphRoundData?.totalUsers,\r\n      winningTickets: graphRoundData?.winningTickets,\r\n    }\r\n  })\r\n\r\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\r\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\r\n  const lastCombinedDataRoundIndex = graphResponse\r\n    .map((graphRound) => graphRound?.id)\r\n    .indexOf(lastCombinedDataRound?.id)\r\n\r\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\r\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\r\n  return mergedResponse\r\n}\r\n\r\nexport const getGraphLotteries = async (\r\n  first = MAX_LOTTERIES_REQUEST_SIZE,\r\n  skip = 0,\r\n  where: LotteriesWhere = {},\r\n): Promise<LotteryRoundGraphEntity[]> => {\r\n  try {\r\n    const response = await request(\r\n      GRAPH_API_LOTTERY,\r\n      gql`\r\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\r\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\r\n            id\r\n            totalUsers\r\n            totalTickets\r\n            winningTickets\r\n            status\r\n            finalNumber\r\n            startTime\r\n            endTime\r\n            ticketPrice\r\n          }\r\n        }\r\n      `,\r\n      { skip, first, where },\r\n    )\r\n    return response.lotteries\r\n  } catch (error) {\r\n    console.error(error)\r\n    return []\r\n  }\r\n}\r\n\r\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\r\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\r\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\r\n  const graphResponse = await getGraphLotteries()\r\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\r\n  return mergedData\r\n}\r\n\r\nexport default getLotteriesData\r\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\r\nimport { LotteryTicket } from 'config/constants/types'\r\nimport { UserTicketsResponse } from 'state/types'\r\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\r\n\r\nconst lotteryContract = getLotteryV2Contract()\r\n\r\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\r\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\r\n\r\n  if (ticketIds?.length > 0) {\r\n    return ticketIds.map((ticketId, index) => {\r\n      return {\r\n        id: ticketId.toString(),\r\n        number: ticketNumbers[index].toString(),\r\n        status: ticketStatuses[index],\r\n      }\r\n    })\r\n  }\r\n  return []\r\n}\r\n\r\nexport const viewUserInfoForLotteryId = async (\r\n  account: string,\r\n  lotteryId: string,\r\n  cursor: number,\r\n  perRequestLimit: number,\r\n): Promise<LotteryTicket[]> => {\r\n  try {\r\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\r\n    return processRawTicketsResponse(data)\r\n  } catch (error) {\r\n    console.error('viewUserInfoForLotteryId', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\r\n  let cursor = 0\r\n  let numReturned = TICKET_LIMIT_PER_REQUEST\r\n  const ticketData = []\r\n\r\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\r\n    cursor += TICKET_LIMIT_PER_REQUEST\r\n    numReturned = response.length\r\n    ticketData.push(...response)\r\n  }\r\n\r\n  return ticketData\r\n}\r\n\r\nexport const fetchUserTicketsForMultipleRounds = async (\r\n  idsToCheck: string[],\r\n  account: string,\r\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\r\n  const ticketsForMultipleRounds = []\r\n  for (let i = 0; i < idsToCheck.length; i += 1) {\r\n    const roundId = idsToCheck[i]\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\r\n    ticketsForMultipleRounds.push({\r\n      roundId,\r\n      userTickets: ticketsForRound,\r\n    })\r\n  }\r\n  return ticketsForMultipleRounds\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Loading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","const ARCHIVED_FARMS_START_PID = 139\r\nconst ARCHIVED_FARMS_END_PID = 250\r\n\r\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\r\n\r\nexport default isArchivedPid\r\n","import { Token, Pair, ChainId } from '@pancakeswap/sdk'\r\nimport { isAddress } from 'utils'\r\n\r\nconst getLpAddress = (token1: string | Token, token2: string | Token) => {\r\n  let token1AsTokenInstance = token1\r\n  let token2AsTokenInstance = token2\r\n  if (!token1 || !token2) {\r\n    return null\r\n  }\r\n  if (typeof token1 === 'string' || token1 instanceof String) {\r\n    const checksummedToken1Address = isAddress(token1)\r\n    if (!checksummedToken1Address) {\r\n      return null\r\n    }\r\n    token1AsTokenInstance = new Token(ChainId.MAINNET, checksummedToken1Address, 18)\r\n  }\r\n  if (typeof token2 === 'string' || token2 instanceof String) {\r\n    const checksummedToken2Address = isAddress(token2)\r\n    if (!checksummedToken2Address) {\r\n      return null\r\n    }\r\n    token2AsTokenInstance = new Token(ChainId.MAINNET, checksummedToken2Address, 18)\r\n  }\r\n  return Pair.getAddress(token1AsTokenInstance as Token, token2AsTokenInstance as Token)\r\n}\r\n\r\nexport default getLpAddress\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import React from 'react'\r\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport { SUGGESTED_BASES } from '../../config/constants'\r\nimport { AutoColumn } from '../Layout/Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\n\r\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\r\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 6px;\r\n\r\n  align-items: center;\r\n  :hover {\r\n    cursor: ${({ disable }) => !disable && 'pointer'};\r\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\r\n  }\r\n\r\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\r\n  opacity: ${({ disable }) => disable && '0.4'};\r\n`\r\n\r\nexport default function CommonBases({\r\n  chainId,\r\n  onSelect,\r\n  selectedCurrency,\r\n}: {\r\n  chainId?: ChainId\r\n  selectedCurrency?: Currency | null\r\n  onSelect: (currency: Currency) => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow>\r\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\r\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\r\n      </AutoRow>\r\n      <AutoRow gap=\"auto\">\r\n        <BaseWrapper\r\n          onClick={() => {\r\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\r\n              onSelect(ETHER)\r\n            }\r\n          }}\r\n          disable={selectedCurrency === ETHER}\r\n        >\r\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\r\n          <Text>BNB</Text>\r\n        </BaseWrapper>\r\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\r\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\r\n          return (\r\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\r\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\r\n              <Text>{token.symbol}</Text>\r\n            </BaseWrapper>\r\n          )\r\n        })}\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\r\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport { ListLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport styled from 'styled-components'\r\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst TokenSection = styled.div<{ dim?: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n\r\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\r\n`\r\n\r\nconst CheckIcon = styled(CheckmarkCircleIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 6px;\r\n  stroke: ${({ theme }) => theme.colors.success};\r\n`\r\n\r\nconst NameOverflow = styled.div`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 140px;\r\n  font-size: 12px;\r\n`\r\n\r\nexport default function ImportRow({\r\n  token,\r\n  style,\r\n  dim,\r\n  showImportView,\r\n  setImportToken,\r\n}: {\r\n  token: Token\r\n  style?: CSSProperties\r\n  dim?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  // globals\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // check if token comes from list\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n\r\n  // check if already active on list or local storage tokens\r\n  const isAdded = useIsUserAddedToken(token)\r\n  const isActive = useIsTokenActive(token)\r\n\r\n  return (\r\n    <TokenSection style={style}>\r\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\r\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\r\n        <AutoRow>\r\n          <Text>{token.symbol}</Text>\r\n          <Text color=\"textDisabled\" ml=\"8px\">\r\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\r\n          </Text>\r\n        </AutoRow>\r\n        {list && list.logoURI && (\r\n          <RowFixed>\r\n            <Text small mr=\"4px\" color=\"textSubtle\">\r\n              {t('via')} {list.name}\r\n            </Text>\r\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\r\n          </RowFixed>\r\n        )}\r\n      </AutoColumn>\r\n      {!isActive && !isAdded ? (\r\n        <Button\r\n          width=\"fit-content\"\r\n          onClick={() => {\r\n            if (setImportToken) {\r\n              setImportToken(token)\r\n            }\r\n            showImportView()\r\n          }}\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      ) : (\r\n        <RowFixed style={{ minWidth: 'fit-content' }}>\r\n          <CheckIcon />\r\n          <Text color=\"success\">Active</Text>\r\n        </RowFixed>\r\n      )}\r\n    </TokenSection>\r\n  )\r\n}\r\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\r\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { LightGreyCard } from 'components/Card'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedActiveList } from '../../state/lists/hooks'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\r\nimport Column from '../Layout/Column'\r\nimport { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\nimport CircleLoader from '../Loader/CircleLoader'\r\nimport { isTokenOnList } from '../../utils'\r\nimport ImportRow from './ImportRow'\r\n\r\nfunction currencyKey(currency: Currency): string {\r\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\r\n}\r\n\r\nconst StyledBalanceText = styled(Text)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 5rem;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst FixedContentRow = styled.div`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n`\r\n\r\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\r\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\r\n}\r\n\r\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\r\n  grid-gap: 8px;\r\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n  :hover {\r\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\r\n  }\r\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\r\n`\r\n\r\nfunction CurrencyRow({\r\n  currency,\r\n  onSelect,\r\n  isSelected,\r\n  otherSelected,\r\n  style,\r\n}: {\r\n  currency: Currency\r\n  onSelect: () => void\r\n  isSelected: boolean\r\n  otherSelected: boolean\r\n  style: CSSProperties\r\n}) {\r\n  const { account } = useActiveWeb3React()\r\n  const key = currencyKey(currency)\r\n  const selectedTokenList = useCombinedActiveList()\r\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\r\n  const customAdded = useIsUserAddedToken(currency)\r\n  const balance = useCurrencyBalance(account ?? undefined, currency)\r\n\r\n  // only show add or remove buttons if not on selected list\r\n  return (\r\n    <MenuItem\r\n      style={style}\r\n      className={`token-item-${key}`}\r\n      onClick={() => (isSelected ? null : onSelect())}\r\n      disabled={isSelected}\r\n      selected={otherSelected}\r\n    >\r\n      <CurrencyLogo currency={currency} size=\"24px\" />\r\n      <Column>\r\n        <Text bold>{currency.symbol}</Text>\r\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\r\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\r\n        </Text>\r\n      </Column>\r\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\r\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\r\n      </RowFixed>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nexport default function CurrencyList({\r\n  height,\r\n  currencies,\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherCurrency,\r\n  fixedListRef,\r\n  showETH,\r\n  showImportView,\r\n  setImportToken,\r\n  breakIndex,\r\n}: {\r\n  height: number\r\n  currencies: Currency[]\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherCurrency?: Currency | null\r\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\r\n  showETH: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n  breakIndex: number | undefined\r\n}) {\r\n  const itemData: (Currency | undefined)[] = useMemo(() => {\r\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\r\n    if (breakIndex !== undefined) {\r\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\r\n    }\r\n    return formatted\r\n  }, [breakIndex, currencies, showETH])\r\n\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const inactiveTokens: {\r\n    [address: string]: Token\r\n  } = useAllInactiveTokens()\r\n\r\n  const Row = useCallback(\r\n    ({ data, index, style }) => {\r\n      const currency: Currency = data[index]\r\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\r\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\r\n      const handleSelect = () => onCurrencySelect(currency)\r\n\r\n      const token = wrappedCurrency(currency, chainId)\r\n\r\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\r\n\r\n      if (index === breakIndex || !data) {\r\n        return (\r\n          <FixedContentRow style={style}>\r\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\r\n              <RowBetween>\r\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\r\n                <QuestionHelper\r\n                  text={t(\r\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\r\n                  )}\r\n                  ml=\"4px\"\r\n                />\r\n              </RowBetween>\r\n            </LightGreyCard>\r\n          </FixedContentRow>\r\n        )\r\n      }\r\n\r\n      if (showImport && token) {\r\n        return (\r\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\r\n        )\r\n      }\r\n      return (\r\n        <CurrencyRow\r\n          style={style}\r\n          currency={currency}\r\n          isSelected={isSelected}\r\n          onSelect={handleSelect}\r\n          otherSelected={otherSelected}\r\n        />\r\n      )\r\n    },\r\n    [\r\n      chainId,\r\n      inactiveTokens,\r\n      onCurrencySelect,\r\n      otherCurrency,\r\n      selectedCurrency,\r\n      setImportToken,\r\n      showImportView,\r\n      breakIndex,\r\n      t,\r\n    ],\r\n  )\r\n\r\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\r\n\r\n  return (\r\n    <FixedSizeList\r\n      height={height}\r\n      ref={fixedListRef as any}\r\n      width=\"100%\"\r\n      itemData={itemData}\r\n      itemCount={itemData.length}\r\n      itemSize={56}\r\n      itemKey={itemKey}\r\n    >\r\n      {Row}\r\n    </FixedSizeList>\r\n  )\r\n}\r\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\r\n\r\n// compare two token amounts with highest one coming first\r\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\r\n  if (balanceA && balanceB) {\r\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\r\n  }\r\n  if (balanceA && balanceA.greaterThan('0')) {\r\n    return -1\r\n  }\r\n  if (balanceB && balanceB.greaterThan('0')) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getTokenComparator(balances: {\r\n  [tokenAddress: string]: TokenAmount | undefined\r\n}): (tokenA: Token, tokenB: Token) => number {\r\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\r\n    // -1 = a is first\r\n    // 1 = b is first\r\n\r\n    // sort by balances\r\n    const balanceA = balances[tokenA.address]\r\n    const balanceB = balances[tokenB.address]\r\n\r\n    const balanceComp = balanceComparator(balanceA, balanceB)\r\n    if (balanceComp !== 0) return balanceComp\r\n\r\n    if (tokenA.symbol && tokenB.symbol) {\r\n      // sort by symbol\r\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\r\n    }\r\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\r\n  }\r\n}\r\n\r\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\r\n  const balances = useAllTokenBalances()\r\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\r\n  return useMemo(() => {\r\n    if (inverted) {\r\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\r\n    }\r\n    return comparator\r\n  }, [inverted, comparator])\r\n}\r\n\r\nexport default useTokenComparator\r\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\r\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text, Input, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { useAudioModeManager } from 'state/user/hooks'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\r\nimport { isAddress } from '../../utils'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport Row from '../Layout/Row'\r\nimport CommonBases from './CommonBases'\r\nimport CurrencyList from './CurrencyList'\r\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\r\nimport useTokenComparator from './sorting'\r\n\r\nimport ImportRow from './ImportRow'\r\n\r\ninterface CurrencySearchProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}\r\n\r\nconst swapSound = new Audio('swap.mp3')\r\n\r\nfunction CurrencySearch({\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherSelectedCurrency,\r\n  showCommonBases,\r\n  showImportView,\r\n  setImportToken,\r\n}: CurrencySearchProps) {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // refs for fixed size lists\r\n  const fixedList = useRef<FixedSizeList>()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const debouncedQuery = useDebounce(searchQuery, 200)\r\n\r\n  const [invertSearchOrder] = useState<boolean>(false)\r\n\r\n  const allTokens = useAllTokens()\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(debouncedQuery)\r\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\r\n\r\n  const [audioPlay] = useAudioModeManager()\r\n\r\n  const showETH: boolean = useMemo(() => {\r\n    const s = debouncedQuery.toLowerCase().trim()\r\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\r\n  }, [debouncedQuery])\r\n\r\n  const tokenComparator = useTokenComparator(invertSearchOrder)\r\n\r\n  const filteredTokens: Token[] = useMemo(() => {\r\n    return filterTokens(Object.values(allTokens), debouncedQuery)\r\n  }, [allTokens, debouncedQuery])\r\n\r\n  const sortedTokens: Token[] = useMemo(() => {\r\n    return filteredTokens.sort(tokenComparator)\r\n  }, [filteredTokens, tokenComparator])\r\n\r\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      if (audioPlay) {\r\n        swapSound.play()\r\n      }\r\n    },\r\n    [audioPlay, onCurrencySelect],\r\n  )\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  }, [])\r\n\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n    fixedList.current?.scrollTo(0)\r\n  }, [])\r\n\r\n  const handleEnter = useCallback(\r\n    (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === 'Enter') {\r\n        const s = debouncedQuery.toLowerCase().trim()\r\n        if (s === 'bnb') {\r\n          handleCurrencySelect(ETHER)\r\n        } else if (filteredSortedTokens.length > 0) {\r\n          if (\r\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\r\n            filteredSortedTokens.length === 1\r\n          ) {\r\n            handleCurrencySelect(filteredSortedTokens[0])\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\r\n  )\r\n\r\n  // if no results on main list, show option to expand into inactive\r\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\r\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AutoColumn gap=\"16px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              placeholder={t('Search name or paste address')}\r\n              scale=\"lg\"\r\n              autoComplete=\"off\"\r\n              value={searchQuery}\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              onKeyDown={handleEnter}\r\n            />\r\n          </Row>\r\n          {showCommonBases && (\r\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\r\n          )}\r\n        </AutoColumn>\r\n        {searchToken && !searchTokenIsAdded ? (\r\n          <Column style={{ padding: '20px 0', height: '100%' }}>\r\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\r\n          </Column>\r\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\r\n          <Box margin=\"24px -24px\">\r\n            <CurrencyList\r\n              height={390}\r\n              showETH={showETH}\r\n              currencies={\r\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\r\n              }\r\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              otherCurrency={otherSelectedCurrency}\r\n              selectedCurrency={selectedCurrency}\r\n              fixedListRef={fixedList}\r\n              showImportView={showImportView}\r\n              setImportToken={setImportToken}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <Column style={{ padding: '20px', height: '100%' }}>\r\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\r\n              {t('No results found.')}\r\n            </Text>\r\n          </Column>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrencySearch\r\n","export enum CurrencyModalView {\r\n  search,\r\n  manage,\r\n  importToken,\r\n  importList,\r\n}\r\n\r\nexport default CurrencyModalView\r\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\r\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\nimport Card from 'components/Card'\r\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\r\n\r\nimport { AppDispatch, AppState } from '../../state'\r\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\r\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\r\nimport uriToHttp from '../../utils/uriToHttp'\r\n\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport { ListLogo } from '../Logo'\r\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyModalView } from './types'\r\n\r\nfunction listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n\r\nconst Wrapper = styled(Column)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst RowWrapper = styled(Row)<{ active: boolean }>`\r\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\r\n  border: solid 1px;\r\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\r\n  transition: 200ms;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`\r\n\r\nfunction listUrlRowHTMLId(listUrl: string) {\r\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\r\n}\r\n\r\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\r\n\r\n  const isActive = useIsListActive(listUrl)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const handleAcceptListUpdate = useCallback(() => {\r\n    if (!pending) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n  }, [dispatch, listUrl, pending])\r\n\r\n  const handleRemoveList = useCallback(() => {\r\n    // eslint-disable-next-line no-alert\r\n    if (window.confirm('Please confirm you would like to remove this list')) {\r\n      dispatch(removeList(listUrl))\r\n    }\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleEnableList = useCallback(() => {\r\n    dispatch(enableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleDisableList = useCallback(() => {\r\n    dispatch(disableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <div>\r\n      <Text>{list && listVersionLabel(list.version)}</Text>\r\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\r\n        {t('See')}\r\n      </LinkExternal>\r\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\r\n        {t('Remove')}\r\n      </Button>\r\n      {pending && (\r\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\r\n          {t('Update list')}\r\n        </Button>\r\n      )}\r\n    </div>,\r\n    { placement: 'right-end', trigger: 'click' },\r\n  )\r\n\r\n  if (!list) return null\r\n\r\n  return (\r\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\r\n      {tooltipVisible && tooltip}\r\n      {list.logoURI ? (\r\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\r\n      ) : (\r\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\r\n      )}\r\n      <Column style={{ flex: '1' }}>\r\n        <Row>\r\n          <Text bold>{list.name}</Text>\r\n        </Row>\r\n        <RowFixed mt=\"4px\">\r\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\r\n            {list.tokens.length} {t('Tokens')}\r\n          </Text>\r\n          <span ref={targetRef}>\r\n            <CogIcon color=\"text\" width=\"12px\" />\r\n          </span>\r\n        </RowFixed>\r\n      </Column>\r\n      <Toggle\r\n        checked={isActive}\r\n        onChange={() => {\r\n          if (isActive) {\r\n            handleDisableList()\r\n          } else {\r\n            handleEnableList()\r\n          }\r\n        }}\r\n      />\r\n    </RowWrapper>\r\n  )\r\n})\r\n\r\nconst ListContainer = styled.div`\r\n  padding: 1rem 0;\r\n  height: 100%;\r\n  overflow: auto;\r\n`\r\n\r\nfunction ManageLists({\r\n  setModalView,\r\n  setImportList,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [listUrlInput, setListUrlInput] = useState<string>('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const lists = useAllLists()\r\n\r\n  // sort by active but only if not visible\r\n  const activeListUrls = useActiveListUrls()\r\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\r\n  useEffect(() => {\r\n    if (!activeCopy && activeListUrls) {\r\n      setActiveCopy(activeListUrls)\r\n    }\r\n  }, [activeCopy, activeListUrls])\r\n\r\n  const handleInput = useCallback((e) => {\r\n    setListUrlInput(e.target.value)\r\n  }, [])\r\n\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const validUrl: boolean = useMemo(() => {\r\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\r\n  }, [listUrlInput])\r\n\r\n  const sortedLists = useMemo(() => {\r\n    const listUrls = Object.keys(lists)\r\n    return listUrls\r\n      .filter((listUrl) => {\r\n        // only show loaded lists, hide unsupported lists\r\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\r\n      })\r\n      .sort((u1, u2) => {\r\n        const { current: l1 } = lists[u1]\r\n        const { current: l2 } = lists[u2]\r\n\r\n        // first filter on active lists\r\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\r\n          return -1\r\n        }\r\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\r\n          return 1\r\n        }\r\n\r\n        if (l1 && l2) {\r\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\r\n            ? -1\r\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\r\n            ? 0\r\n            : 1\r\n        }\r\n        if (l1) return -1\r\n        if (l2) return 1\r\n        return 0\r\n      })\r\n  }, [lists, activeCopy])\r\n\r\n  // temporary fetched list for import flow\r\n  const [tempList, setTempList] = useState<TokenList>()\r\n  const [addError, setAddError] = useState<string | undefined>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTempList() {\r\n      fetchList(listUrlInput, false)\r\n        .then((list) => setTempList(list))\r\n        .catch(() => setAddError('Error importing list'))\r\n    }\r\n    // if valid url, fetch details for card\r\n    if (validUrl) {\r\n      fetchTempList()\r\n    } else {\r\n      setTempList(undefined)\r\n      if (listUrlInput !== '') {\r\n        setAddError('Enter valid list location')\r\n      }\r\n    }\r\n\r\n    // reset error\r\n    if (listUrlInput === '') {\r\n      setAddError(undefined)\r\n    }\r\n  }, [fetchList, listUrlInput, validUrl])\r\n\r\n  // check if list is already imported\r\n  const isImported = Object.keys(lists).includes(listUrlInput)\r\n\r\n  // set list values and have parent modal switch to import list view\r\n  const handleImport = useCallback(() => {\r\n    if (!tempList) return\r\n    setImportList(tempList)\r\n    setModalView(CurrencyModalView.importList)\r\n    setListUrl(listUrlInput)\r\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"14px\">\r\n        <Row>\r\n          <Input\r\n            id=\"list-add-input\"\r\n            scale=\"lg\"\r\n            placeholder={t('https:// or ipfs:// or ENS name')}\r\n            value={listUrlInput}\r\n            onChange={handleInput}\r\n          />\r\n        </Row>\r\n        {addError ? (\r\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n            {addError}\r\n          </Text>\r\n        ) : null}\r\n      </AutoColumn>\r\n      {tempList && (\r\n        <AutoColumn style={{ paddingTop: 0 }}>\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\r\n                  <Text bold>{tempList.name}</Text>\r\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\r\n                    {tempList.tokens.length} {t('Tokens')}\r\n                  </Text>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n              {isImported ? (\r\n                <RowFixed>\r\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\r\n                  <Text>{t('Loaded')}</Text>\r\n                </RowFixed>\r\n              ) : (\r\n                <Button width=\"fit-content\" onClick={handleImport}>\r\n                  {t('Import')}\r\n                </Button>\r\n              )}\r\n            </RowBetween>\r\n          </Card>\r\n        </AutoColumn>\r\n      )}\r\n      <ListContainer>\r\n        <AutoColumn gap=\"md\">\r\n          {sortedLists.map((listUrl) => (\r\n            <ListRow key={listUrl} listUrl={listUrl} />\r\n          ))}\r\n        </AutoColumn>\r\n      </ListContainer>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ManageLists\r\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\r\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport { getBscScanLink, isAddress } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport ImportRow from './ImportRow'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n  position: relative;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nexport default function ManageTokens({\r\n  setModalView,\r\n  setImportToken,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n  }, [])\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(searchQuery)\r\n\r\n  // all tokens for local list\r\n  const userAddedTokens: Token[] = useUserAddedTokens()\r\n  const removeToken = useRemoveUserAddedToken()\r\n\r\n  const handleRemoveAll = useCallback(() => {\r\n    if (chainId && userAddedTokens) {\r\n      userAddedTokens.map((token) => {\r\n        return removeToken(chainId, token.address)\r\n      })\r\n    }\r\n  }, [removeToken, userAddedTokens, chainId])\r\n\r\n  const tokenList = useMemo(() => {\r\n    return (\r\n      chainId &&\r\n      userAddedTokens.map((token) => (\r\n        <RowBetween key={token.address} width=\"100%\">\r\n          <RowFixed>\r\n            <CurrencyLogo currency={token} size=\"20px\" />\r\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\r\n              {token.symbol}\r\n            </Link>\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\r\n          </RowFixed>\r\n        </RowBetween>\r\n      ))\r\n    )\r\n  }, [userAddedTokens, chainId, removeToken])\r\n\r\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Column style={{ width: '100%', flex: '1 1' }}>\r\n        <AutoColumn gap=\"14px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              scale=\"lg\"\r\n              placeholder=\"0x0000\"\r\n              value={searchQuery}\r\n              autoComplete=\"off\"\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              isWarning={!isAddressValid}\r\n            />\r\n          </Row>\r\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\r\n          {searchToken && (\r\n            <ImportRow\r\n              token={searchToken}\r\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n              setImportToken={setImportToken}\r\n              style={{ height: 'fit-content' }}\r\n            />\r\n          )}\r\n        </AutoColumn>\r\n        {tokenList}\r\n        <Footer>\r\n          <Text bold color=\"textSubtle\">\r\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\r\n          </Text>\r\n          {userAddedTokens.length > 0 && (\r\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\r\n              {t('Clear all')}\r\n            </Button>\r\n          )}\r\n        </Footer>\r\n      </Column>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ManageLists from './ManageLists'\r\nimport ManageTokens from './ManageTokens'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst StyledButtonMenu = styled(ButtonMenu)`\r\n  width: 100%;\r\n`\r\n\r\nexport default function Manage({\r\n  setModalView,\r\n  setImportList,\r\n  setImportToken,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [showLists, setShowLists] = useState(true)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalBody>\r\n      <StyledButtonMenu\r\n        activeIndex={showLists ? 0 : 1}\r\n        onItemClick={() => setShowLists((prev) => !prev)}\r\n        scale=\"sm\"\r\n        variant=\"subtle\"\r\n        mb=\"32px\"\r\n      >\r\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\r\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\r\n      </StyledButtonMenu>\r\n      {showLists ? (\r\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\r\n      ) : (\r\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\r\n      )}\r\n    </ModalBody>\r\n  )\r\n}\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\r\nimport Card from 'components/Card'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from 'state'\r\nimport useFetchListCallback from 'hooks/useFetchListCallback'\r\nimport { removeList, enableList } from 'state/lists/actions'\r\nimport { useAllLists } from 'state/lists/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  listURL: string\r\n  list: TokenList\r\n  onImport: () => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\n\r\nconst TextDot = styled.div`\r\n  height: 3px;\r\n  width: 3px;\r\n  background-color: ${({ theme }) => theme.colors.text};\r\n  border-radius: 50%;\r\n`\r\n\r\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\r\n  const { theme } = useTheme()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // user must accept\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const lists = useAllLists()\r\n  const fetchList = useFetchListCallback()\r\n\r\n  // monitor is list is loading\r\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\r\n  const [addError, setAddError] = useState<string | null>(null)\r\n\r\n  const handleAddList = useCallback(() => {\r\n    if (adding) return\r\n    setAddError(null)\r\n    fetchList(listURL)\r\n      .then(() => {\r\n        dispatch(enableList(listURL))\r\n        onImport()\r\n      })\r\n      .catch((error) => {\r\n        setAddError(error.message)\r\n        dispatch(removeList(listURL))\r\n      })\r\n  }, [adding, dispatch, fetchList, listURL, onImport])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"md\">\r\n        <AutoColumn gap=\"md\">\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\r\n                  <RowFixed>\r\n                    <Text bold mr=\"6px\">\r\n                      {list.name}\r\n                    </Text>\r\n                    <TextDot />\r\n                    <Text small color=\"textSubtle\" ml=\"6px\">\r\n                      {list.tokens.length} tokens\r\n                    </Text>\r\n                  </RowFixed>\r\n                  <Link\r\n                    small\r\n                    external\r\n                    ellipsis\r\n                    maxWidth=\"90%\"\r\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\r\n                  >\r\n                    {listURL}\r\n                  </Link>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n            </RowBetween>\r\n          </Card>\r\n\r\n          <Message variant=\"danger\">\r\n            <Flex flexDirection=\"column\">\r\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\r\n                {t('Import at your own risk')}\r\n              </Text>\r\n              <Text color={theme.colors.failure} mb=\"8px\">\r\n                {t(\r\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\r\n                )}\r\n              </Text>\r\n              <Text bold color={theme.colors.failure} mb=\"16px\">\r\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\r\n              </Text>\r\n              <Flex alignItems=\"center\">\r\n                <Checkbox\r\n                  name=\"confirmed\"\r\n                  type=\"checkbox\"\r\n                  checked={confirmed}\r\n                  onChange={() => setConfirmed(!confirmed)}\r\n                  scale=\"sm\"\r\n                />\r\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n                  {t('I understand')}\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Message>\r\n\r\n          <Button disabled={!confirmed} onClick={handleAddList}>\r\n            {t('Import')}\r\n          </Button>\r\n          {addError ? (\r\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n              {addError}\r\n            </Text>\r\n          ) : null}\r\n        </AutoColumn>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ImportList\r\n","import React, { useCallback, useState } from 'react'\r\nimport { Currency, Token } from '@pancakeswap/sdk'\r\nimport {\r\n  ModalContainer,\r\n  ModalHeader,\r\n  ModalTitle,\r\n  ModalBackButton,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  InjectedModalProps,\r\n  Heading,\r\n  Button,\r\n} from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport usePrevious from 'hooks/usePreviousValue'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CurrencySearch from './CurrencySearch'\r\nimport ImportToken from './ImportToken'\r\nimport Manage from './Manage'\r\nimport ImportList from './ImportList'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Footer = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  text-align: center;\r\n`\r\n\r\nconst StyledModalContainer = styled(ModalContainer)`\r\n  max-width: 420px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledModalBody = styled(ModalBody)`\r\n  padding: 24px;\r\n  overflow-y: auto;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\ninterface CurrencySearchModalProps extends InjectedModalProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  onDismiss = () => null,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n  showCommonBases = false,\r\n}: CurrencySearchModalProps) {\r\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onDismiss()\r\n      onCurrencySelect(currency)\r\n    },\r\n    [onDismiss, onCurrencySelect],\r\n  )\r\n\r\n  // for token import view\r\n  const prevView = usePrevious(modalView)\r\n\r\n  // used for import token flow\r\n  const [importToken, setImportToken] = useState<Token | undefined>()\r\n\r\n  // used for import list\r\n  const [importList, setImportList] = useState<TokenList | undefined>()\r\n  const [listURL, setListUrl] = useState<string | undefined>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const config = {\r\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\r\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\r\n    [CurrencyModalView.importToken]: {\r\n      title: t('Import Tokens'),\r\n      onBack: () =>\r\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\r\n    },\r\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\r\n  }\r\n\r\n  return (\r\n    <StyledModalContainer minWidth=\"320px\">\r\n      <ModalHeader>\r\n        <ModalTitle>\r\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\r\n          <Heading>{config[modalView].title}</Heading>\r\n        </ModalTitle>\r\n        <ModalCloseButton onDismiss={onDismiss} />\r\n      </ModalHeader>\r\n      <StyledModalBody>\r\n        {modalView === CurrencyModalView.search ? (\r\n          <CurrencySearch\r\n            onCurrencySelect={handleCurrencySelect}\r\n            selectedCurrency={selectedCurrency}\r\n            otherSelectedCurrency={otherSelectedCurrency}\r\n            showCommonBases={showCommonBases}\r\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n            setImportToken={setImportToken}\r\n          />\r\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\r\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\r\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\r\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\r\n        ) : modalView === CurrencyModalView.manage ? (\r\n          <Manage\r\n            setModalView={setModalView}\r\n            setImportToken={setImportToken}\r\n            setImportList={setImportList}\r\n            setListUrl={setListUrl}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {modalView === CurrencyModalView.search && (\r\n          <Footer>\r\n            <Button\r\n              scale=\"sm\"\r\n              variant=\"text\"\r\n              onClick={() => setModalView(CurrencyModalView.manage)}\r\n              className=\"list-token-manage-button\"\r\n            >\r\n              {t('Manage Tokens')}\r\n            </Button>\r\n          </Footer>\r\n        )}\r\n      </StyledModalBody>\r\n    </StyledModalContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\r\nimport { Input, InputProps } from '@pancakeswap/uikit'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nexport interface DatePickerProps extends ReactDatePickerProps {\r\n  inputProps?: InputProps\r\n}\r\n\r\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\r\n  return (\r\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\r\n  )\r\n}\r\n\r\nexport default DatePicker\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDatePickerPortal = styled.div`\r\n  .react-datepicker-wrapper,\r\n  .react-datepicker__input-container {\r\n    display: block;\r\n  }\r\n\r\n  .react-datepicker {\r\n    background: ${({ theme }) => theme.card.background};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    color: ${({ theme }) => theme.colors.text};\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n\r\n  .react-datepicker__header {\r\n    background: ${({ theme }) => theme.colors.input};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker__current-month,\r\n  .react-datepicker-time__header,\r\n  .react-datepicker-year-header,\r\n  .react-datepicker__day-name,\r\n  .react-datepicker__day,\r\n  .react-datepicker__time-name {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n\r\n  .react-datepicker__day:hover,\r\n  .react-datepicker__month-text:hover,\r\n  .react-datepicker__quarter-text:hover,\r\n  .react-datepicker__year-text:hover {\r\n    background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\r\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\r\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker__day--selected,\r\n  .react-datepicker__day--in-selecting-range,\r\n  .react-datepicker__day--in-range,\r\n  .react-datepicker__month-text--selected,\r\n  .react-datepicker__month-text--in-selecting-range,\r\n  .react-datepicker__month-text--in-range,\r\n  .react-datepicker__quarter-text--selected,\r\n  .react-datepicker__quarter-text--in-selecting-range,\r\n  .react-datepicker__quarter-text--in-range,\r\n  .react-datepicker__year-text--selected,\r\n  .react-datepicker__year-text--in-selecting-range,\r\n  .react-datepicker__year-text--in-range {\r\n    background-color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  .react-datepicker__day--selected:hover,\r\n  .react-datepicker__day--in-selecting-range:hover,\r\n  .react-datepicker__day--in-range:hover,\r\n  .react-datepicker__month-text--selected:hover,\r\n  .react-datepicker__month-text--in-selecting-range:hover,\r\n  .react-datepicker__month-text--in-range:hover,\r\n  .react-datepicker__quarter-text--selected:hover,\r\n  .react-datepicker__quarter-text--in-selecting-range:hover,\r\n  .react-datepicker__quarter-text--in-range:hover,\r\n  .react-datepicker__year-text--selected:hover,\r\n  .react-datepicker__year-text--in-selecting-range:hover,\r\n  .react-datepicker__year-text--in-range:hover {\r\n    background-color: ${({ theme }) => theme.colors.primaryBright};\r\n  }\r\n\r\n  .react-datepicker__day--keyboard-selected,\r\n  .react-datepicker__month-text--keyboard-selected,\r\n  .react-datepicker__quarter-text--keyboard-selected,\r\n  .react-datepicker__year-text--keyboard-selected {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: #ffffff;\r\n  }\r\n\r\n  .react-datepicker__day--keyboard-selected:hover,\r\n  .react-datepicker__month-text--keyboard-selected:hover,\r\n  .react-datepicker__quarter-text--keyboard-selected:hover,\r\n  .react-datepicker__year-text--keyboard-selected:hover {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: #ffffff;\r\n  }\r\n\r\n  .react-datepicker__time-container,\r\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\r\n    width: 120px;\r\n  }\r\n\r\n  .react-datepicker__header--time {\r\n    padding: 8px;\r\n  }\r\n\r\n  .react-datepicker__time-container\r\n    .react-datepicker__time\r\n    .react-datepicker__time-box\r\n    ul.react-datepicker__time-list\r\n    li.react-datepicker__time-list-item {\r\n    height: auto;\r\n    padding: 8px;\r\n  }\r\n`\r\n\r\nconst DatePickerPortal = () => {\r\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\r\n}\r\n\r\nexport default DatePickerPortal\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport DatePicker, { DatePickerProps } from './DatePicker'\r\n\r\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <DatePicker\r\n      showTimeSelect\r\n      showTimeSelectOnly\r\n      timeIntervals={15}\r\n      timeCaption={t('Time')}\r\n      dateFormat=\"ppp\"\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TimePicker\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <InputWrapper>\r\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\r\n    </InputWrapper>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import { useAllLists } from 'state/lists/hooks'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useAllInactiveTokens } from 'hooks/Tokens'\r\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport useFetchListCallback from 'hooks/useFetchListCallback'\r\nimport useInterval from 'hooks/useInterval'\r\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\r\nimport { AppDispatch } from '../index'\r\nimport { acceptListUpdate } from './actions'\r\nimport { useActiveListUrls } from './hooks'\r\n\r\nexport default function Updater(): null {\r\n  const { library } = useWeb3Provider()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  // get all loaded lists, and the active urls\r\n  const lists = useAllLists()\r\n  const activeListUrls = useActiveListUrls()\r\n\r\n  // initiate loading\r\n  useAllInactiveTokens()\r\n\r\n  const fetchList = useFetchListCallback()\r\n  const fetchAllListsCallback = useCallback(() => {\r\n    if (!isWindowVisible) return\r\n    Object.keys(lists).forEach((url) =>\r\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\r\n    )\r\n  }, [fetchList, isWindowVisible, lists])\r\n\r\n  // fetch all lists every 10 minutes, but only after we initialize library\r\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\r\n\r\n  // whenever a list is not loaded and not loading, try again to load it\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (!list.current && !list.loadingRequestId && !list.error) {\r\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\r\n  useEffect(() => {\r\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\r\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // automatically update lists if versions are minor/patch\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (list.current && list.pendingUpdate) {\r\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\r\n        // eslint-disable-next-line default-case\r\n        switch (bump) {\r\n          case VersionUpgrade.NONE:\r\n            throw new Error('unexpected no version bump')\r\n          // update any active or inactive lists\r\n          case VersionUpgrade.PATCH:\r\n          case VersionUpgrade.MINOR:\r\n          case VersionUpgrade.MAJOR:\r\n            dispatch(acceptListUpdate(listUrl))\r\n        }\r\n      }\r\n    })\r\n  }, [dispatch, lists, activeListUrls])\r\n\r\n  return null\r\n}\r\n","/* eslint-disable */\r\n\r\nfunction wait(ms: number): Promise<void> {\r\n  return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n\r\nfunction waitRandom(min: number, max: number): Promise<void> {\r\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\r\n}\r\n\r\n/**\r\n * This error is thrown if the function is cancelled before completing\r\n */\r\nexport class CancelledError extends Error {\r\n  constructor() {\r\n    super('Cancelled')\r\n  }\r\n}\r\n\r\n/**\r\n * Throw this error if the function should retry\r\n */\r\nexport class RetryableError extends Error {}\r\n\r\n/**\r\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\r\n * @param fn function to retry\r\n * @param n how many times to retry\r\n * @param minWait min wait between retries in ms\r\n * @param maxWait max wait between retries in ms\r\n */\r\nexport function retry<T>(\r\n  fn: () => Promise<T>,\r\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\r\n): { promise: Promise<T>; cancel: () => void } {\r\n  let completed = false\r\n  let rejectCancelled: (error: Error) => void\r\n  const promise = new Promise<T>(async (resolve, reject) => {\r\n    rejectCancelled = reject\r\n    while (true) {\r\n      let result: T\r\n      try {\r\n        result = await fn()\r\n        if (!completed) {\r\n          resolve(result)\r\n          completed = true\r\n        }\r\n        break\r\n      } catch (error) {\r\n        if (completed) {\r\n          break\r\n        }\r\n        if (n <= 0 || !(error instanceof RetryableError)) {\r\n          reject(error)\r\n          completed = true\r\n          break\r\n        }\r\n        n--\r\n      }\r\n      await waitRandom(minWait, maxWait)\r\n    }\r\n  })\r\n  return {\r\n    promise,\r\n    cancel: () => {\r\n      if (completed) return\r\n      completed = true\r\n      rejectCancelled(new CancelledError())\r\n    },\r\n  }\r\n}\r\n\r\n/* eslint-enable */\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useMulticallContract } from '../../hooks/useContract'\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport { CancelledError, retry, RetryableError } from './retry'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  Call,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  parseCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\nimport chunkArray from './chunkArray'\r\n\r\n// chunk calls so we do not exceed the gas limit\r\nconst CALL_CHUNK_SIZE = 500\r\n\r\n/**\r\n * Fetches a chunk of calls, enforcing a minimum block number constraint\r\n * @param multicallContract multicall contract to fetch against\r\n * @param chunk chunk of calls to make\r\n * @param minBlockNumber minimum block number of the result set\r\n */\r\nasync function fetchChunk(\r\n  multicallContract: Contract,\r\n  chunk: Call[],\r\n  minBlockNumber: number,\r\n): Promise<{ results: string[]; blockNumber: number }> {\r\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\r\n  let resultsBlockNumber\r\n  let returnData\r\n  try {\r\n    // prettier-ignore\r\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\r\n      chunk.map((obj) => [obj.address, obj.callData]),\r\n      {\r\n        blockTag: minBlockNumber,\r\n      }\r\n    )\r\n  } catch (err) {\r\n    const error = err as any\r\n    if (\r\n      error.code === -32000 ||\r\n      (error?.data?.message && error?.data?.message?.indexOf('header not found') !== -1) ||\r\n      error.message?.indexOf('header not found') !== -1\r\n    ) {\r\n      throw new RetryableError(`header not found for block number ${minBlockNumber}`)\r\n    } else if (error.code === -32603 || error.message?.indexOf('execution ran out of gas') !== -1) {\r\n      if (chunk.length > 1) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('Splitting a chunk in 2', chunk)\r\n        }\r\n        const half = Math.floor(chunk.length / 2)\r\n        const [c0, c1] = await Promise.all([\r\n          fetchChunk(multicallContract, chunk.slice(0, half), minBlockNumber),\r\n          fetchChunk(multicallContract, chunk.slice(half, chunk.length), minBlockNumber),\r\n        ])\r\n        return {\r\n          results: c0.results.concat(c1.results),\r\n          blockNumber: c1.blockNumber,\r\n        }\r\n      }\r\n    }\r\n    console.debug('Failed to fetch chunk inside retry', error)\r\n    throw error\r\n  }\r\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\r\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\r\n  }\r\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\r\n}\r\n\r\n/**\r\n * From the current all listeners state, return each call key mapped to the\r\n * minimum number of blocks per fetch. This is how often each key must be fetched.\r\n * @param allListeners the all listeners state\r\n * @param chainId the current chain id\r\n */\r\nexport function activeListeningKeys(\r\n  allListeners: AppState['multicall']['callListeners'],\r\n  chainId?: number,\r\n): { [callKey: string]: number } {\r\n  if (!allListeners || !chainId) return {}\r\n  const listeners = allListeners[chainId]\r\n  if (!listeners) return {}\r\n\r\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\r\n    const keyListeners = listeners[callKey]\r\n\r\n    memo[callKey] = Object.keys(keyListeners)\r\n      .filter((key) => {\r\n        const blocksPerFetch = parseInt(key)\r\n        if (blocksPerFetch <= 0) return false\r\n        return keyListeners[blocksPerFetch] > 0\r\n      })\r\n      .reduce((previousMin, current) => {\r\n        return Math.min(previousMin, parseInt(current))\r\n      }, Infinity)\r\n    return memo\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Return the keys that need to be refetched\r\n * @param callResults current call result state\r\n * @param listeningKeys each call key mapped to how old the data can be in blocks\r\n * @param chainId the current chain id\r\n * @param currentBlock the latest block number\r\n */\r\nexport function outdatedListeningKeys(\r\n  callResults: AppState['multicall']['callResults'],\r\n  listeningKeys: { [callKey: string]: number },\r\n  chainId: number | undefined,\r\n  currentBlock: number | undefined,\r\n): string[] {\r\n  if (!chainId || !currentBlock) return []\r\n  const results = callResults[chainId]\r\n  // no results at all, load everything\r\n  if (!results) return Object.keys(listeningKeys)\r\n\r\n  return Object.keys(listeningKeys).filter((callKey) => {\r\n    const blocksPerFetch = listeningKeys[callKey]\r\n\r\n    const data = callResults[chainId][callKey]\r\n    // no data, must fetch\r\n    if (!data) return true\r\n\r\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\r\n\r\n    // already fetching it for a recent enough block, don't refetch it\r\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\r\n\r\n    // if data is older than minDataBlockNumber, fetch it\r\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\r\n  })\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\r\n  // wait for listeners to settle before triggering updates\r\n  const debouncedListeners = useDebounce(state.callListeners, 100)\r\n  const { currentBlock } = useBlock()\r\n  const { chainId } = useActiveWeb3React()\r\n  const multicallContract = useMulticallContract()\r\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\r\n\r\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\r\n    return activeListeningKeys(debouncedListeners, chainId)\r\n  }, [debouncedListeners, chainId])\r\n\r\n  const unserializedOutdatedCallKeys = useMemo(() => {\r\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\r\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\r\n\r\n  const serializedOutdatedCallKeys = useMemo(\r\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\r\n    [unserializedOutdatedCallKeys],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!currentBlock || !chainId || !multicallContract) return\r\n\r\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\r\n    if (outdatedCallKeys.length === 0) return\r\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\r\n\r\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\r\n\r\n    if (cancellations.current?.blockNumber !== currentBlock) {\r\n      cancellations.current?.cancellations?.forEach((c) => c())\r\n    }\r\n\r\n    dispatch(\r\n      fetchingMulticallResults({\r\n        calls,\r\n        chainId,\r\n        fetchingBlockNumber: currentBlock,\r\n      }),\r\n    )\r\n\r\n    cancellations.current = {\r\n      blockNumber: currentBlock,\r\n      cancellations: chunkedCalls.map((chunk, index) => {\r\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\r\n          n: Infinity,\r\n          minWait: 2500,\r\n          maxWait: 3500,\r\n        })\r\n        promise\r\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\r\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\r\n\r\n            // accumulates the length of all previous indices\r\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\r\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\r\n\r\n            dispatch(\r\n              updateMulticallResults({\r\n                chainId,\r\n                results: outdatedCallKeys\r\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\r\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\r\n                    memo[callKey] = returnData[i] ?? null\r\n                    return memo\r\n                  }, {}),\r\n                blockNumber: fetchBlockNumber,\r\n              }),\r\n            )\r\n          })\r\n          .catch((error: any) => {\r\n            if (error instanceof CancelledError) {\r\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\r\n              return\r\n            }\r\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\r\n            dispatch(\r\n              errorFetchingMulticallResults({\r\n                calls: chunk,\r\n                chainId,\r\n                fetchingBlockNumber: currentBlock,\r\n              }),\r\n            )\r\n          })\r\n        return cancel\r\n      }),\r\n    }\r\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\r\n\r\n  return null\r\n}\r\n","// chunks array into chunks of maximum size\r\n// evenly distributes items among the chunks\r\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\r\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\r\n  if (items.length <= maxChunkSize) return [items]\r\n\r\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\r\n  const chunkSize = Math.ceil(items.length / numChunks)\r\n\r\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { checkedTransaction, finalizeTransaction } from './actions'\r\n\r\nexport function shouldCheck(\r\n  currentBlock: number,\r\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\r\n): boolean {\r\n  if (tx.receipt) return false\r\n  if (!tx.lastCheckedBlockNumber) return true\r\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\r\n  if (blocksSinceCheck < 1) return false\r\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\r\n  if (minutesPending > 60) {\r\n    // every 10 blocks if pending for longer than an hour\r\n    return blocksSinceCheck > 9\r\n  }\r\n  if (minutesPending > 5) {\r\n    // every 3 blocks if pending more than 5 minutes\r\n    return blocksSinceCheck > 2\r\n  }\r\n  // otherwise every block\r\n  return true\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const { library, chainId } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\r\n\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !library || !currentBlock) return\r\n\r\n    Object.keys(transactions)\r\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\r\n      .forEach((hash) => {\r\n        library\r\n          .getTransactionReceipt(hash)\r\n          .then((receipt) => {\r\n            if (receipt) {\r\n              dispatch(\r\n                finalizeTransaction({\r\n                  chainId,\r\n                  hash,\r\n                  receipt: {\r\n                    blockHash: receipt.blockHash,\r\n                    blockNumber: receipt.blockNumber,\r\n                    contractAddress: receipt.contractAddress,\r\n                    from: receipt.from,\r\n                    status: receipt.status,\r\n                    to: receipt.to,\r\n                    transactionHash: receipt.transactionHash,\r\n                    transactionIndex: receipt.transactionIndex,\r\n                  },\r\n                }),\r\n              )\r\n\r\n              const toast = receipt.status === 1 ? toastSuccess : toastError\r\n              toast(\r\n                t('Transaction receipt'),\r\n                <Flex flexDirection=\"column\">\r\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\r\n                  {chainId && (\r\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\r\n                      {t('View on BscScan')}\r\n                    </Link>\r\n                  )}\r\n                </Flex>,\r\n              )\r\n            } else {\r\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(`failed to check transaction hash: ${hash}`, error)\r\n          })\r\n      })\r\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError, t])\r\n\r\n  return null\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  CloseIcon,\r\n  Heading,\r\n  IconButton,\r\n  InjectedModalProps,\r\n  ModalBody,\r\n  ModalContainer,\r\n  ModalHeader as UIKitModalHeader,\r\n  ModalTitle,\r\n} from '@pancakeswap/uikit'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport WalletInfo from './WalletInfo'\r\nimport WalletTransactions from './WalletTransactions'\r\n\r\nexport enum WalletView {\r\n  WALLET_INFO,\r\n  TRANSACTIONS,\r\n}\r\n\r\ninterface WalletModalProps extends InjectedModalProps {\r\n  initialView?: WalletView\r\n}\r\n\r\nexport const LOW_BNB_BALANCE = parseUnits('2', 'gwei')\r\n\r\nconst ModalHeader = styled(UIKitModalHeader)`\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Tabs = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\r\n  const [view, setView] = useState(initialView)\r\n  const { t } = useTranslation()\r\n  const { balance, fetchStatus } = useGetBnbBalance()\r\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\r\n\r\n  const handleClick = (newIndex: number) => {\r\n    setView(newIndex)\r\n  }\r\n\r\n  return (\r\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\r\n      <ModalHeader>\r\n        <ModalTitle>\r\n          <Heading>{t('Your Wallet')}</Heading>\r\n        </ModalTitle>\r\n        <IconButton variant=\"text\" onClick={onDismiss}>\r\n          <CloseIcon width=\"24px\" color=\"text\" />\r\n        </IconButton>\r\n      </ModalHeader>\r\n      <Tabs>\r\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\r\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\r\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </Tabs>\r\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\r\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\r\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\r\n      </ModalBody>\r\n    </ModalContainer>\r\n  )\r\n}\r\n\r\nexport default WalletModal\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import { useEffect } from 'react'\r\n\r\nconst useUserAgent = () => {\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute('data-useragent', navigator.userAgent)\r\n  }, [])\r\n}\r\n\r\nexport default useUserAgent\r\n","import { useEffect } from 'react'\r\nimport history from 'routerHistory'\r\n\r\nconst useScrollOnRouteChange = () => {\r\n  useEffect(() => {\r\n    const unlisten = history.listen((args) => {\r\n      if (args.hash === '') {\r\n        setTimeout(() => {\r\n          window.scroll({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n          })\r\n        }, 50)\r\n      }\r\n    })\r\n\r\n    return () => unlisten()\r\n  }, [])\r\n}\r\n\r\nexport default useScrollOnRouteChange\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Box, CloseIcon, IconButton, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePhishingBannerManager } from 'state/user/hooks'\r\n\r\nconst Container = styled(Flex)`\r\n  overflow: hidden;\r\n  height: 100%;\r\n  padding: 12px;\r\n  align-items: center;\r\n  background: linear-gradient(0deg, rgba(39, 38, 44, 0.4), rgba(39, 38, 44, 0.4)),\r\n    linear-gradient(180deg, #8051d6 0%, #492286 100%);\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding: 0px;\r\n    background: linear-gradient(180deg, #8051d6 0%, #492286 100%);\r\n  }\r\n`\r\n\r\nconst InnerContainer = styled(Flex)`\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst SpeechBubble = styled.div`\r\n  background: rgba(39, 38, 44, 0.4);\r\n  border-radius: 16px;\r\n  padding: 8px;\r\n  width: 60%;\r\n  height: 80%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n  & ${Text} {\r\n    flex-shrink: 0;\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst PhishingWarningBanner: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const [, hideBanner] = usePhishingBannerManager()\r\n  const { isMobile, isMd } = useMatchBreakpoints()\r\n  const warningText = t(\"please make sure you're visiting https://pancakeswap.finance - check the URL carefully.\")\r\n  const warningTextAsParts = warningText.split(/(https:\\/\\/pancakeswap.finance)/g)\r\n  const warningTextComponent = (\r\n    <>\r\n      <Text as=\"span\" color=\"warning\" small bold textTransform=\"uppercase\">\r\n        {t('Phishing warning: ')}\r\n      </Text>\r\n      {warningTextAsParts.map((text, i) => (\r\n        <Text\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          key={i}\r\n          small\r\n          as=\"span\"\r\n          bold={text === 'https://pancakeswap.finance'}\r\n          color={text === 'https://pancakeswap.finance' ? '#FFFFFF' : '#BDC2C4'}\r\n        >\r\n          {text}\r\n        </Text>\r\n      ))}\r\n    </>\r\n  )\r\n  return (\r\n    <Container>\r\n      {isMobile || isMd ? (\r\n        <>\r\n          <Box>{warningTextComponent}</Box>\r\n          <IconButton onClick={hideBanner} variant=\"text\">\r\n            <CloseIcon color=\"#FFFFFF\" />\r\n          </IconButton>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <InnerContainer>\r\n            <picture>\r\n              <source type=\"image/webp\" srcSet=\"/images/decorations/phishing-warning-bunny.webp\" />\r\n              <source type=\"image/png\" srcSet=\"/images/decorations/phishing-warning-bunny.png\" />\r\n              <img src=\"/images/decorations/phishing-warning-bunny.png\" alt=\"phishing-warning\" width=\"92px\" />\r\n            </picture>\r\n            <SpeechBubble>{warningTextComponent}</SpeechBubble>\r\n          </InnerContainer>\r\n          <IconButton onClick={hideBanner} variant=\"text\">\r\n            <CloseIcon color=\"#FFFFFF\" />\r\n          </IconButton>\r\n        </>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PhishingWarningBanner\r\n","import { MenuItemsType, DropdownMenuItemType } from '@pancakeswap/uikit'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\n\r\nexport type ConfigMenuItemsType = MenuItemsType & { hideSubNav?: boolean }\r\n\r\nconst config: (t: ContextApi['t']) => ConfigMenuItemsType[] = (t) => [\r\n  {\r\n    label: t('Home'),\r\n    href: 'https://app.zeroloss.org/',\r\n    target: 'blank'\r\n    // icon: 'Earn',\r\n  },\r\n  {\r\n    label: t('Farms'),\r\n    href: '/farms',\r\n    icon: 'Earn',\r\n    showItemsOnMobile: false,\r\n  },\r\n  {\r\n    label: t('Pools'),\r\n    href: '/pools',\r\n    icon: 'Swap',\r\n    showItemsOnMobile: false,\r\n  },\r\n  \r\n  {\r\n    label: \"Trade\",\r\n    href: \"/swap\",\r\n    icon: \"Swap\",\r\n    // items: [\r\n    //   {\r\n    //     label: \"Exchange\",\r\n    //     href: \"https://exchange.pancakeswap.finance\",\r\n    //   },\r\n    //   {\r\n    //     label: \"Liquidity\",\r\n    //     href: \"https://exchange.pancakeswap.finance/#/pool\",\r\n    //   },\r\n    // ],\r\n  },\r\n\r\n  {\r\n    label: t('Earn'),\r\n    href: '/',\r\n    icon: 'Earn',\r\n    showItemsOnMobile: true,\r\n    items: [\r\n      {\r\n        label: t('Feast'),\r\n        href: '/farms',\r\n      },\r\n      {\r\n        label: t('Stake pools'),\r\n        href: '/pools',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: t('Win'),\r\n    href: '/prediction',\r\n    icon: 'Trophy',\r\n    // items: [\r\n    //   {\r\n    //     label: t('Prediction (BETA)'),\r\n    //     href: '/prediction',\r\n    //   },\r\n    //   {\r\n    //     label: t('Lottery'),\r\n    //     href: '/lottery',\r\n    //   },\r\n    // ],\r\n  },\r\n  {\r\n    label: t('NFT'),\r\n    href: `${nftsBaseUrl}`,\r\n    icon: 'Nft',\r\n    // items: [\r\n    //   {\r\n    //     label: t('Overview'),\r\n    //     href: `${nftsBaseUrl}`,\r\n    //   },\r\n    //   {\r\n    //     label: t('Collections'),\r\n    //     href: `${nftsBaseUrl}/collections`,\r\n    //   },\r\n    // ],\r\n  },\r\n  {\r\n    label: '',\r\n    href: '/info',\r\n    icon: 'More',\r\n    hideSubNav: true,\r\n    items: [\r\n      {\r\n        label: t('Info'),\r\n        // href: '/info',\r\n      },\r\n      {\r\n        label: t('IZO'),\r\n        // href: '/IZO',\r\n      },\r\n      {\r\n        label: t('Voting'),\r\n        // href: '/voting',\r\n      },\r\n      {\r\n        type: DropdownMenuItemType.DIVIDER,\r\n      },\r\n      {\r\n        label: t('Leaderboard'),\r\n        // href: '/teams',\r\n      },\r\n      {\r\n        type: DropdownMenuItemType.DIVIDER,\r\n      },\r\n      {\r\n        label: t('Blog'),\r\n        // href: 'https://medium.com/pancakeswap',\r\n        type: DropdownMenuItemType.EXTERNAL_LINK,\r\n      },\r\n      {\r\n        label: t('Docs'),\r\n        // href: 'https://docs.pancakeswap.finance',\r\n        type: DropdownMenuItemType.EXTERNAL_LINK,\r\n      },\r\n    ],\r\n  },\r\n  \r\n]\r\n\r\nexport default config\r\n","import React, { useState } from 'react'\r\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface CopyAddressProps extends FlexProps {\r\n  account: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n  border-radius: 16px;\r\n  position: relative;\r\n`\r\n\r\nconst Address = styled.div`\r\n  flex: 1;\r\n  position: relative;\r\n  padding-left: 16px;\r\n\r\n  & > input {\r\n    background: transparent;\r\n    border: 0;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    display: block;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    padding: 0;\r\n    width: 100%;\r\n\r\n    &:focus {\r\n      outline: 0;\r\n    }\r\n  }\r\n\r\n  &:after {\r\n    background: linear-gradient(\r\n      to right,\r\n      ${({ theme }) => theme.colors.background}00,\r\n      ${({ theme }) => theme.colors.background}E6\r\n    );\r\n    content: '';\r\n    height: 100%;\r\n    pointer-events: none;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    width: 40px;\r\n  }\r\n`\r\n\r\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\r\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\r\n  position: absolute;\r\n  padding: 8px;\r\n  top: -38px;\r\n  right: 0;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.colors.contrast};\r\n  color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: 16px;\r\n  opacity: 0.7;\r\n  width: 100px;\r\n`\r\n\r\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\r\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\r\n  const { t } = useTranslation()\r\n\r\n  const copyAddress = () => {\r\n    if (navigator.clipboard && navigator.permissions) {\r\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\r\n    } else if (document.queryCommandSupported('copy')) {\r\n      const ele = document.createElement('textarea')\r\n      ele.value = account\r\n      document.body.appendChild(ele)\r\n      ele.select()\r\n      document.execCommand('copy')\r\n      document.body.removeChild(ele)\r\n      displayTooltip()\r\n    }\r\n  }\r\n\r\n  function displayTooltip() {\r\n    setIsTooltipDisplayed(true)\r\n    setTimeout(() => {\r\n      setIsTooltipDisplayed(false)\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\" {...props}>\r\n      <Wrapper>\r\n        <Address title={account}>\r\n          <input type=\"text\" readOnly value={account} />\r\n        </Address>\r\n        <IconButton variant=\"text\" onClick={copyAddress}>\r\n          <CopyIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n      </Wrapper>\r\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CopyAddress\r\n","import React from 'react'\r\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTokenBalance, { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBscScanLink } from 'utils'\r\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\r\nimport tokens from 'config/constants/tokens'\r\nimport CopyAddress from './CopyAddress'\r\n\r\ninterface WalletInfoProps {\r\n  hasLowBnbBalance: boolean\r\n  onDismiss: InjectedModalProps['onDismiss']\r\n}\r\n\r\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { balance, fetchStatus } = useGetBnbBalance()\r\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useTokenBalance(tokens.zlt.address)\r\n  const { logout } = useAuth()\r\n\r\n  const handleLogout = () => {\r\n    onDismiss()\r\n    logout()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\r\n        {t('Your Address')}\r\n      </Text>\r\n      <CopyAddress account={account} mb=\"24px\" />\r\n      {hasLowBnbBalance && (\r\n        <Message variant=\"warning\" mb=\"24px\">\r\n          <Box>\r\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\r\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\r\n          </Box>\r\n        </Message>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\r\n        {fetchStatus !== FetchStatus.SUCCESS ? (\r\n          <Skeleton height=\"22px\" width=\"60px\" />\r\n        ) : (\r\n          <Text>{formatBigNumber(balance, 6)}</Text>\r\n        )}\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text color=\"textSubtle\">{t('ZLT Balance')}</Text>\r\n        {cakeFetchStatus !== FetchStatus.SUCCESS ? (\r\n          <Skeleton height=\"22px\" width=\"60px\" />\r\n        ) : (\r\n          <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\r\n        )}\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\r\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\r\n      </Flex>\r\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\r\n        {t('Disconnect Wallet')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WalletInfo\r\n","import React from 'react'\r\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\n\r\ninterface TransactionRowProps {\r\n  txn: TransactionDetails\r\n}\r\n\r\nconst TxnIcon = styled(Flex)`\r\n  align-items: center;\r\n  flex: none;\r\n  width: 24px;\r\n`\r\n\r\nconst Summary = styled.div`\r\n  flex: 1;\r\n  padding: 0 8px;\r\n`\r\n\r\nconst TxnLink = styled(Link)`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst renderIcon = (txn: TransactionDetails) => {\r\n  if (!txn.receipt) {\r\n    return <RefreshIcon spin width=\"24px\" />\r\n  }\r\n\r\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\r\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\r\n  ) : (\r\n    <BlockIcon color=\"failure\" width=\"24px\" />\r\n  )\r\n}\r\n\r\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  if (!txn) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\r\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\r\n      <Summary>{txn.summary ?? txn.hash}</Summary>\r\n      <TxnIcon>\r\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\r\n      </TxnIcon>\r\n    </TxnLink>\r\n  )\r\n}\r\n\r\nexport default TransactionRow\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\r\nimport { AppDispatch } from 'state'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { clearAllTransactions } from 'state/transactions/actions'\r\nimport { orderBy } from 'lodash'\r\nimport TransactionRow from './TransactionRow'\r\n\r\nconst WalletTransactions: React.FC = () => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { t } = useTranslation()\r\n  const allTransactions = useAllTransactions()\r\n  const sortedTransactions = orderBy(Object.values(allTransactions).filter(isTransactionRecent), 'addedTime', 'desc')\r\n\r\n  const handleClearAll = () => {\r\n    if (chainId) {\r\n      dispatch(clearAllTransactions({ chainId }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box minHeight=\"120px\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\r\n          {t('Recent Transactions')}\r\n        </Text>\r\n        {sortedTransactions.length > 0 && (\r\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\r\n            {t('Clear all')}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n      {sortedTransactions.length > 0 ? (\r\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\r\n      ) : (\r\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default WalletTransactions\r\n","import React from 'react'\r\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface WalletUserMenuItemProps {\r\n  hasLowBnbBalance: boolean\r\n  onPresentWalletModal: () => void\r\n}\r\n\r\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n        {t('Wallet')}\r\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\r\n      </Flex>\r\n    </UserMenuItem>\r\n  )\r\n}\r\n\r\nexport default WalletUserMenuItem\r\n","import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n  Flex,\r\n  LogoutIcon,\r\n  useModal,\r\n  UserMenu as UIKitUserMenu,\r\n  UserMenuDivider,\r\n  UserMenuItem,\r\n} from '@pancakeswap/uikit'\r\nimport history from 'routerHistory'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\r\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\r\nimport WalletUserMenuItem from './WalletUserMenuItem'\r\n\r\nconst UserMenu = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { logout } = useAuth()\r\n  const { balance, fetchStatus } = useGetBnbBalance()\r\n  const { isInitialized, isLoading, profile } = useProfile()\r\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\r\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\r\n  const hasProfile = isInitialized && !!profile\r\n  const avatarSrc = profile?.nft?.image?.thumbnail\r\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\r\n\r\n  if (!account) {\r\n    return <ConnectWalletButton scale=\"sm\" />\r\n  }\r\n\r\n  return (\r\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\r\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\r\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\r\n        {t('Transactions')}\r\n      </UserMenuItem>\r\n      <UserMenuDivider />\r\n      <UserMenuItem as=\"button\" onClick={logout}>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n          {t('Disconnect')}\r\n          <LogoutIcon />\r\n        </Flex>\r\n      </UserMenuItem>\r\n    </UIKitUserMenu>\r\n  )\r\n}\r\n\r\nexport default UserMenu\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\r\nimport { languageList } from 'config/localization/languages'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PhishingWarningBanner from 'components/PhishingWarningBanner'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceCakeBusd, useLpTokenPrice, useFarms } from 'state/farms/hooks'\r\nimport { usePools} from 'state/pools/hooks'\r\nimport { usePhishingBannerManager } from 'state/user/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport Balance from 'components/Balance'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport config from './config/config'\r\nimport UserMenu from './UserMenu'\r\nimport GlobalSettings from './GlobalSettings'\r\nimport { getActiveMenuItem, getActiveSubMenuItem } from './utils'\r\n\r\n\r\n// const Navibar = styled.div`\r\n// @media screen and (max-width: 768px)\r\n// .gRFMSu {\r\n//   padding: 40px 16px !important;\r\n//   margin-bottom: 44px !important;\r\n// }\r\n// .kkrQbD{\r\n//   width: 100% !important;\r\n// }\r\n// .fIoRCC {\r\n//   display: flex;\r\n//     -webkit-box-pack: center;\r\n//     justify-content: center;\r\n// }\r\n// .giQwQS {\r\n//   display: flex;\r\n//   flex-direction: column;\r\n// }\r\n\r\n// }\r\n// `\r\nconst totalStakedPoolAmount = (pools) => {\r\n\r\n  let totalValue = 0\r\n  const tvl = [\r\n    {\r\n      label : \"Total Value Locked\",\r\n      items : [\r\n        {\r\n          label : \"\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  pools.forEach(pool => {\r\n    const { sousId, stakingToken, totalStaked, isAutoVault, earningTokenPrice } = pool\r\n    totalValue += getBalanceNumber(totalStaked, stakingToken.decimals) * earningTokenPrice\r\n  });\r\n\r\n  if (Number.isNaN(totalValue))\r\n    totalValue = 0\r\n\r\n  tvl[0].items[0].label = \"$\".concat(totalValue.toFixed(8).toString())\r\n  return tvl\r\n}\r\n\r\nconst totalStakedFarmsAmount = (farms, lpPrice) => {\r\n\r\n  let totalValue = 0\r\n  const tvl = [\r\n    {\r\n      label : \"Total Value Locked\",\r\n      items : [\r\n        {\r\n          label : \"\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  \r\n  farms.forEach(farm => {\r\n    const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(lpPrice)\r\n    if (totalLiquidity)\r\n      totalValue += totalLiquidity.toNumber()\r\n  });\r\n\r\n  if (Number.isNaN(totalValue))\r\n    totalValue = 0\r\n  tvl[0].items[0].label = \"$\".concat(totalValue.toFixed(8).toString())\r\n  return tvl\r\n}\r\n\r\nconst Menu = (props) => {\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const lpPrice = useLpTokenPrice(\"ZLT-BNB LP\")\r\n  const { currentLanguage, setLanguage, t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const [showPhishingWarningBanner] = usePhishingBannerManager()\r\n  const {pools} = usePools()\r\n  const {data:farmsLP} = useFarms()\r\n\r\n  const activeMenuItem = getActiveMenuItem({ menuConfig: config(t), pathname })\r\n  // const activeSubMenuItem = getActiveSubMenuItem({ menuItem: activeMenuItem, pathname })\r\n\r\n  const footerLinkValue = (!activeMenuItem || activeMenuItem.label.startsWith(\"Farms\")) ? totalStakedFarmsAmount(farmsLP, lpPrice) : totalStakedPoolAmount(pools)\r\n\r\n  return (\r\n    // <Navibar>\r\n    <UikitMenu\r\n      userMenu={<UserMenu />}\r\n      globalMenu={<GlobalSettings />}\r\n      banner={false && <PhishingWarningBanner />}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={currentLanguage.code}\r\n      langs={languageList}\r\n      setLang={setLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config(t)}\r\n      subLinks={activeMenuItem?.hideSubNav ? [] : activeMenuItem?.items}\r\n      footerLinks={footerLinkValue}\r\n      activeItem={activeMenuItem?.href}\r\n      // activeSubItem={activeSubMenuItem?.href}\r\n      buyCakeLabel={t('Buy ZLT')}\r\n      {...props}\r\n    />\r\n    // </Navibar>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import { ConfigMenuItemsType } from './config/config'\r\n\r\nexport const getActiveMenuItem = ({ pathname, menuConfig }: { pathname: string; menuConfig: ConfigMenuItemsType[] }) =>\r\n  menuConfig.find((menuItem) => pathname.startsWith(menuItem.href))// || getActiveSubMenuItem({ menuItem, pathname }))\r\n\r\nexport const getActiveSubMenuItem = ({ pathname, menuItem }: { pathname: string; menuItem?: ConfigMenuItemsType }) => {\r\n  const activeSubMenuItems = menuItem?.items.filter((subMenuItem) => pathname.startsWith(subMenuItem.href)) ?? []\r\n\r\n  // Pathname doesn't include any submenu item href - return undefined\r\n  if (!activeSubMenuItems || activeSubMenuItems.length === 0) {\r\n    return undefined\r\n  }\r\n\r\n  // Pathname includes one sub menu item href - return it\r\n  if (activeSubMenuItems.length === 1) {\r\n    return activeSubMenuItems[0]\r\n  }\r\n\r\n  // Pathname includes multiple sub menu item hrefs - find the most specific match\r\n  const mostSpecificMatch = activeSubMenuItems.sort(\r\n    (subMenuItem1, subMenuItem2) => subMenuItem2.href.length - subMenuItem1.href.length,\r\n  )[0]\r\n\r\n  return mostSpecificMatch\r\n}\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default React.memo(EasterEgg)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { AutoRenewIcon, Box, Button, Flex, InjectedModalProps, Modal, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport confetti from 'canvas-confetti'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAnniversaryAchievementContract } from 'hooks/useContract'\r\nimport { delay } from 'lodash'\r\n\r\nconst AnniversaryImage = styled.img`\r\n  border-radius: 50%;\r\n  height: 128px;\r\n  margin-bottom: 24px;\r\n  margin-right: 8px;\r\n  width: 128px;\r\n`\r\n\r\nconst showConfetti = () => {\r\n  confetti({\r\n    particleCount: 200,\r\n    startVelocity: 30,\r\n    gravity: 0.5,\r\n    spread: 350,\r\n    origin: {\r\n      x: 0.5,\r\n      y: 0.3,\r\n    },\r\n  })\r\n}\r\n\r\nconst AnniversaryAchievementModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { claimAnniversaryPoints } = useAnniversaryAchievementContract()\r\n\r\n  const handleClick = async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      await claimAnniversaryPoints()\r\n    } finally {\r\n      onDismiss()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    delay(showConfetti, 100)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\r\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        <Box>\r\n          <AnniversaryImage src=\"/images/achievements/1-year.svg\" />\r\n        </Box>\r\n        <Text textAlign=\"center\" bold color=\"secondary\" maxWidth=\"400px\" fontSize=\"16px\" mb=\"24px\">\r\n          {t('You won points for joining PancakeSwap during the first year of our journey!')}\r\n        </Text>\r\n        <Button\r\n          disabled={isLoading}\r\n          onClick={handleClick}\r\n          endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n        >\r\n          {isLoading ? t('Claiming...') : t('Claim now')}\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AnniversaryAchievementModal\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useModal } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getAnniversaryAchievementContract } from 'utils/contractHelpers'\r\nimport AnniversaryAchievementModal from './AnniversaryAchievementModal'\r\n\r\ninterface GlobalCheckClaimStatusProps {\r\n  excludeLocations: string[]\r\n}\r\n\r\n/**\r\n * This is represented as a component rather than a hook because we need to keep it\r\n * inside the Router.\r\n *\r\n * TODO: Put global checks in redux or make a generic area to house global checks\r\n */\r\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\r\n  const hasDisplayedModal = useRef(false)\r\n  const [canClaimAnniversaryPoints, setCanClaimAnniversaryPoints] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const { pathname } = useLocation()\r\n  const [onPresentAnniversaryModal] = useModal(<AnniversaryAchievementModal />)\r\n\r\n  // Check claim status\r\n  useEffect(() => {\r\n    const fetchClaimAnniversaryStatus = async () => {\r\n      const { canClaim } = getAnniversaryAchievementContract()\r\n      const canClaimAnniversary = await canClaim(account)\r\n      setCanClaimAnniversaryPoints(canClaimAnniversary)\r\n    }\r\n\r\n    if (account) {\r\n      fetchClaimAnniversaryStatus()\r\n    }\r\n  }, [account])\r\n\r\n  // Check if we need to display the modal\r\n  useEffect(() => {\r\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\r\n\r\n    if (canClaimAnniversaryPoints && !matchesSomeLocations && !hasDisplayedModal.current) {\r\n      onPresentAnniversaryModal()\r\n      hasDisplayedModal.current = true\r\n    }\r\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentAnniversaryModal, canClaimAnniversaryPoints])\r\n\r\n  // Reset the check flag when account changes\r\n  useEffect(() => {\r\n    hasDisplayedModal.current = false\r\n  }, [account, hasDisplayedModal])\r\n\r\n  return null\r\n}\r\n\r\nexport default GlobalCheckClaimStatus\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nconst ApyLabelContainer = styled(Flex)`\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\ninterface AprRowProps {\r\n  pool: DeserializedPool\r\n  stakedBalance: BigNumber\r\n  performanceFee?: number\r\n}\r\n\r\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\r\n  const { t } = useTranslation()\r\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\r\n    pool\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const tooltipContent = isAutoVault\r\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\r\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <RoiCalculatorModal\r\n      earningTokenPrice={earningTokenPrice}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink}\r\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\r\n      stakingTokenSymbol={stakingToken.symbol}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      autoCompoundFrequency={autoCompoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\r\n      {earningsPercentageToDisplay || isFinished ? (\r\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\r\n          <Balance\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={isFinished ? 0 : earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n            onClick={onPresentApyModal}\r\n          />\r\n          {!isFinished && (\r\n            <IconButton variant=\"text\" scale=\"sm\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n            </IconButton>\r\n          )}\r\n        </ApyLabelContainer>\r\n      ) : (\r\n        <Skeleton width=\"82px\" height=\"32px\" />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AprRow\r\n","import styled from 'styled-components'\r\nimport { Card } from '@pancakeswap/uikit'\r\n\r\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\r\n  max-width: 352px;\r\n  margin: 0 8px 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: baseline;\r\n  position: relative;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin: 0 12px 46px;\r\n  }\r\n`\r\n\r\nexport default StyledCard\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useCakeVaultContract, useMasterchef } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport Balance from 'components/Balance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { emergencyWithdraw } from 'utils/calls/farms'\r\n\r\ninterface EmWithdrawModalProps {\r\n  onDismiss?: () => void\r\n  PID: number\r\n}\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst EmWithdrawModal: React.FC<EmWithdrawModalProps> = ({ onDismiss, PID }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const {\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: { callFee },\r\n  } = useCakeVault()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const callFeeAsDecimal = callFee / 100\r\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\r\n\r\n  const estimatedDollarBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\r\n  }, [cakePriceBusd, estimatedCakeBountyReward])\r\n\r\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\r\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\r\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\r\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\r\n\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      const tx = await emergencyWithdraw(masterChefContract, PID)\r\n      const receipt = await tx.wait()\r\n      setPendingTx(false)\r\n      onDismiss()\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      onDismiss()\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Emergency Withdrawal?')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\r\n        <Text>{t('Do you really want to emergency withdraw?')}</Text>\r\n      </Flex>\r\n      <Divider />\r\n      {account ? (\r\n        <Button\r\n          isLoading={pendingTx}\r\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          onClick={handleConfirmClick}\r\n          mb=\"28px\"\r\n          id=\"autoCakeConfirmBounty\"\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n        \r\n      ) : (\r\n        <ConnectWalletButton mb=\"28px\" />\r\n      )}\r\n      \r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EmWithdrawModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport {\r\n  Flex,\r\n  MetamaskIcon,\r\n  Text,\r\n  TooltipText,\r\n  LinkExternal,\r\n  TimerIcon,\r\n  Skeleton,\r\n  useTooltip,\r\n  Button,\r\n  Link,\r\n  HelpIcon,\r\n  useModal,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBscScanLink } from 'utils'\r\nimport Balance from 'components/Balance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport EmWithdrawModal from '../EmWithdrawModal'\r\n\r\n\r\ninterface ExpandedFooterProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n}\r\n\r\nconst ExpandedWrapper = styled(Flex)`\r\n  svg {\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\n\r\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\r\n  const { t } = useTranslation()\r\n  const { currentBlock } = useBlock()\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const {\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    sousId,\r\n    isAutoVault,\r\n  } = pool\r\n\r\n  const tokenAddress = earningToken.address || ''\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  const [onEmergencyWithdraw] = useModal(<EmWithdrawModal PID={pool.sousId} />)\r\n\r\n  return (\r\n    <ExpandedWrapper flexDirection=\"column\">\r\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text small>{t('Total ZLT staked')}:</Text>\r\n        <Flex alignItems=\"flex-start\">\r\n          {totalStaked && totalStaked.gte(0) ? (\r\n            <>\r\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n            </>\r\n          ) : (\r\n            <Skeleton width=\"90px\" height=\"21px\" />\r\n          )}\r\n          {totalStakedTooltipVisible && totalStakedTooltip}\r\n        </Flex>\r\n      </Flex>\r\n{/* Total staked copied */}\r\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text small>{t('Total Liquidity')}:</Text>\r\n        <Flex alignItems=\"flex-start\">\r\n          {totalStaked && totalStaked.gte(0) ? (\r\n            <>\r\n              <Balance small value={pool.stakingTokenPrice * getTotalStakedBalance()} decimals={10} prefix={`${'$'}`} />\r\n            </>\r\n          ) : (\r\n            <Skeleton width=\"90px\" height=\"21px\" />\r\n          )}\r\n          {totalStakedTooltipVisible && totalStakedTooltip}\r\n        </Flex>\r\n      </Flex>\r\n      {stakingLimit && stakingLimit.gt(0) && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\r\n          <Text small>{t('Max. stake per user')}:</Text>\r\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n        </Flex>\r\n      )}\r\n      {shouldShowBlockCountdown && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n          {blocksRemaining || blocksUntilStart ? (\r\n            <Flex alignItems=\"center\">\r\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\r\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n                  {t('Blocks')}\r\n                </Text>\r\n                <TimerIcon ml=\"4px\" color=\"primary\" />\r\n              </Link>\r\n            </Flex>\r\n          ) : (\r\n            <Skeleton width=\"54px\" height=\"21px\" />\r\n          )}\r\n        </Flex>\r\n      )}\r\n      {isAutoVault && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {tooltipVisible && tooltip}\r\n          <TooltipText ref={targetRef} small>\r\n            {t('Performance Fee')}\r\n          </TooltipText>\r\n          <Flex alignItems=\"center\">\r\n            {performanceFee ? (\r\n              <Text ml=\"4px\" small>\r\n                {performanceFee / 100}%\r\n              </Text>\r\n            ) : (\r\n              <Skeleton width=\"90px\" height=\"21px\" />\r\n            )}\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={`https://app.dodoex.io/pool/list/${earningToken.address}`} bold={false} small>\r\n          {t('See Token Info')}\r\n        </LinkExternal>\r\n      </Flex>\r\n{/* Delete this item */}\r\n      {/* <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\r\n          {t('View Project Site')}\r\n        </LinkExternal>\r\n      </Flex> */}\r\n      {poolContractAddress && (\r\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n          <LinkExternal\r\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n            bold={false}\r\n            small\r\n          >\r\n            {t('View Contract')}\r\n          </LinkExternal>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"flex-end\">\r\n        <Button\r\n          variant=\"text\"\r\n          p=\"0\"\r\n          height=\"auto\"\r\n          onClick={onEmergencyWithdraw}\r\n        >\r\n          <Text color=\"gold\">\r\n            {t('Emergency Withdrawal')}\r\n          </Text>\r\n        </Button>\r\n      </Flex>\r\n      {account && isMetaMaskInScope && tokenAddress && (\r\n        <Flex justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"text\"\r\n            p=\"0\"\r\n            height=\"auto\"\r\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\r\n          >\r\n            <Text color=\"primary\" fontSize=\"14px\">\r\n              {t('Add to Metamask')}\r\n            </Text>\r\n            <MetamaskIcon ml=\"4px\" />\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n    </ExpandedWrapper>\r\n  )\r\n}\r\n\r\nexport default React.memo(ExpandedFooter)\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport ExpandedFooter from './ExpandedFooter'\r\n\r\ninterface FooterProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  totalCakeInVault?: BigNumber\r\n}\r\n\r\nconst ExpandableButtonWrapper = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  button {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\r\n  const { isAutoVault } = pool\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually. \\r\\n\\rWARNING: Compounding your Zero Loss will reset your lock time!')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <CardFooter>\r\n      <ExpandableButtonWrapper>\r\n        <Flex alignItems=\"center\">\r\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n          {tooltipVisible && tooltip}\r\n          <Flex ref={targetRef}>\r\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"primary\" />\r\n          </Flex>\r\n        </Flex>\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </ExpandableButtonWrapper>\r\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\r\nimport { mainnetTokens } from 'config/constants/tokens'\r\n\r\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\r\n  const primaryTokenSrc = `/images/tokens/${mainnetTokens.cake.address}.svg`\r\n\r\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\r\n}\r\n\r\nexport default CakeVaultTokenPairImage\r\n","import React from 'react'\r\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TokenImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\r\n\r\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\r\n  background: ${({ isFinished, background, theme }) =>\r\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\r\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\r\n  background: #20252d !important\r\n`\r\n\r\nconst StyledCardHeader: React.FC<{\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  isAutoVault?: boolean\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\r\n  const { t } = useTranslation()\r\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\r\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n\r\n  const getHeadingPrefix = () => {\r\n    if (isAutoVault) {\r\n      // vault\r\n      return t('Auto')\r\n    }\r\n    if (isCakePool) {\r\n      // manual cake\r\n      return t('Manual')\r\n    }\r\n    // all other pools\r\n    return t('Earn')\r\n  }\r\n\r\n  const getSubHeading = () => {\r\n    if (isAutoVault) {\r\n      return t('Automatic restaking')\r\n    }\r\n    if (isCakePool) {\r\n      return t('Earn CAKE, stake CAKE')\r\n    }\r\n    return t('Stake %symbol%, Earn %symbol%', { symbol: stakingToken.symbol })\r\n  }\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Flex flexDirection=\"column\">\r\n          <Heading color={isFinished ? 'textDisabled' : 'white'} scale=\"lg\">\r\n            {`${earningToken.symbol}`}\r\n          </Heading>\r\n          <Text color={isFinished ? 'textDisabled' : 'white'}>{getSubHeading()}</Text>\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <CakeVaultTokenPairImage width={64} height={64} />\r\n        ) : (\r\n          <TokenImage token={earningToken} width={64} height={64} />\r\n        )}\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StyledCardHeader\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers, Contract } from 'ethers'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserAllowance } from 'state/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport useLastUpdated from 'hooks/useLastUpdated'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\n\r\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\r\n      const receipt = await tx.wait()\r\n\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Contract Enabled'),\r\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\r\n          </ToastDescriptionWithTx>,\r\n        )\r\n        setRequestedApproval(false)\r\n      } else {\r\n        // user rejected tx or didn't go thru\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }, [\r\n    account,\r\n    dispatch,\r\n    lpContract,\r\n    sousChefContract,\r\n    sousId,\r\n    earningTokenSymbol,\r\n    t,\r\n    toastError,\r\n    toastSuccess,\r\n    callWithGasPrice,\r\n  ])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\n// Approve CAKE auto pool\r\nexport const useVaultApprove = (setLastUpdated: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const cakeContract = useCake()\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\r\n    setRequestedApproval(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(\r\n        t('Contract Enabled'),\r\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\r\n        </ToastDescriptionWithTx>,\r\n      )\r\n      setLastUpdated()\r\n      setRequestedApproval(false)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setRequestedApproval(false)\r\n    }\r\n  }\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport const useCheckVaultApprovalStatus = () => {\r\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      try {\r\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\r\n        setIsVaultApproved(currentAllowance.gt(0))\r\n      } catch (error) {\r\n        setIsVaultApproved(false)\r\n      }\r\n    }\r\n\r\n    checkApprovalStatus()\r\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\r\n\r\n  return { isVaultApproved, setLastUpdated }\r\n}\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useApprovePool } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  pool: DeserializedPool\r\n  isLoading?: boolean\r\n}\r\n\r\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\r\n  const { sousId, stakingToken, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenContract = useERC20(stakingToken.address || '')\r\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApprovalAction\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface NotEnoughTokensModalProps {\r\n  tokenSymbol: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('%symbol% required', { symbol: tokenSymbol })}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Text color=\"failure\" bold>\r\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\r\n      </Text>\r\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\r\n      <Text>\r\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\r\n          symbol: tokenSymbol,\r\n        })}\r\n      </Text>\r\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\r\n        {t('Buy')} {tokenSymbol}\r\n      </Button>\r\n      <StyledLink href=\"https://yieldwatch.net\" external>\r\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\r\n          {t('Locate Assets')}\r\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\r\n        </Button>\r\n      </StyledLink>\r\n      <Button variant=\"text\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NotEnoughTokensModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap/uikit'\r\n\r\ninterface PercentageButtonProps {\r\n  onClick: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default PercentageButton\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stakeFarm } from 'utils/calls'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\r\n    ...options,\r\n    gasPrice,\r\n  })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousStakeBnb = async (sousChefContract, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\r\n    ...options,\r\n    gasPrice,\r\n  })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await stakeFarm(masterChefContract, 0, amount)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount)\r\n      } else {\r\n        // await sousStake(sousChefContract, amount, decimals)\r\n        await stakeFarm(masterChefContract, sousId, amount)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStakePool\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { unstakeFarm } from 'utils/calls'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport getGasPrice from 'utils/getGasPrice'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst sousUnstake = async (sousChefContract: any, sousId: number, amount: string, decimals: number) => {\r\n  const gasPrice = getGasPrice()\r\n  const units = parseUnits(amount, decimals)\r\n  const tx = await sousChefContract.withdraw(sousId.toString(), units.toString(), {\r\n    gasPrice,\r\n  })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousEmergencyUnstake = async (sousChefContract: any) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await unstakeFarm(masterChefContract, 0, amount)\r\n      } else if (enableEmergencyWithdraw) {\r\n        await sousEmergencyUnstake(sousChefContract)\r\n        // await sousEmergencyUnstake(masterChefContract)\r\n      } else {\r\n        // await sousUnstake(sousChefContract, amount, decimals)\r\n        // await sousUnstake(masterChefContract, sousId, amount, decimals)\r\n        await unstakeFarm(masterChefContract, sousId, amount)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstakePool\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Flex,\r\n  Image,\r\n  Button,\r\n  Slider,\r\n  BalanceInput,\r\n  AutoRenewIcon,\r\n  Link,\r\n  CalculateIcon,\r\n  IconButton,\r\n  Message\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport BigNumber from 'bignumber.js'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\r\nimport PercentageButton from './PercentageButton'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\nimport useUnstakePool from '../../../hooks/useUnstakePool'\r\n\r\ninterface StakeModalProps {\r\n  isBnbPool: boolean\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenPrice: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n  onStaked?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst AnnualRoiContainer = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst AnnualRoiDisplay = styled(Text)`\r\n  width: 72px;\r\n  max-width: 72px;\r\n  overflow: hidden;\r\n  text-align: right;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst StakeModal: React.FC<StakeModalProps> = ({\r\n  isBnbPool,\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakingTokenPrice,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n  onStaked,\r\n}) => {\r\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\r\n  const [percent, setPercent] = useState(0)\r\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\r\n  const getCalculatedStakingLimit = () => {\r\n    if (isRemovingStake) {\r\n      return userData.stakedBalance\r\n    }\r\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\r\n  }\r\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n  const userNotEnoughToken = isRemovingStake\r\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\r\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\r\n\r\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\r\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\r\n\r\n  const interestBreakdown = getInterestBreakdown({\r\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\r\n    apr,\r\n    earningTokenPrice,\r\n  })\r\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\r\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\r\n\r\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  useEffect(() => {\r\n    if (stakingLimit.gt(0) && !isRemovingStake) {\r\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\r\n    }\r\n  }, [\r\n    stakeAmount,\r\n    stakingLimit,\r\n    userData,\r\n    stakingToken,\r\n    isRemovingStake,\r\n    setHasReachedStakedLimit,\r\n    fullDecimalStakeAmount,\r\n  ])\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\r\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\r\n      setPercent(Math.min(percentage, 100))\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      if (isRemovingStake) {\r\n        // unstaking\r\n        await onUnstake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Unstaked')}!`,\r\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\r\n            symbol: earningToken.symbol,\r\n          }),\r\n        )\r\n      } else {\r\n        // staking\r\n        await onStake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Staked')}!`,\r\n          t('Your %symbol% funds have been staked in the pool!', {\r\n            symbol: stakingToken.symbol,\r\n          }),\r\n        )\r\n        onStaked()\r\n      }\r\n      setPendingTx(false)\r\n      onDismiss()\r\n    } catch (e) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  if (showRoiCalculator) {\r\n    return (\r\n      <RoiCalculatorModal\r\n        earningTokenPrice={earningTokenPrice}\r\n        stakingTokenPrice={stakingTokenPrice}\r\n        apr={apr}\r\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        linkHref={getTokenLink}\r\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\r\n        stakingTokenSymbol={stakingToken.symbol}\r\n        earningTokenSymbol={earningToken.symbol}\r\n        onBack={() => setShowRoiCalculator(false)}\r\n        initialValue={stakeAmount}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      minWidth=\"346px\"\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {stakingLimit.gt(0) && !isRemovingStake && (\r\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\r\n          {t('Max stake for this pool: %amount% %token%', {\r\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\r\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      {hasReachedStakeLimit && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Maximum total stake: %amount% %token%', {\r\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      {userNotEnoughToken && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Insufficient %symbol% balance', {\r\n            symbol: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', {\r\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\r\n        })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\r\n      </Flex>\r\n      {!isRemovingStake && (\r\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ maxWidth: '360px' }}>\r\n          <Message variant=\"warning\" mb=\"24px\">\r\n            <Text>\r\n              {t(\"Warning: Staking additional tokens will reset the lock timer for ALL of your staked tokens in this pool.\",\r\n              )}\r\n            </Text>\r\n        </Message>\r\n        </Flex>\r\n      )}\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <StyledLink external href={getTokenLink}>\r\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\r\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n          </Button>\r\n        </StyledLink>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeModal\r\n","import React, { useState }  from 'react'\r\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../Modals/StakeModal'\r\n\r\ninterface StakeActionsProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  isBnbPool: boolean\r\n  isStaked: ConstrainBoolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst StakeAction: React.FC<StakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakedBalance,\r\n  isBnbPool,\r\n  isStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [withdrawLocked, setWidrawLocked] = useState(false)\r\n  const onStaked = () => {\r\n    setWidrawLocked(true)\r\n  }\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      onStaked={onStaked}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  const renderStakeAction = () => {\r\n    return isStaked ? (\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          <>\r\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\r\n            {stakingTokenPrice !== 0 && (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={stakedTokenDollarBalance}\r\n                  prefix=\"~\"\r\n                  unit=\" USD\"\r\n                />\r\n              </Text>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex>\r\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} disabled={withdrawLocked} mr=\"6px\">\r\n            <MinusIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n          {reachStakingLimit ? (\r\n            <span ref={targetRef}>\r\n              <IconButton variant=\"secondary\" disabled>\r\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n              </IconButton>\r\n            </span>\r\n          ) : (\r\n            <IconButton\r\n              variant=\"secondary\"\r\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n              disabled={isFinished}\r\n            >\r\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n            </IconButton>\r\n          )}\r\n        </Flex>\r\n        {tooltipVisible && tooltip}\r\n      </Flex>\r\n    ) : (\r\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n        {t('Stake')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default StakeAction\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport getGasPrice from 'utils/getGasPrice'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport { DEFAULT_GAS_LIMIT } from 'config'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst harvestPool = async (sousChefContract) => {\r\n  const gasPrice = getGasPrice()\r\n  // const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\r\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst harvestPoolBnb = async (sousChefContract) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvestFarm(masterChefContract, 0)\r\n    } else if (isUsingBnb) {\r\n      await harvestPoolBnb(sousChefContract)\r\n    } else {\r\n      // await harvestPool(sousChefContract)\r\n      await harvestFarm(masterChefContract, sousId)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useHarvestPool\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  Flex,\r\n  AutoRenewIcon,\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  HelpIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport useHarvestPool from '../../../hooks/useHarvestPool'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\n\r\ninterface CollectModalProps {\r\n  formattedBalance: string\r\n  fullBalance: string\r\n  earningToken: Token\r\n  earningsDollarValue: number\r\n  sousId: number\r\n  isBnbPool: boolean\r\n  isCompoundPool?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst CollectModal: React.FC<CollectModalProps> = ({\r\n  formattedBalance,\r\n  fullBalance,\r\n  earningToken,\r\n  earningsDollarValue,\r\n  sousId,\r\n  isBnbPool,\r\n  isCompoundPool = false,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text mb=\"12px\">{t('Compound: collect and restake ZLT into pool.')}</Text>\r\n      <Text>{t('Harvest: collect ZLT and send to wallet')}</Text>\r\n    </>,\r\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const handleHarvestConfirm = async () => {\r\n    setPendingTx(true)\r\n    // compounding\r\n    if (shouldCompound) {\r\n      try {\r\n        await onStake(fullBalance, earningToken.decimals)\r\n        toastSuccess(\r\n          `${t('Compounded')}!`,\r\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // harvesting\r\n      try {\r\n        await onReward()\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {isCompoundPool && (\r\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\r\n          <ButtonMenu\r\n            activeIndex={shouldCompound ? 0 : 1}\r\n            scale=\"sm\"\r\n            variant=\"subtle\"\r\n            onItemClick={(index) => setShouldCompound(!index)}\r\n          >\r\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\r\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n          <Flex ml=\"10px\" ref={targetRef}>\r\n            <HelpIcon color=\"textSubtle\" />\r\n          </Flex>\r\n          {tooltipVisible && tooltip}\r\n        </Flex>\r\n      )}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Heading>\r\n            {formattedBalance} {earningToken.symbol}\r\n          </Heading>\r\n          {earningsDollarValue > 0 && (\r\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Button\r\n        mt=\"8px\"\r\n        onClick={handleHarvestConfirm}\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CollectModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport CollectModal from '../Modals/CollectModal'\r\n\r\ninterface HarvestActionsProps {\r\n  earnings: BigNumber\r\n  earningToken: Token\r\n  sousId: number\r\n  earningTokenPrice: number\r\n  isBnbPool: boolean\r\n  isLoading?: boolean\r\n  canHarvest?: boolean\r\n}\r\n\r\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\r\n  earnings,\r\n  earningToken,\r\n  sousId,\r\n  isBnbPool,\r\n  earningTokenPrice,\r\n  isLoading = false,\r\n  canHarvest = false\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const hasEarnings = earnings.toNumber() > 0\r\n  const isCompoundPool = true\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\r\n      <Flex flexDirection=\"column\">\r\n        {isLoading ? (\r\n          <Skeleton width=\"80px\" height=\"48px\" />\r\n        ) : (\r\n          <>\r\n            {(hasEarnings) ? (\r\n              <>\r\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Flex>\r\n      <Button disabled={!(hasEarnings && canHarvest)} onClick={onPresentCollect}>\r\n        {isCompoundPool ? t('Collect') : t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { DeserializedPool } from 'state/types'\r\nimport ApprovalAction from './ApprovalAction'\r\nimport StakeActions from './StakeActions'\r\nimport HarvestActions from './HarvestActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\ninterface CardActionsProps {\r\n  pool: DeserializedPool\r\n  stakedBalance: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\r\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const { t } = useTranslation()\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isLoading = !userData\r\n  const canHarvest = userData.canHarvest\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        {harvest && (\r\n          <>\r\n            <Box display=\"inline\">\r\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {`${earningToken.symbol} `}\r\n              </InlineText>\r\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {t('Earned')}\r\n              </InlineText>\r\n            </Box>\r\n            <HarvestActions\r\n              earnings={earnings}\r\n              earningToken={earningToken}\r\n              sousId={sousId}\r\n              earningTokenPrice={earningTokenPrice}\r\n              isBnbPool={isBnbPool}\r\n              isLoading={isLoading}\r\n              canHarvest={canHarvest}\r\n            />\r\n          </>\r\n        )}\r\n        <Box display=\"inline\">\r\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          {/* <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText> */}\r\n        </Box>\r\n        {needsApproval ? (\r\n          <ApprovalAction pool={pool} isLoading={isLoading} />\r\n        ) : (\r\n          <StakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            stakedBalance={stakedBalance}\r\n            isBnbPool={isBnbPool}\r\n            isStaked={isStaked}\r\n          />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport { CardBody, Flex, Text, Tag, LockIcon, CardRibbon } from '@pancakeswap/uikit'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport { DeserializedPool } from 'state/types'\r\nimport AprRow from './AprRow'\r\nimport { StyledCard } from './StyledCard'\r\nimport CardFooter from './CardFooter'\r\nimport StyledCardHeader from './StyledCardHeader'\r\nimport CardActions from './CardActions'\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  .pool-card {\r\n    background-color: #20252d;\r\n  }\r\n`;\r\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\r\n  const { sousId, stakingToken, earningToken, isFinished, userData, harvestInterval } = pool\r\n  const { t } = useTranslation()\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const accountHasStakedBalance = stakedBalance.gt(0)\r\n\r\n    return (\r\n    <StyledCard\r\n      isFinished={isFinished && sousId !== 0}\r\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\r\n    >\r\n      <GlobalStyles />\r\n      <StyledCardHeader\r\n        isStaking={accountHasStakedBalance}\r\n        earningToken={earningToken}\r\n        stakingToken={stakingToken}\r\n        isFinished={isFinished && sousId !== 0}\r\n      />\r\n      <div className=\"pool-card\">\r\n        <CardBody>\r\n            <AprRow pool={pool} stakedBalance={stakedBalance} />\r\n            <Flex mt=\"20px\" justifyContent=\"space-between\">\r\n              {/* <Text >{`${t('APY')}:`}</Text> */}\r\n              {/* <Text mb=\"5px\" fontSize=\"16px\" color=\"gold\">\r\n                {t('Withdraw Lock')}\r\n              </Text>\r\n              <Tag variant=\"binance\" startIcon={<LockIcon width=\"14px\" color=\"primary\" mr=\"4px\" />}>\r\n                {harvestInterval / 3600 / 24 + t(' D')}\r\n              </Tag> */}\r\n              {/* <Text mb=\"5px\" fontSize=\"16px\" color=\"secondary\">\r\n                {harvestInterval + t('D')}\r\n              </Text> */}\r\n            </Flex>\r\n\r\n            <Flex mt=\"24px\" flexDirection=\"column\">\r\n              {account ? (\r\n                <CardActions pool={pool} stakedBalance={stakedBalance} />\r\n              ) : (\r\n                <>\r\n                  <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"gold\" bold>\r\n                    {t('Start earning')}\r\n                  </Text>\r\n                  <ConnectWalletButton />\r\n                </>\r\n              )}\r\n            </Flex>\r\n        </CardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </div>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultApprove } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  setLastUpdated: () => void\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VaultApprovalAction\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\r\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\r\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\r\n\r\n  useEffect(() => {\r\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\r\n    const secondsRemainingCalc = feeEndTime - currentSeconds\r\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\r\n\r\n    const tick = () => {\r\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\r\n    }\r\n    const timerInterval = setInterval(() => tick(), 1000)\r\n    if (doesUnstakingFeeApply) {\r\n      setSecondsRemaining(secondsRemainingCalc)\r\n      setHasUnstakingFee(true)\r\n    } else {\r\n      setHasUnstakingFee(false)\r\n      clearInterval(timerInterval)\r\n    }\r\n\r\n    return () => clearInterval(timerInterval)\r\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\r\n\r\n  return { hasUnstakingFee, secondsRemaining }\r\n}\r\n\r\nexport default useWithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\r\n  const { t } = useTranslation()\r\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\r\n\r\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\r\n}\r\n\r\nexport default WithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\r\n\r\ninterface UnstakingFeeCountdownRowProps {\r\n  isTableVariant?: boolean\r\n}\r\n\r\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    fees: { withdrawalFee, withdrawalFeePeriod },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100 || '-'\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\r\n    parseInt(lastDepositedTime, 10),\r\n    userShares,\r\n    withdrawalFeePeriod,\r\n  )\r\n\r\n  // The user has made a deposit, but has no fee\r\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\r\n\r\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\r\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\r\n\r\n  const getRowText = () => {\r\n    if (noFeeToPay) {\r\n      return t('Unstaking Fee')\r\n    }\r\n    if (shouldShowTimer) {\r\n      return t('unstaking fee until')\r\n    }\r\n    return t('unstaking fee if withdrawn within 72h')\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\r\n      justifyContent=\"space-between\"\r\n      flexDirection={isTableVariant ? 'column' : 'row'}\r\n    >\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\r\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\r\n      </TooltipText>\r\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default UnstakingFeeCountdownRow\r\n","import React from 'react'\r\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\n\r\ninterface FeeSummaryProps {\r\n  stakingTokenSymbol: string\r\n  stakeAmount: string\r\n}\r\n\r\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    fees: { withdrawalFee },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100\r\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'top-start' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        {tooltipVisible && tooltip}\r\n        <TooltipText ref={targetRef} small>\r\n          {t('Unstaking Fee')}\r\n        </TooltipText>\r\n        <Text fontSize=\"14px\">\r\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\r\n        </Text>\r\n      </Flex>\r\n      <UnstakingFeeCountdownRow />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FeeSummary\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Flex,\r\n  Image,\r\n  Button,\r\n  Slider,\r\n  BalanceInput,\r\n  AutoRenewIcon,\r\n  CalculateIcon,\r\n  IconButton,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchCakeVaultUserData } from 'state/pools'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\r\nimport FeeSummary from './FeeSummary'\r\n\r\ninterface VaultStakeModalProps {\r\n  pool: DeserializedPool\r\n  stakingMax: BigNumber\r\n  performanceFee?: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst AnnualRoiContainer = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst AnnualRoiDisplay = styled(Text)`\r\n  width: 72px;\r\n  max-width: 72px;\r\n  overflow: hidden;\r\n  text-align: right;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst callOptions = {\r\n  gasLimit: 380000,\r\n}\r\n\r\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\r\n  pool,\r\n  stakingMax,\r\n  performanceFee,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\r\n  const { account } = useWeb3React()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [percent, setPercent] = useState(0)\r\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\r\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\r\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\r\n\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n\r\n  const interestBreakdown = getInterestBreakdown({\r\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\r\n    apr,\r\n    earningTokenPrice,\r\n    performanceFee,\r\n  })\r\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\r\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\r\n\r\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\r\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\r\n      setPercent(percentage > 100 ? 100 : percentage)\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\r\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\r\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\r\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\r\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\r\n\r\n    if (isWithdrawingAll) {\r\n      try {\r\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          toastSuccess(\r\n            t('Unstaked!'),\r\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n              {t('Your earnings have also been harvested to your wallet')}\r\n            </ToastDescriptionWithTx>,\r\n          )\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      try {\r\n        const tx = await callWithGasPrice(\r\n          cakeVaultContract,\r\n          'withdraw',\r\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\r\n          callOptions,\r\n        )\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          toastSuccess(\r\n            t('Unstaked!'),\r\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n              {t('Your earnings have also been harvested to your wallet')}\r\n            </ToastDescriptionWithTx>,\r\n          )\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    try {\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\r\n      const receipt = await tx.wait()\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Staked!'),\r\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n            {t('Your funds have been staked in the pool')}\r\n          </ToastDescriptionWithTx>,\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n        dispatch(fetchCakeVaultUserData({ account }))\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      handleWithdrawal(convertedStakeAmount)\r\n    } else {\r\n      // staking\r\n      handleDeposit(convertedStakeAmount)\r\n    }\r\n  }\r\n\r\n  if (showRoiCalculator) {\r\n    return (\r\n      <RoiCalculatorModal\r\n        earningTokenPrice={earningTokenPrice}\r\n        stakingTokenPrice={stakingTokenPrice}\r\n        apr={apr}\r\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        linkHref={getTokenLink}\r\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\r\n        stakingTokenSymbol={stakingToken.symbol}\r\n        earningTokenSymbol={earningToken.symbol}\r\n        onBack={() => setShowRoiCalculator(false)}\r\n        initialValue={stakeAmount}\r\n        performanceFee={performanceFee}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\r\n          25%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\r\n          50%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\r\n          75%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\r\n          {t('Max')}\r\n        </StyledButton>\r\n      </Flex>\r\n      {isRemovingStake && hasUnstakingFee && (\r\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\r\n      )}\r\n      {!isRemovingStake && (\r\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Text mr=\"8px\" color=\"textSubtle\">\r\n            {t('Annual ROI at current rates')}:\r\n          </Text>\r\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\r\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\r\n            <IconButton variant=\"text\" scale=\"sm\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n            </IconButton>\r\n          </AnnualRoiContainer>\r\n        </Flex>\r\n      )}\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\r\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        </Button>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VaultStakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport { convertSharesToCake } from '../../../helpers'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\n\r\ninterface HasStakeActionProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  performanceFee: number\r\n}\r\n\r\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { stakingToken } = pool\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const stakedDollarValue = cakePriceBusd.gt(0)\r\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\r\n    : 0\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(\r\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\r\n  )\r\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\">\r\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          {cakePriceBusd.gt(0) ? (\r\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\r\n          ) : (\r\n            <Skeleton mt=\"1px\" height={16} width={64} />\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n      <Flex>\r\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n        </IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HasSharesActions\r\n","import React from 'react'\r\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\nimport HasSharesActions from './HasSharesActions'\r\n\r\ninterface VaultStakeActionsProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  accountHasSharesStaked: boolean\r\n  performanceFee: number\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  accountHasSharesStaked,\r\n  performanceFee,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken } = pool\r\n  const { t } = useTranslation()\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(\r\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\r\n  )\r\n\r\n  const renderStakeAction = () => {\r\n    return accountHasSharesStaked ? (\r\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\r\n    ) : (\r\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default VaultStakeActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport VaultApprovalAction from './VaultApprovalAction'\r\nimport VaultStakeActions from './VaultStakeActions'\r\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\nconst CakeVaultCardActions: React.FC<{\r\n  pool: DeserializedPool\r\n  accountHasSharesStaked: boolean\r\n  isLoading: boolean\r\n  performanceFee: number\r\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\r\n  const { stakingToken, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        <Box display=\"inline\">\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {isVaultApproved ? (\r\n          <VaultStakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            accountHasSharesStaked={accountHasSharesStaked}\r\n            performanceFee={performanceFee}\r\n          />\r\n        ) : (\r\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCardActions\r\n","import React from 'react'\r\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  dollarValueToDisplay: number\r\n  dateStringToDisplay: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\r\n  cakeToDisplay,\r\n  dollarValueToDisplay,\r\n  dateStringToDisplay,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    {\r\n      placement: 'bottom-end',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n","import React from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\r\n\r\nconst RecentCakeProfitCountdownRow = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    pricePerFullShare,\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    cakePriceBusd.toNumber(),\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\r\n      {hasAutoEarnings && (\r\n        <RecentCakeProfitBalance\r\n          cakeToDisplay={autoCakeToDisplay}\r\n          dollarValueToDisplay={autoUsdToDisplay}\r\n          dateStringToDisplay={dateStringToDisplay}\r\n        />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitCountdownRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport AprRow from '../PoolCard/AprRow'\r\nimport { StyledCard } from '../PoolCard/StyledCard'\r\nimport CardFooter from '../PoolCard/CardFooter'\r\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\r\nimport VaultCardActions from './VaultCardActions'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\r\n\r\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\r\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\r\n`\r\n\r\ninterface CakeVaultProps {\r\n  pool: DeserializedPool\r\n  showStakedOnly: boolean\r\n}\r\n\r\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { userShares, isLoading: isVaultUserDataLoading },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n\r\n  const accountHasSharesStaked = userShares && userShares.gt(0)\r\n  const isLoading = !pool.userData || isVaultUserDataLoading\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  if (showStakedOnly && !accountHasSharesStaked) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <StyledCard isActive>\r\n      <StyledCardHeader\r\n        isStaking={accountHasSharesStaked}\r\n        isAutoVault\r\n        earningToken={tokens.cake}\r\n        stakingToken={tokens.cake}\r\n      />\r\n      <StyledCardBody isLoading={isLoading}>\r\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\r\n        <Box mt=\"24px\">\r\n          <RecentCakeProfitRow />\r\n        </Box>\r\n        <Box mt=\"8px\">\r\n          <UnstakingFeeCountdownRow />\r\n        </Box>\r\n        <Flex mt=\"32px\" flexDirection=\"column\">\r\n          {account ? (\r\n            <VaultCardActions\r\n              pool={pool}\r\n              accountHasSharesStaked={accountHasSharesStaked}\r\n              isLoading={isLoading}\r\n              performanceFee={performanceFeeAsDecimal}\r\n            />\r\n          ) : (\r\n            <>\r\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                {t('Start earning')}\r\n              </Text>\r\n              <ConnectWalletButton />\r\n            </>\r\n          )}\r\n        </Flex>\r\n      </StyledCardBody>\r\n      <CardFooter pool={pool} account={account} />\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { ViewMode } from 'state/user/actions'\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-right: 0px;\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React from 'react'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ViewMode } from 'state/user/actions'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ToggleView from './ToggleView/ToggleView'\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const { t } = useTranslation()\r\n\r\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n\r\n  const liveOrFinishedSwitch = (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {t('Live')}\r\n        </ButtonMenuItem>\r\n        <NotificationDot show={hasStakeInFinishedPools}>\r\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\r\n            {t('Finished')}\r\n          </ButtonMenuItem>\r\n        </NotificationDot>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n\r\n  const stakedOnlySwitch = (\r\n    <ToggleWrapper>\r\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\r\n      <Text> {t('Staked only')}</Text>\r\n    </ToggleWrapper>\r\n  )\r\n\r\n  return (\r\n    <ViewControls>\r\n      {viewModeToggle}\r\n      {stakedOnlySwitch}\r\n      {liveOrFinishedSwitch}\r\n    </ViewControls>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n","import { Flex, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseCell = styled.div`\r\n  color: black;\r\n\r\n  padding: 24px 8px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\n\r\nexport const CellContent = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-height: 40px;\r\n  ${Text} {\r\n    line-height: 1;\r\n  }\r\n`\r\n\r\nexport default BaseCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface NameCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 5;\r\n  flex-direction: row;\r\n  padding-left: 12px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 150px;\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\r\n  const {\r\n    userData: { userShares },\r\n  } = useCakeVault()\r\n  const hasVaultShares = userShares && userShares.gt(0)\r\n\r\n  const stakingTokenSymbol = stakingToken.symbol\r\n  const earningTokenSymbol = earningToken.symbol\r\n\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\r\n\r\n  let title = `${t('Earn')} ${earningTokenSymbol}`\r\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\r\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\r\n\r\n  if (isAutoVault) {\r\n    title = t('Auto CAKE')\r\n    subtitle = t('Automatic restaking')\r\n  } else if (isManualCakePool) {\r\n    title = t('Manual CAKE')\r\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isAutoVault ? (\r\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\r\n      ) : (\r\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\r\n      )}\r\n      <CellContent>\r\n        {showStakedTag && (\r\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\r\n            {t('Staked')}\r\n          </Text>\r\n        )}\r\n        <Text bold={!isMobile} small={isMobile}>\r\n          {title}\r\n        </Text>\r\n        {showSubtitle && (\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {subtitle}\r\n          </Text>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default NameCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface EarningsCellProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  const hasEarnings = account && earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isManualCakePool}\r\n    />,\r\n  )\r\n\r\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentCollect()\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isMobile}\r\n                  fontSize={isMobile ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <>\r\n                    {earningTokenPrice > 0 && (\r\n                      <Balance\r\n                        display=\"inline\"\r\n                        fontSize=\"12px\"\r\n                        color=\"textSubtle\"\r\n                        decimals={2}\r\n                        prefix=\"~\"\r\n                        value={earningTokenDollarBalance}\r\n                        unit=\" USD\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EarningsCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport Balance from 'components/Balance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nconst AprLabelContainer = styled(Flex)`\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\ninterface AprProps extends FlexProps {\r\n  pool: DeserializedPool\r\n  stakedBalance: BigNumber\r\n  showIcon: boolean\r\n  performanceFee?: number\r\n}\r\n\r\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\r\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\r\n  const { t } = useTranslation()\r\n\r\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <RoiCalculatorModal\r\n      earningTokenPrice={earningTokenPrice}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\r\n      apr={apr}\r\n      stakingTokenSymbol={stakingToken.symbol}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      autoCompoundFrequency={autoCompoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\r\n      {earningsPercentageToDisplay || isFinished ? (\r\n        <>\r\n          <Balance\r\n            onClick={openRoiModal}\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={isFinished ? 0 : earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n          />\r\n          {!isFinished && showIcon && (\r\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\r\n            </Button>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Skeleton width=\"80px\" height=\"16px\" />\r\n      )}\r\n    </AprLabelContainer>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\n\r\ninterface AprCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { userData } = pool\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('APR')}\r\n        </Text>\r\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AprCell\r\n","import React, { useMemo } from 'react'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport Balance from 'components/Balance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface TotalStakedCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\r\n  const { totalCakeInVault } = useCakeVault()\r\n\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const totalStakedBalance = useMemo(() => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('Total staked')}\r\n        </Text>\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <Flex height=\"20px\" alignItems=\"center\">\r\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n          </Flex>\r\n        ) : (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\r\nimport { getBscScanLink } from 'utils'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface FinishCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\r\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\r\n  const { currentBlock } = useBlock()\r\n  const { t } = useTranslation()\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isCakePool = sousId === 0\r\n\r\n  const renderBlocks = shouldShowBlockCountdown ? (\r\n    <Flex alignItems=\"center\">\r\n      <Flex flex=\"1.3\">\r\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\r\n        <Text ml=\"4px\" textTransform=\"lowercase\">\r\n          {t('Blocks')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex flex=\"1\">\r\n        <Link\r\n          external\r\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <TimerIcon ml=\"4px\" />\r\n        </Link>\r\n      </Flex>\r\n    </Flex>\r\n  ) : (\r\n    <Text>-</Text>\r\n  )\r\n\r\n  // A bit hacky way to determine if public data is loading relying on totalStaked\r\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\r\n  // anywhere else\r\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\r\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\r\n        </Text>\r\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EndsInCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell from './BaseCell'\r\n\r\ninterface ExpandActionCellProps {\r\n  expanded: boolean\r\n  isFullLayout: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding-right: 12px;\r\n  padding-left: 0px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n    padding-right: 32px;\r\n    padding-left: 8px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 24px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isFullLayout && (\r\n        <Text color=\"primary\" bold>\r\n          {expanded ? t('Hide') : t('Details')}\r\n        </Text>\r\n      )}\r\n      <ArrowIcon color=\"primary\" toggled={expanded} />\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\r\n  }\r\n}\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 32px;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n","import React from 'react'\r\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { DeserializedPool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface HarvestActionProps extends DeserializedPool {\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\r\n  sousId,\r\n  poolCategory,\r\n  earningToken,\r\n  userData,\r\n  userDataLoaded,\r\n  earningTokenPrice,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  const hasEarnings = earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isCompoundPool = sousId === 0\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  const actionTitle = (\r\n    <>\r\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n        {earningToken.symbol}{' '}\r\n      </Text>\r\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n        {t('Earned')}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Heading>0</Heading>\r\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n          {isCompoundPool ? t('Collect') : t('Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\r\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\r\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps {\r\n  pool: DeserializedPool\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    stakingLimit,\r\n    isFinished,\r\n    poolCategory,\r\n    userData,\r\n    stakingTokenPrice,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const stakingTokenContract = useERC20(stakingToken.address || '')\r\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\r\n    stakingTokenContract,\r\n    sousId,\r\n    earningToken.symbol,\r\n  )\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\r\n    useVaultApprove(setLastUpdated)\r\n\r\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\r\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\r\n\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const hasSharesStaked = userShares && userShares.gt(0)\r\n  const isVaultWithShares = isAutoVault && hasSharesStaked\r\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\r\n\r\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  const onStake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultStake()\r\n    } else {\r\n      onPresentStake()\r\n    }\r\n  }\r\n\r\n  const onUnstake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultUnstake()\r\n    } else {\r\n      onPresentUnstake()\r\n    }\r\n  }\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <ConnectWalletButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (needsApproval) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Enable pool')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n            {t('Enable')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  // Wallet connected, user data loaded and approved\r\n  if (isNotVaultAndHasStake || isVaultWithShares) {\r\n    return (\r\n      <ActionContainer isAutoVault={isAutoVault}>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n            {stakingToken.symbol}{' '}\r\n          </Text>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n            <Balance\r\n              lineHeight=\"1\"\r\n              bold\r\n              fontSize=\"20px\"\r\n              decimals={5}\r\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\r\n            />\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              display=\"inline\"\r\n              color=\"textSubtle\"\r\n              decimals={2}\r\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Flex>\r\n          <IconButtonWrapper>\r\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\r\n              <MinusIcon color=\"primary\" width=\"14px\" />\r\n            </IconButton>\r\n            {reachStakingLimit ? (\r\n              <span ref={targetRef}>\r\n                <IconButton variant=\"secondary\" disabled>\r\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : (\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n                disabled={isFinished}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            )}\r\n          </IconButtonWrapper>\r\n          {tooltipVisible && tooltip}\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n          {t('Stake')}{' '}\r\n        </Text>\r\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n          {stakingToken.symbol}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n          variant=\"secondary\"\r\n          disabled={isFinished}\r\n        >\r\n          {t('Stake')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\r\n\r\ninterface AutoHarvestActionProps extends DeserializedPool {\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    pricePerFullShare,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  const earningTokenBalance = autoCakeToDisplay\r\n  const earningTokenDollarBalance = autoUsdToDisplay\r\n  const hasEarnings = hasAutoEarnings\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const actionTitle = (\r\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n      {t('Recent CAKE profit')}\r\n    </Text>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Heading>0</Heading>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer isAutoVault>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\r\n          <UnstakingFeeCountdownRow isTableVariant />\r\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            {tooltipVisible && tooltip}\r\n            <TooltipText ref={targetRef} small>\r\n              {t('Performance Fee')}\r\n            </TooltipText>\r\n            <Flex alignItems=\"center\">\r\n              <Text ml=\"4px\" small>\r\n                {performanceFee / 100}%\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default AutoHarvestAction\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  HelpIcon,\r\n  Link,\r\n  LinkExternal,\r\n  MetamaskIcon,\r\n  Skeleton,\r\n  Text,\r\n  TimerIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport Harvest from './Harvest'\r\nimport Stake from './Stake'\r\nimport Apr from '../Apr'\r\nimport AutoHarvest from './AutoHarvest'\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 700px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 700px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: center;\r\n  padding: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\ntype MediaBreakpoints = {\r\n  isXs: boolean\r\n  isSm: boolean\r\n  isMd: boolean\r\n  isLg: boolean\r\n  isXl: boolean\r\n  isXxl: boolean\r\n}\r\n\r\ninterface ActionPanelProps {\r\n  account: string\r\n  pool: DeserializedPool\r\n  userDataLoaded: boolean\r\n  expanded: boolean\r\n  breakpoints: MediaBreakpoints\r\n}\r\n\r\nconst InfoSection = styled(Box)`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  flex-basis: auto;\r\n  padding: 8px 8px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: 0;\r\n    flex-basis: 230px;\r\n  }\r\n`\r\n\r\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    userData,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const { currentBlock } = useBlock()\r\n  const { isXs, isSm, isMd } = breakpoints\r\n  const showSubtitle = (isXs || isSm) && sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const tokenAddress = earningToken.address || ''\r\n\r\n  const {\r\n    totalCakeInVault,\r\n    userData: { userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const poolStakingTokenBalance = isAutoVault\r\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\r\n    : stakedBalance.plus(stakingTokenBalance)\r\n\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const {\r\n    targetRef: tagTargetRef,\r\n    tooltip: tagTooltip,\r\n    tooltipVisible: tagTooltipVisible,\r\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom-start',\r\n  })\r\n\r\n  const maxStakeRow = stakingLimit.gt(0) ? (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n      <Text>{t('Max. stake per user')}:</Text>\r\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n    </Flex>\r\n  ) : null\r\n\r\n  const blocksRow =\r\n    blocksRemaining || blocksUntilStart ? (\r\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n        <Flex>\r\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\r\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n              {t('Blocks')}\r\n            </Text>\r\n            <TimerIcon ml=\"4px\" color=\"primary\" />\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n    ) : (\r\n      <Skeleton width=\"56px\" height=\"16px\" />\r\n    )\r\n\r\n  const aprRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\r\n      <Apr\r\n        pool={pool}\r\n        showIcon\r\n        stakedBalance={poolStakingTokenBalance}\r\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\r\n      />\r\n    </Flex>\r\n  )\r\n\r\n  const totalStakedRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\r\n      <Flex alignItems=\"center\">\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <>\r\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n            <span ref={totalStakedTargetRef}>\r\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <Skeleton width=\"56px\" height=\"16px\" />\r\n        )}\r\n        {totalStakedTooltipVisible && totalStakedTooltip}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <StyledActionPanel expanded={expanded}>\r\n      <InfoSection>\r\n        {maxStakeRow}\r\n        {(isXs || isSm) && aprRow}\r\n        {(isXs || isSm || isMd) && totalStakedRow}\r\n        {shouldShowBlockCountdown && blocksRow}\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\r\n            {t('See Token Info')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        {/* <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={earningToken.projectLink} bold={false}>\r\n            {t('View Project Site')}\r\n          </LinkExternal>\r\n        </Flex> */}\r\n        {poolContractAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <LinkExternal\r\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n              bold={false}\r\n            >\r\n              {t('View Contract')}\r\n            </LinkExternal>\r\n          </Flex>\r\n        )}\r\n        {account && isMetaMaskInScope && tokenAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <Button\r\n              variant=\"text\"\r\n              p=\"0\"\r\n              height=\"auto\"\r\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\r\n            >\r\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\r\n              <MetamaskIcon ml=\"4px\" />\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n        {tagTooltipVisible && tagTooltip}\r\n        <span ref={tagTargetRef}>\r\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n        </span>\r\n      </InfoSection>\r\n      <ActionContainer>\r\n        {showSubtitle && (\r\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\r\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\r\n          </Text>\r\n        )}\r\n        {pool.isAutoVault ? (\r\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\r\n        ) : (\r\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\r\n        )}\r\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\r\n      </ActionContainer>\r\n    </StyledActionPanel>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface AutoEarningsCellProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst HelpIconWrapper = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { earningTokenPrice } = pool\r\n\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  const labelText = t('Recent CAKE profit')\r\n  const earningTokenBalance = autoCakeToDisplay\r\n  const hasEarnings = hasAutoEarnings\r\n  const earningTokenDollarBalance = autoUsdToDisplay\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            {tooltipVisible && tooltip}\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\">\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isMobile}\r\n                  fontSize={isMobile ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <>\r\n                    {earningTokenPrice > 0 && (\r\n                      <Balance\r\n                        display=\"inline\"\r\n                        fontSize=\"12px\"\r\n                        color=\"textSubtle\"\r\n                        decimals={2}\r\n                        prefix=\"~\"\r\n                        value={earningTokenDollarBalance}\r\n                        unit=\" USD\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n              {hasEarnings && !isMobile && (\r\n                <HelpIconWrapper ref={targetRef}>\r\n                  <HelpIcon color=\"textSubtle\" />\r\n                </HelpIconWrapper>\r\n              )}\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AutoEarningsCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\nimport { convertSharesToCake } from '../../../helpers'\r\n\r\ninterface AprCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n\r\n  const {\r\n    userData: { userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('APY')}\r\n        </Text>\r\n        <Apr\r\n          pool={pool}\r\n          stakedBalance={cakeAsBigNumber}\r\n          performanceFee={performanceFeeAsDecimal}\r\n          showIcon={!isMobile}\r\n        />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AutoAprCell\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport NameCell from './Cells/NameCell'\r\nimport EarningsCell from './Cells/EarningsCell'\r\nimport AprCell from './Cells/AprCell'\r\nimport TotalStakedCell from './Cells/TotalStakedCell'\r\nimport EndsInCell from './Cells/EndsInCell'\r\nimport ExpandActionCell from './Cells/ExpandActionCell'\r\nimport ActionPanel from './ActionPanel/ActionPanel'\r\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\r\nimport AutoAprCell from './Cells/AutoAprCell'\r\n\r\ninterface PoolRowProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledRow = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  cursor: pointer;\r\n`\r\n\r\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\r\n  const isLargerScreen = isLg || isXl || isXxl\r\n  const [expanded, setExpanded] = useState(false)\r\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded((prev) => !prev)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\r\n        <NameCell pool={pool} />\r\n        {pool.isAutoVault ? (\r\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        ) : (\r\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        )}\r\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\r\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\r\n        {isDesktop && <EndsInCell pool={pool} />}\r\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\r\n      </StyledRow>\r\n      {shouldRenderActionPanel && (\r\n        <ActionPanel\r\n          account={account}\r\n          pool={pool}\r\n          userDataLoaded={userDataLoaded}\r\n          expanded={expanded}\r\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PoolRow\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport PoolRow from './PoolRow'\r\n\r\ninterface PoolsTableProps {\r\n  pools: DeserializedPool[]\r\n  userDataLoaded: boolean\r\n  account: string\r\n}\r\n\r\nconst StyledTable = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  scroll-margin-top: 64px;\r\n  background: #20252d;\r\n  border: 1px solid;\r\n  border-color: #686464 !important;\r\n  > div:not(:last-child) {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst StyledTableBorder = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 1px 1px 3px 1px;\r\n  background-size: 400% 400%;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\r\n  const { t } = useTranslation()\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n  return (\r\n    <StyledTableBorder>\r\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\r\n        {pools.map((pool) => (\r\n          <PoolRow\r\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\r\n            pool={pool}\r\n            account={account}\r\n            userDataLoaded={userDataLoaded}\r\n          />\r\n        ))}\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </StyledTable>\r\n    </StyledTableBorder>\r\n  )\r\n}\r\n\r\nexport default PoolsTable\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled, { createGlobalStyle } from 'styled-components'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\nimport {\r\n  useFetchPublicPoolsData,\r\n  usePools,\r\n  useFetchUserPools,\r\n  useFetchCakeVault,\r\n  useCakeVault,\r\n} from 'state/pools/hooks'\r\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\r\nimport { latinise } from 'utils/latinise'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\r\nimport { ViewMode } from 'state/user/actions'\r\nimport Loading from 'components/Loading'\r\nimport PoolCard from './components/PoolCard'\r\nimport CakeVaultCard from './components/CakeVaultCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport BountyCard from './components/BountyCard'\r\nimport HelpButton from './components/HelpButton'\r\nimport PoolsTable from './components/PoolsTable/PoolsTable'\r\nimport { getAprData, getCakeVaultEarnings } from './helpers'\r\n\r\nconst CardLayout = styled(FlexLayout)`\r\n  justify-content: center;\r\n`\r\nconst GlobalStyles = createGlobalStyle`\r\n  .pool_body {\r\n    background-color: #15181e;\r\n  }\r\n`;\r\n\r\nconst PoolControls = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst ControlStretch = styled(Flex)`\r\n  > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_POOLS_VISIBLE = 12\r\n\r\nconst Pools: React.FC = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools()\r\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\r\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\r\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const chosenPoolsLength = useRef(0)\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n  } = useCakeVault()\r\n  const accountHasVaultShares = userShares && userShares.gt(0)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  \r\n  const pools = useMemo(() => {\r\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: false }\r\n\r\n    /**\r\n     * ?KG? autovault not displaly.\r\n     */\r\n    // return [cakeAutoVault, ...poolsWithoutAutoVault]\r\n    return [...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault])\r\n\r\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\r\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\r\n  const stakedOnlyFinishedPools = useMemo(\r\n    () =>\r\n      finishedPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [finishedPools, accountHasVaultShares],\r\n  )\r\n  const stakedOnlyOpenPools = useMemo(\r\n    () =>\r\n      openPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [openPools, accountHasVaultShares],\r\n  )\r\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\r\n\r\n  usePollFarmsPublicData()\r\n  useFetchCakeVault()\r\n  useFetchPublicPoolsData()\r\n  useFetchUserPools(account)\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\r\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\r\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\r\n        }\r\n        return poolsCurrentlyVisible\r\n      })\r\n    }\r\n  }, [isIntersecting])\r\n\r\n  const showFinishedPools = location.pathname.includes('history')\r\n\r\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  const sortPools = (poolsToSort: DeserializedPool[]) => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: DeserializedPool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\r\n          'desc',\r\n        )\r\n      case 'earned':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: DeserializedPool) => {\r\n            if (!pool.userData || !pool.earningTokenPrice) {\r\n              return 0\r\n            }\r\n            return pool.isAutoVault\r\n              ? getCakeVaultEarnings(\r\n                  account,\r\n                  cakeAtLastUserAction,\r\n                  userShares,\r\n                  pricePerFullShare,\r\n                  pool.earningTokenPrice,\r\n                ).autoUsdToDisplay\r\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\r\n          },\r\n          'desc',\r\n        )\r\n      case 'totalStaked':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: DeserializedPool) => {\r\n            let totalStaked = Number.NaN\r\n            if (pool.isAutoVault) {\r\n              if (pool.stakingTokenPrice && totalCakeInVault.isFinite()) {\r\n                totalStaked =\r\n                  +formatUnits(ethers.BigNumber.from(totalCakeInVault.toString()), pool.stakingToken.decimals) *\r\n                  pool.stakingTokenPrice\r\n              }\r\n            } else if (pool.sousId === 0) {\r\n              if (pool.totalStaked?.isFinite() && pool.stakingTokenPrice && totalCakeInVault.isFinite()) {\r\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\r\n                  totalCakeInVault.toString(),\r\n                )\r\n                totalStaked =\r\n                  +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals) * pool.stakingTokenPrice\r\n              }\r\n            } else if (pool.totalStaked?.isFinite() && pool.stakingTokenPrice) {\r\n              totalStaked =\r\n                +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals) *\r\n                pool.stakingTokenPrice\r\n            }\r\n            return Number.isFinite(totalStaked) ? totalStaked : 0\r\n          },\r\n          'desc',\r\n        )\r\n      default:\r\n        return poolsToSort\r\n    }\r\n  }\r\n\r\n  let chosenPools\r\n  if (showFinishedPools) {\r\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\r\n  } else {\r\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\r\n  }\r\n\r\n  if (searchQuery) {\r\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\r\n    chosenPools = chosenPools.filter((pool) =>\r\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\r\n    )\r\n  }\r\n\r\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\r\n  chosenPoolsLength.current = chosenPools.length\r\n\r\n  const cardLayout = (\r\n    <CardLayout>\r\n      {chosenPools.map((pool) =>\r\n        pool.isAutoVault ? (\r\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\r\n        ) : (\r\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\r\n        ),\r\n      )}\r\n    </CardLayout>\r\n  )\r\n\r\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <PageHeader>\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\r\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"white\" mb=\"24px\">\r\n              {t('Stake Pool')}\r\n            </Heading>\r\n            <Heading scale=\"lg\" color=\"white\">\r\n              {t('Stake your tokens to earn ZLT. High APR, minimal risk.')}\r\n            </Heading>\r\n            {/* <Heading scale=\"md\" color=\"text\">\r\n              {t('High APR, low risk.')}\r\n            </Heading> */}\r\n          </Flex>\r\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\r\n            {/* <HelpButton />\r\n            <BountyCard /> */}\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader>\r\n      <div className=\"pool_body\">\r\n        <Page>\r\n          <PoolControls>\r\n            <PoolTabButtons\r\n              stakedOnly={stakedOnly}\r\n              setStakedOnly={setStakedOnly}\r\n              hasStakeInFinishedPools={hasStakeInFinishedPools}\r\n              viewMode={viewMode}\r\n              setViewMode={setViewMode}\r\n            />\r\n            <FilterContainer>\r\n              <LabelWrapper>\r\n                <Text fontSize=\"12px\" bold color=\"gold\" textTransform=\"uppercase\">\r\n                  {t('Sort by')}\r\n                </Text>\r\n                <ControlStretch>\r\n                  <Select\r\n                    options={[\r\n                      {\r\n                        label: t('Hot'),\r\n                        value: 'hot',\r\n                      },\r\n                      {\r\n                        label: t('APR'),\r\n                        value: 'apr',\r\n                      },\r\n                      {\r\n                        label: t('Earned'),\r\n                        value: 'earned',\r\n                      },\r\n                      {\r\n                        label: t('Total staked'),\r\n                        value: 'totalStaked',\r\n                      },\r\n                    ]}\r\n                    onOptionChange={handleSortOptionChange}\r\n                  />\r\n                </ControlStretch>\r\n              </LabelWrapper>\r\n              <LabelWrapper style={{ marginLeft: 16 }}>\r\n                <Text fontSize=\"12px\" bold color=\"gold\" textTransform=\"uppercase\">\r\n                  {t('Search')}\r\n                </Text>\r\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\r\n              </LabelWrapper>\r\n            </FilterContainer>\r\n          </PoolControls>\r\n          {showFinishedPools && (\r\n            <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\r\n              {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\r\n            </Text>\r\n          )}\r\n          {account && !userDataLoaded && stakedOnly && (\r\n            <Flex justifyContent=\"center\" mb=\"4px\">\r\n              <Loading />\r\n            </Flex>\r\n          )}\r\n          {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\r\n          <div ref={observerRef} />\r\n          {/* <Image\r\n            mx=\"auto\"\r\n            mt=\"12px\"\r\n            src=\"/images/decorations/3d-syrup-bunnies.png\"\r\n            alt=\"Pancake illustration\"\r\n            width={192}\r\n            height={184.5}\r\n          /> */}\r\n        </Page>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pools\r\n","import { Token } from '@pancakeswap/sdk'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst { bondly, safemoon } = tokens\r\n\r\ninterface WarningTokenList {\r\n  [key: string]: Token\r\n}\r\n\r\nconst SwapWarningTokens = <WarningTokenList>{\r\n  safemoon,\r\n  bondly,\r\n}\r\n\r\nexport default SwapWarningTokens\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useENS from '../../../hooks/ENS/useENS'\r\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\r\nimport { AutoColumn } from '../../../components/Layout/Column'\r\nimport { RowBetween } from '../../../components/Layout/Row'\r\nimport { getBscScanLink } from '../../../utils'\r\n\r\nconst InputPanel = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  z-index: 1;\r\n  width: 100%;\r\n`\r\n\r\nconst ContainerRow = styled.div<{ error: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\r\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\r\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n  padding: 1rem;\r\n`\r\n\r\nconst Input = styled.input<{ error?: boolean }>`\r\n  font-size: 1.25rem;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n`\r\n\r\nexport default function AddressInputPanel({\r\n  id,\r\n  value,\r\n  onChange,\r\n}: {\r\n  id?: string\r\n  // the typed string value\r\n  value: string\r\n  // triggers whenever the typed value changes\r\n  onChange: (value: string) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const { address, loading, name } = useENS(value)\r\n\r\n  const handleInput = useCallback(\r\n    (event) => {\r\n      const input = event.target.value\r\n      const withoutSpaces = input.replace(/\\s+/g, '')\r\n      onChange(withoutSpaces)\r\n    },\r\n    [onChange],\r\n  )\r\n\r\n  const error = Boolean(value.length > 0 && !loading && !address)\r\n\r\n  return (\r\n    <InputPanel id={id}>\r\n      <ContainerRow error={error}>\r\n        <InputContainer>\r\n          <AutoColumn gap=\"md\">\r\n            <RowBetween>\r\n              <Text>{t('Recipient')}</Text>\r\n              {address && chainId && (\r\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\r\n                  ({t('View on BscScan')})\r\n                </Link>\r\n              )}\r\n            </RowBetween>\r\n            <Input\r\n              className=\"recipient-address-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"off\"\r\n              spellCheck=\"false\"\r\n              placeholder={t('Wallet Address or ENS name')}\r\n              error={error}\r\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\r\n              onChange={handleInput}\r\n              value={value}\r\n            />\r\n          </AutoColumn>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { ErrorIcon, Text } from '@pancakeswap/uikit'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport React from 'react'\r\nimport styled, { css } from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  padding: 1rem;\r\n`\r\n\r\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\r\n  padding: 2px;\r\n\r\n  ${({ clickable }) =>\r\n    clickable\r\n      ? css`\r\n          :hover {\r\n            cursor: pointer;\r\n            opacity: 0.8;\r\n          }\r\n        `\r\n      : null}\r\n`\r\n\r\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\r\n  color: ${({ theme, severity }) =>\r\n    severity === 3 || severity === 4\r\n      ? theme.colors.failure\r\n      : severity === 2\r\n      ? theme.colors.warning\r\n      : severity === 1\r\n      ? theme.colors.text\r\n      : theme.colors.success};\r\n`\r\n\r\nexport const StyledBalanceMaxMini = styled.button`\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0.2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  margin-left: 0.4rem;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors.dropdown};\r\n  }\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.colors.dropdown};\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\r\n  width: 220px;\r\n`\r\n\r\nconst SwapCallbackErrorInner = styled.div`\r\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.825rem;\r\n  width: 100%;\r\n  padding: 3rem 1.25rem 1rem 1rem;\r\n  margin-top: -2rem;\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  z-index: -1;\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\r\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  border-radius: 12px;\r\n  min-width: 48px;\r\n  height: 48px;\r\n`\r\n\r\nexport function SwapCallbackError({ error }: { error: string }) {\r\n  return (\r\n    <SwapCallbackErrorInner>\r\n      <SwapCallbackErrorInnerAlertTriangle>\r\n        <ErrorIcon width=\"24px\" />\r\n      </SwapCallbackErrorInnerAlertTriangle>\r\n      <p>{error}</p>\r\n    </SwapCallbackErrorInner>\r\n  )\r\n}\r\n\r\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\r\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin-top: 8px;\r\n`\r\n","import { Percent } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { warningSeverity } from 'utils/prices'\r\nimport { ONE_BIPS } from '../../../config/constants'\r\nimport { ErrorText } from './styleds'\r\n\r\n/**\r\n * Formatted version of price impact text with warning colors\r\n */\r\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\r\n  return (\r\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\r\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\r\n    </ErrorText>\r\n  )\r\n}\r\n","import React, { useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Field } from 'state/swap/actions'\r\nimport {\r\n  computeSlippageAdjustedAmounts,\r\n  computeTradePriceBreakdown,\r\n  formatExecutionPrice,\r\n  warningSeverity,\r\n} from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\r\n\r\nconst SwapModalFooterContainer = styled(AutoColumn)`\r\n  margin-top: 24px;\r\n  padding: 16px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport default function SwapModalFooter({\r\n  trade,\r\n  onConfirm,\r\n  allowedSlippage,\r\n  swapErrorMessage,\r\n  disabledConfirm,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  disabledConfirm: boolean\r\n}) {\r\n  const { t } = useTranslation()\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [allowedSlippage, trade],\r\n  )\r\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const severity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  return (\r\n    <>\r\n      <SwapModalFooterContainer>\r\n        <RowBetween align=\"center\">\r\n          <Text fontSize=\"14px\">{t('Price')}</Text>\r\n          <Text\r\n            fontSize=\"14px\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              textAlign: 'right',\r\n              paddingLeft: '10px',\r\n            }}\r\n          >\r\n            {formatExecutionPrice(trade, showInverted)}\r\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n              <AutoRenewIcon width=\"14px\" />\r\n            </StyledBalanceMaxMini>\r\n          </Text>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\r\n            </Text>\r\n            <QuestionHelper\r\n              text={t(\r\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\r\n              )}\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\r\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\r\n            </Text>\r\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? trade.outputAmount.currency.symbol\r\n                : trade.inputAmount.currency.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\r\n            <QuestionHelper\r\n              text={t('The difference between the market price and your price due to trade size.')}\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\r\n            <QuestionHelper\r\n              text={\r\n                <>\r\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\r\n                  <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\r\n                  <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\r\n                  <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\r\n                </>\r\n              }\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </SwapModalFooterContainer>\r\n\r\n      <AutoRow>\r\n        <Button\r\n          variant={severity > 2 ? 'danger' : 'primary'}\r\n          onClick={onConfirm}\r\n          disabled={disabledConfirm}\r\n          mt=\"12px\"\r\n          id=\"confirm-swap-or-send\"\r\n          width=\"100%\"\r\n        >\r\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\r\n        </Button>\r\n\r\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n      </AutoRow>\r\n    </>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\r\n\r\nexport default function SwapModalHeader({\r\n  trade,\r\n  allowedSlippage,\r\n  recipient,\r\n  showAcceptChanges,\r\n  onAcceptChanges,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  recipient: string | null\r\n  showAcceptChanges: boolean\r\n  onAcceptChanges: () => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [trade, allowedSlippage],\r\n  )\r\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  const amount =\r\n    trade.tradeType === TradeType.EXACT_INPUT\r\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\r\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\r\n  const symbol =\r\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\r\n\r\n  const tradeInfoText =\r\n    trade.tradeType === TradeType.EXACT_INPUT\r\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\r\n          amount,\r\n          symbol,\r\n        })\r\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\r\n          amount,\r\n          symbol,\r\n        })\r\n\r\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\r\n\r\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\r\n\r\n  const recipientInfoText = t('Output will be sent to %recipient%', {\r\n    recipient: truncatedRecipient,\r\n  })\r\n\r\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <TruncatedText\r\n            fontSize=\"24px\"\r\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\r\n          >\r\n            {trade.inputAmount.toSignificant(6)}\r\n          </TruncatedText>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" ml=\"10px\">\r\n            {trade.inputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowFixed>\r\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\r\n      </RowFixed>\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <TruncatedText\r\n            fontSize=\"24px\"\r\n            color={\r\n              priceImpactSeverity > 2\r\n                ? 'failure'\r\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\r\n                ? 'primary'\r\n                : 'text'\r\n            }\r\n          >\r\n            {trade.outputAmount.toSignificant(6)}\r\n          </TruncatedText>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" ml=\"10px\">\r\n            {trade.outputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      {showAcceptChanges ? (\r\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <ErrorIcon mr=\"8px\" />\r\n              <Text bold> {t('Price Updated')}</Text>\r\n            </RowFixed>\r\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\r\n          </RowBetween>\r\n        </SwapShowAcceptChanges>\r\n      ) : null}\r\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\r\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\r\n          {estimatedText}\r\n          <b>\r\n            {amount} {symbol}\r\n          </b>\r\n          {transactionRevertText}\r\n        </Text>\r\n      </AutoColumn>\r\n      {recipient !== null ? (\r\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\r\n          <Text color=\"textSubtle\">\r\n            {recipientSentToText}\r\n            <b title={recipient}>{truncatedRecipient}</b>\r\n            {postSentToText}\r\n          </Text>\r\n        </AutoColumn>\r\n      ) : null}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\r\nimport { InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from 'components/TransactionConfirmationModal'\r\nimport SwapModalFooter from './SwapModalFooter'\r\nimport SwapModalHeader from './SwapModalHeader'\r\n\r\n/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */\r\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\r\n  return (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\r\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\r\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\r\n  )\r\n}\r\ninterface ConfirmSwapModalProps {\r\n  trade?: Trade\r\n  originalTrade?: Trade\r\n  attemptingTxn: boolean\r\n  txHash?: string\r\n  recipient: string | null\r\n  allowedSlippage: number\r\n  onAcceptChanges: () => void\r\n  onConfirm: () => void\r\n  swapErrorMessage?: string\r\n  customOnDismiss?: () => void\r\n}\r\n\r\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\r\n  trade,\r\n  originalTrade,\r\n  onAcceptChanges,\r\n  allowedSlippage,\r\n  onConfirm,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  recipient,\r\n  swapErrorMessage,\r\n  attemptingTxn,\r\n  txHash,\r\n}) => {\r\n  const showAcceptChanges = useMemo(\r\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\r\n    [originalTrade, trade],\r\n  )\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalHeader\r\n        trade={trade}\r\n        allowedSlippage={allowedSlippage}\r\n        recipient={recipient}\r\n        showAcceptChanges={showAcceptChanges}\r\n        onAcceptChanges={onAcceptChanges}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalFooter\r\n        onConfirm={onConfirm}\r\n        trade={trade}\r\n        disabledConfirm={showAcceptChanges}\r\n        swapErrorMessage={swapErrorMessage}\r\n        allowedSlippage={allowedSlippage}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\r\n\r\n  // text to show while loading\r\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\r\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\r\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\r\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\r\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\r\n  })\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      swapErrorMessage ? (\r\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\r\n      ) : (\r\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\r\n      ),\r\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      title={t('Confirm Swap')}\r\n      onDismiss={onDismiss}\r\n      customOnDismiss={customOnDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n      currencyToAdd={trade?.outputAmount.currency}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ConfirmSwapModal\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nfunction useLast<T>(\r\n  value: T | undefined | null,\r\n  filterFn?: (value: T | null | undefined) => boolean,\r\n): T | null | undefined {\r\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\r\n  useEffect(() => {\r\n    setLast((prev) => {\r\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\r\n      if (shouldUse) return value\r\n      return prev\r\n    })\r\n  }, [filterFn, value])\r\n  return last\r\n}\r\n\r\nfunction isDefined<T>(x: T | null | undefined): x is T {\r\n  return x !== null && x !== undefined\r\n}\r\n\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\r\n  return useLast(value, isDefined)\r\n}\r\n\r\nexport default useLastTruthy\r\n","import React, { Fragment, memo } from 'react'\r\nimport { Trade } from '@pancakeswap/sdk'\r\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { unwrappedToken } from 'utils/wrappedCurrency'\r\n\r\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\r\n  return (\r\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n      {trade.route.path.map((token, i, path) => {\r\n        const isLastItem: boolean = i === path.length - 1\r\n        const currency = unwrappedToken(token)\r\n        return (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Fragment key={i}>\r\n            <Flex alignItems=\"end\">\r\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\r\n                {currency.symbol}\r\n              </Text>\r\n            </Flex>\r\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </Flex>\r\n  )\r\n})\r\n","import React from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport SwapRoute from './SwapRoute'\r\n\r\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\r\n  const { t } = useTranslation()\r\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\r\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n\r\n  return (\r\n    <AutoColumn style={{ padding: '0 16px' }}>\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\r\n          </Text>\r\n          <QuestionHelper\r\n            text={t(\r\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\r\n            )}\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {isExactIn\r\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\r\n                '-'\r\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Price Impact')}\r\n          </Text>\r\n          <QuestionHelper\r\n            text={t('The difference between the market price and estimated price due to trade size.')}\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n      </RowBetween>\r\n\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Liquidity Provider Fee')}\r\n          </Text>\r\n          <QuestionHelper\r\n            text={\r\n              <>\r\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\r\n                <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\r\n                <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\r\n                <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\r\n              </>\r\n            }\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <Text fontSize=\"14px\">\r\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n        </Text>\r\n      </RowBetween>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport interface AdvancedSwapDetailsProps {\r\n  trade?: Trade\r\n}\r\n\r\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\r\n  const { t } = useTranslation()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\r\n\r\n  return (\r\n    <AutoColumn gap=\"0px\">\r\n      {trade && (\r\n        <>\r\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\r\n          {showRoute && (\r\n            <>\r\n              <RowBetween style={{ padding: '0 16px' }}>\r\n                <span style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                    {t('Route')}\r\n                  </Text>\r\n                  <QuestionHelper\r\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\r\n                    ml=\"4px\"\r\n                  />\r\n                </span>\r\n                <SwapRoute trade={trade} />\r\n              </RowBetween>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useLastTruthy from 'hooks/useLast'\r\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\r\n\r\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\r\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-radius: 20px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n\r\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\r\n  transition: transform 300ms ease-in-out;\r\n`\r\n\r\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\r\n  const lastTrade = useLastTruthy(trade)\r\n\r\n  return (\r\n    <AdvancedDetailsFooter show={Boolean(trade)}>\r\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\r\n    </AdvancedDetailsFooter>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Price } from '@pancakeswap/sdk'\r\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { StyledBalanceMaxMini } from './styleds'\r\n\r\ninterface TradePriceProps {\r\n  price?: Price\r\n  showInverted: boolean\r\n  setShowInverted: (showInverted: boolean) => void\r\n}\r\n\r\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\r\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const label = showInverted\r\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\r\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\r\n\r\n  return (\r\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n      {show ? (\r\n        <>\r\n          {formattedPrice ?? '-'} {label}\r\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n            <AutoRenewIcon width=\"14px\" />\r\n          </StyledBalanceMaxMini>\r\n        </>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport ImportToken from 'components/SearchModal/ImportToken'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface Props extends InjectedModalProps {\r\n  tokens: Token[]\r\n  onCancel: () => void\r\n}\r\n\r\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Modal\r\n      title={t('Import Token')}\r\n      onDismiss={() => {\r\n        if (onDismiss) {\r\n          onDismiss()\r\n        }\r\n        onCancel()\r\n      }}\r\n      style={{ maxWidth: '420px' }}\r\n    >\r\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ImportTokenWarningModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { RowBetween } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\n\r\nconst Grouping = styled(RowBetween)`\r\n  width: 50%;\r\n`\r\n\r\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  background-color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\r\n  border-radius: 50%;\r\n  color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  line-height: 8px;\r\n  font-size: 12px;\r\n`\r\n\r\nconst CircleRow = styled.div`\r\n  width: calc(100% - 20px);\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\r\n      0%,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled\r\n          ? theme.colors.backgroundDisabled\r\n          : prevConfirmed\r\n          ? theme.colors.primary\r\n          : theme.colors.backgroundDisabled}\r\n      80%\r\n  );\r\n  opacity: 0.6;\r\n`\r\n\r\ninterface ProgressCirclesProps {\r\n  steps: boolean[]\r\n  disabled?: boolean\r\n}\r\n\r\n/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */\r\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\r\n  return (\r\n    <AutoColumn justify=\"center\" {...rest}>\r\n      <Grouping>\r\n        {steps.map((step, i) => {\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <CircleRow key={i}>\r\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\r\n                {step ? '✓' : i + 1}\r\n              </Circle>\r\n              <Connector prevConfirmed={step} disabled={disabled} />\r\n            </CircleRow>\r\n          )\r\n        })}\r\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\r\n      </Grouping>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useGasPrice } from 'state/user/hooks'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\r\nimport isZero from '../utils/isZero'\r\nimport useTransactionDeadline from './useTransactionDeadline'\r\nimport useENS from './ENS/useENS'\r\n\r\nexport enum SwapCallbackState {\r\n  INVALID,\r\n  LOADING,\r\n  VALID,\r\n}\r\n\r\ninterface SwapCall {\r\n  contract: Contract\r\n  parameters: SwapParameters\r\n}\r\n\r\ninterface SuccessfulCall {\r\n  call: SwapCall\r\n  gasEstimate: BigNumber\r\n}\r\n\r\ninterface FailedCall {\r\n  call: SwapCall\r\n  error: Error\r\n}\r\n\r\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\r\n\r\n/**\r\n * Returns the swap calls that can be used to make the trade\r\n * @param trade trade to execute\r\n * @param allowedSlippage user allowed slippage\r\n * @param recipientAddressOrName\r\n */\r\nfunction useSwapCallArguments(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): SwapCall[] {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n  const deadline = useTransactionDeadline()\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\r\n\r\n    const contract: Contract | null = getRouterContract(chainId, library, account)\r\n    if (!contract) {\r\n      return []\r\n    }\r\n\r\n    const swapMethods = []\r\n\r\n    swapMethods.push(\r\n      Router.swapCallParameters(trade, {\r\n        feeOnTransfer: false,\r\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n        recipient,\r\n        deadline: deadline.toNumber(),\r\n      }),\r\n    )\r\n\r\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\r\n      swapMethods.push(\r\n        Router.swapCallParameters(trade, {\r\n          feeOnTransfer: true,\r\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n          recipient,\r\n          deadline: deadline.toNumber(),\r\n        }),\r\n      )\r\n    }\r\n\r\n    return swapMethods.map((parameters) => ({ parameters, contract }))\r\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\r\n}\r\n\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapCallback(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const gasPrice = useGasPrice()\r\n\r\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !library || !account || !chainId) {\r\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\r\n    }\r\n    if (!recipient) {\r\n      if (recipientAddressOrName !== null) {\r\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\r\n      }\r\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\r\n    }\r\n\r\n    return {\r\n      state: SwapCallbackState.VALID,\r\n      callback: async function onSwap(): Promise<string> {\r\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\r\n          swapCalls.map((call) => {\r\n            const {\r\n              parameters: { methodName, args, value },\r\n              contract,\r\n            } = call\r\n            const options = !value || isZero(value) ? {} : { value }\r\n\r\n            return contract.estimateGas[methodName](...args, options)\r\n              .then((gasEstimate) => {\r\n                return {\r\n                  call,\r\n                  gasEstimate,\r\n                }\r\n              })\r\n              .catch((gasError) => {\r\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\r\n\r\n                return contract.callStatic[methodName](...args, options)\r\n                  .then((result) => {\r\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\r\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\r\n                  })\r\n                  .catch((callError) => {\r\n                    console.error('Call threw error', call, callError)\r\n                    const reason: string = callError.reason || callError.data?.message || callError.message\r\n                    const errorMessage = `The transaction cannot succeed due to error: ${\r\n                      reason ?? 'Unknown error, check the logs'\r\n                    }.`\r\n\r\n                    return { call, error: new Error(errorMessage) }\r\n                  })\r\n              })\r\n          }),\r\n        )\r\n\r\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\r\n        const successfulEstimation = estimatedCalls.find(\r\n          (el, ix, list): el is SuccessfulCall =>\r\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\r\n        )\r\n\r\n        if (!successfulEstimation) {\r\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\r\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\r\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\r\n        }\r\n\r\n        const {\r\n          call: {\r\n            contract,\r\n            parameters: { methodName, args, value },\r\n          },\r\n          gasEstimate,\r\n        } = successfulEstimation\r\n\r\n        return contract[methodName](...args, {\r\n          gasLimit: calculateGasMargin(gasEstimate),\r\n          gasPrice,\r\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\r\n        })\r\n          .then((response: any) => {\r\n            const inputSymbol = trade.inputAmount.currency.symbol\r\n            const outputSymbol = trade.outputAmount.currency.symbol\r\n            const inputAmount = trade.inputAmount.toSignificant(3)\r\n            const outputAmount = trade.outputAmount.toSignificant(3)\r\n\r\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\r\n            const withRecipient =\r\n              recipient === account\r\n                ? base\r\n                : `${base} to ${\r\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\r\n                      ? truncateHash(recipientAddressOrName)\r\n                      : recipientAddressOrName\r\n                  }`\r\n\r\n            addTransaction(response, {\r\n              summary: withRecipient,\r\n            })\r\n\r\n            return response.hash\r\n          })\r\n          .catch((error: any) => {\r\n            // if the user rejected the tx, pass this along\r\n            if (error?.code === 4001) {\r\n              throw new Error('Transaction rejected.')\r\n            } else {\r\n              // otherwise, the error was unexpected and we need to convey that\r\n              console.error(`Swap failed`, error, methodName, args, value)\r\n              throw new Error(`Swap failed: ${error.message}`)\r\n            }\r\n          })\r\n      },\r\n      error: null,\r\n    }\r\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\r\n}\r\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { tryParseAmount } from '../state/swap/hooks'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { useCurrencyBalance } from '../state/wallet/hooks'\r\nimport { useWETHContract } from './useContract'\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\r\n\r\nexport enum WrapType {\r\n  NOT_APPLICABLE,\r\n  WRAP,\r\n  UNWRAP,\r\n}\r\n\r\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\r\n/**\r\n * Given the selected input and output currency, return a wrap callback\r\n * @param inputCurrency the selected input currency\r\n * @param outputCurrency the selected output currency\r\n * @param typedValue the user input value\r\n */\r\nexport default function useWrapCallback(\r\n  inputCurrency: Currency | undefined,\r\n  outputCurrency: Currency | undefined,\r\n  typedValue: string | undefined,\r\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const wethContract = useWETHContract()\r\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\r\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\r\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useMemo(() => {\r\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\r\n\r\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\r\n\r\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\r\n      return {\r\n        wrapType: WrapType.WRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\r\n                    value: `0x${inputAmount.raw.toString(16)}`,\r\n                  })\r\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\r\n                } catch (error) {\r\n                  console.error('Could not deposit', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\r\n      }\r\n    }\r\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\r\n      return {\r\n        wrapType: WrapType.UNWRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\r\n                    `0x${inputAmount.raw.toString(16)}`,\r\n                  ])\r\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\r\n                } catch (error) {\r\n                  console.error('Could not withdraw', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\r\n      }\r\n    }\r\n    return NOT_APPLICABLE\r\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\r\n}\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst SafemoonWarning = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\r\n      <Text>• {t('Click on the settings icon')}</Text>\r\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\r\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\r\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\r\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SafemoonWarning\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst BondlyWarning = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liquidity until further notice.')}</Text>\r\n}\r\n\r\nexport default BondlyWarning\r\n","import React, { useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\r\n\r\ninterface AcknowledgementProps {\r\n  handleContinueClick: () => void\r\n}\r\n\r\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\r\n  const { t } = useTranslation()\r\n  const [isConfirmed, setIsConfirmed] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={isConfirmed}\r\n            onChange={() => setIsConfirmed(!isConfirmed)}\r\n            scale=\"sm\"\r\n          />\r\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n\r\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\r\n          {t('Continue')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Acknowledgement\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { WrappedTokenInfo } from 'state/lists/hooks'\r\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\r\nimport SafemoonWarning from './SafemoonWarning'\r\nimport BondlyWarning from './BondlyWarning'\r\nimport Acknowledgement from './Acknowledgement'\r\n\r\nconst StyledModalContainer = styled(ModalContainer)`\r\n  max-width: 440px;\r\n`\r\n\r\nconst MessageContainer = styled(Message)`\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n`\r\n\r\ninterface SwapWarningModalProps {\r\n  swapCurrency: WrappedTokenInfo\r\n  onDismiss?: () => void\r\n}\r\n\r\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\r\nconst usePreventModalOverlayClick = () => {\r\n  useEffect(() => {\r\n    const preventClickHandler = (e) => {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      return false\r\n    }\r\n\r\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\r\n      el.addEventListener('click', preventClickHandler, true)\r\n    })\r\n\r\n    return () => {\r\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\r\n        el.removeEventListener('click', preventClickHandler, true)\r\n      })\r\n    }\r\n  }, [])\r\n}\r\n\r\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  usePreventModalOverlayClick()\r\n\r\n  const TOKEN_WARNINGS = {\r\n    [SwapWarningTokensConfig.safemoon.address]: {\r\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\r\n      component: <SafemoonWarning />,\r\n    },\r\n    [SwapWarningTokensConfig.bondly.address]: {\r\n      symbol: SwapWarningTokensConfig.bondly.symbol,\r\n      component: <BondlyWarning />,\r\n    },\r\n  }\r\n\r\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\r\n\r\n  return (\r\n    <StyledModalContainer minWidth=\"280px\">\r\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\r\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\r\n      </ModalHeader>\r\n      <ModalBody p=\"24px\">\r\n        <MessageContainer variant=\"warning\" mb=\"24px\">\r\n          <Box>{SWAP_WARNING.component}</Box>\r\n        </MessageContainer>\r\n        <Acknowledgement handleContinueClick={onDismiss} />\r\n      </ModalBody>\r\n    </StyledModalContainer>\r\n  )\r\n}\r\n\r\nexport default SwapWarningModal\r\n","import { Box } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const StyledPriceChart = styled(Box)<{ $isDark: boolean; $isExpanded: boolean }>`\r\n  border: none;\r\n  border-radius: 32px;\r\n  width: 100%;\r\n  height: 70%;\r\n  padding-top: 36px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 8px;\r\n    background: ${({ $isDark }) => ($isDark ? 'rgba(39, 38, 44, 0.5)' : 'rgba(255, 255, 255, 0.5)')};\r\n    border: ${({ theme }) => `1px solid ${theme.colors.cardBorder}`};\r\n    border-radius: ${({ $isExpanded }) => ($isExpanded ? '0' : '16px')};\r\n    width: ${({ $isExpanded }) => ($isExpanded ? '100%' : '50%')};\r\n    height: ${({ $isExpanded }) => ($isExpanded ? 'calc(100vh - 100px)' : '484px')};\r\n  }\r\n`\r\n","import { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport React from 'react'\r\nimport { StyledPriceChart } from './styles'\r\n\r\ninterface BnbWbnbNoticeProps {\r\n  isDark: boolean\r\n  isChartExpanded: boolean\r\n}\r\n\r\nconst BnbWbnbNotice: React.FC<BnbWbnbNoticeProps> = ({ isDark, isChartExpanded }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledPriceChart $isDark={isDark} $isExpanded={isChartExpanded} p=\"24px\">\r\n      <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\" flexDirection=\"column\">\r\n        <Text mb={['8px', '8px', '0px']} textAlign=\"center\">\r\n          {t('You can swap WBNB for BNB (and vice versa) with no trading fees.')}\r\n        </Text>\r\n        <Text mb={['8px', '8px', '0px']} textAlign=\"center\">\r\n          {t('Exchange rate is always 1 to 1.')}\r\n        </Text>\r\n      </Flex>\r\n    </StyledPriceChart>\r\n  )\r\n}\r\n\r\nexport default BnbWbnbNotice\r\n","import { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport React from 'react'\r\nimport { StyledPriceChart } from './styles'\r\n\r\ninterface NoChartAvailableProps {\r\n  isDark: boolean\r\n  isChartExpanded: boolean\r\n  token0Address: string\r\n  token1Address: string\r\n  pairAddress: string\r\n  isMobile: boolean\r\n}\r\n\r\nconst NoChartAvailable: React.FC<NoChartAvailableProps> = ({\r\n  isDark,\r\n  isChartExpanded,\r\n  token0Address,\r\n  token1Address,\r\n  pairAddress,\r\n  isMobile,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledPriceChart $isDark={isDark} $isExpanded={isChartExpanded} p=\"24px\">\r\n      <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\" flexDirection=\"column\">\r\n        <Text mb={['8px', '8px', '0px']}>{t('Failed to load price chart for this pair')}</Text>\r\n        <Text\r\n          textAlign={isMobile ? 'center' : 'left'}\r\n          mb={['8px', '8px', '0px']}\r\n          color=\"textSubtle\"\r\n          small\r\n          style={isMobile && { wordSpacing: '100vw' }}\r\n        >\r\n          Token0: {token0Address ?? 'null'}\r\n        </Text>\r\n        <Text\r\n          textAlign={isMobile ? 'center' : 'left'}\r\n          mb={['8px', '8px', '0px']}\r\n          color=\"textSubtle\"\r\n          small\r\n          style={isMobile && { wordSpacing: '100vw' }}\r\n        >\r\n          Token1: {token1Address ?? 'null'}\r\n        </Text>\r\n        <Text\r\n          textAlign={isMobile ? 'center' : 'left'}\r\n          mb={['8px', '8px', '0px']}\r\n          color=\"textSubtle\"\r\n          small\r\n          style={isMobile && { wordSpacing: '100vw' }}\r\n        >\r\n          Pair: {pairAddress ?? 'null'}\r\n        </Text>\r\n      </Flex>\r\n    </StyledPriceChart>\r\n  )\r\n}\r\n\r\nexport default NoChartAvailable\r\n","import React, { useEffect, Dispatch, SetStateAction } from 'react'\r\nimport { ResponsiveContainer, XAxis, YAxis, Tooltip, AreaChart, Area } from 'recharts'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { LineChartLoader } from 'views/Info/components/ChartLoaders'\r\nimport { PairDataTimeWindowEnum } from 'state/swap/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport type SwapLineChartProps = {\r\n  data: any[]\r\n  setHoverValue: Dispatch<SetStateAction<number | undefined>> // used for value on hover\r\n  setHoverDate: Dispatch<SetStateAction<string | undefined>> // used for label of valye\r\n  isChangePositive: boolean\r\n  timeWindow: PairDataTimeWindowEnum\r\n} & React.HTMLAttributes<HTMLDivElement>\r\n\r\n// Calls setHoverValue and setHoverDate when part of chart is hovered\r\n// Note: this NEEDs to be wrapped inside component and useEffect, if you plug it as is it will create big render problems (try and see console)\r\nconst HoverUpdater = ({ locale, payload, setHoverValue, setHoverDate }) => {\r\n  useEffect(() => {\r\n    setHoverValue(payload.value)\r\n    setHoverDate(\r\n      payload.time.toLocaleString(locale, {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n      }),\r\n    )\r\n  }, [locale, payload.value, payload.time, setHoverValue, setHoverDate])\r\n\r\n  return null\r\n}\r\n\r\nconst getChartColors = ({ isChangePositive }) => {\r\n  return isChangePositive\r\n    ? { gradient1: '#00E7B0', gradient2: '#0C8B6C', stroke: '#31D0AA' }\r\n    : { gradient1: '#ED4B9E', gradient2: '#ED4B9E', stroke: '#ED4B9E ' }\r\n}\r\n\r\nconst dateFormattingByTimewindow: Record<PairDataTimeWindowEnum, Intl.DateTimeFormatOptions> = {\r\n  [PairDataTimeWindowEnum.DAY]: {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  },\r\n  [PairDataTimeWindowEnum.WEEK]: {\r\n    month: 'short',\r\n    day: '2-digit',\r\n  },\r\n  [PairDataTimeWindowEnum.MONTH]: {\r\n    month: 'short',\r\n    day: '2-digit',\r\n  },\r\n  [PairDataTimeWindowEnum.YEAR]: {\r\n    month: 'short',\r\n    day: '2-digit',\r\n  },\r\n}\r\n\r\n/**\r\n * Note: remember that it needs to be mounted inside the container with fixed height\r\n */\r\nconst LineChart = ({ data, setHoverValue, setHoverDate, isChangePositive, timeWindow }: SwapLineChartProps) => {\r\n  const {\r\n    currentLanguage: { locale },\r\n  } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const colors = getChartColors({ isChangePositive })\r\n  const dateFormatting = dateFormattingByTimewindow[timeWindow]\r\n\r\n  if (!data || data.length === 0) {\r\n    return <LineChartLoader />\r\n  }\r\n  return (\r\n    <ResponsiveContainer>\r\n      <AreaChart\r\n        data={data}\r\n        margin={{\r\n          top: 5,\r\n          right: 0,\r\n          left: 0,\r\n          bottom: 5,\r\n        }}\r\n        onMouseLeave={() => {\r\n          if (setHoverDate) setHoverDate(undefined)\r\n          if (setHoverValue) setHoverValue(undefined)\r\n        }}\r\n      >\r\n        <defs>\r\n          <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor={colors.gradient1} stopOpacity={0.34} />\r\n            <stop offset=\"100%\" stopColor={colors.gradient2} stopOpacity={0} />\r\n          </linearGradient>\r\n        </defs>\r\n        <XAxis\r\n          dataKey=\"time\"\r\n          axisLine={false}\r\n          tickLine={false}\r\n          tickFormatter={(time) => time.toLocaleString(locale, dateFormatting)}\r\n          minTickGap={8}\r\n        />\r\n        <YAxis dataKey=\"value\" axisLine={false} tickLine={false} domain={['auto', 'auto']} hide />\r\n        <Tooltip\r\n          cursor={{ stroke: theme.colors.textDisabled }}\r\n          contentStyle={{ display: 'none' }}\r\n          formatter={(tooltipValue, name, props) => (\r\n            <HoverUpdater\r\n              locale={locale}\r\n              payload={props.payload}\r\n              setHoverValue={setHoverValue}\r\n              setHoverDate={setHoverDate}\r\n            />\r\n          )}\r\n        />\r\n        <Area dataKey=\"value\" type=\"linear\" stroke={colors.stroke} fill=\"url(#gradient)\" strokeWidth={2} />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  )\r\n}\r\n\r\nexport default LineChart\r\n","import {\r\n  Box,\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  ExpandIcon,\r\n  Flex,\r\n  IconButton,\r\n  ShrinkIcon,\r\n  Skeleton,\r\n  SyncAltIcon,\r\n  Text,\r\n} from '@pancakeswap/uikit'\r\nimport React, { useState } from 'react'\r\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'components/Logo'\r\nimport { formatAmount, formatAmountNotation } from 'views/Info/utils/formatInfoNumbers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SwapLineChart from './SwapLineChart'\r\nimport { StyledPriceChart } from './styles'\r\nimport { getTimeWindowChange } from './utils'\r\n\r\nconst formatOptions = {\r\n  notation: 'standard' as formatAmountNotation,\r\n  displayThreshold: 0.001,\r\n  tokenPrecision: true,\r\n}\r\n\r\nconst PriceChart = ({\r\n  lineChartData = [],\r\n  setTimeWindow,\r\n  timeWindow,\r\n  inputCurrency,\r\n  outputCurrency,\r\n  onSwitchTokens,\r\n  isDark,\r\n  isChartExpanded,\r\n  setIsChartExpanded,\r\n  isMobile,\r\n}) => {\r\n  const {\r\n    t,\r\n    currentLanguage: { locale },\r\n  } = useTranslation()\r\n  const [hoverValue, setHoverValue] = useState<number | undefined>()\r\n  const [hoverDate, setHoverDate] = useState<string | undefined>()\r\n  const currentDate = new Date().toLocaleString(locale, {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  })\r\n  const valueToDisplay = hoverValue || lineChartData[lineChartData.length - 1]?.value\r\n  const { changePercentage, changeValue } = getTimeWindowChange(lineChartData)\r\n  const isChangePositive = changeValue >= 0\r\n  const chartHeight = isChartExpanded ? 'calc(100% - 120px)' : '310px'\r\n\r\n  const toggleExpanded = () => setIsChartExpanded((currentIsExpanded) => !currentIsExpanded)\r\n\r\n  return (\r\n    <StyledPriceChart $isDark={isDark} $isExpanded={isChartExpanded}>\r\n      <Flex justifyContent=\"space-between\" px=\"24px\">\r\n        <Flex alignItems=\"center\">\r\n          {outputCurrency ? (\r\n            <DoubleCurrencyLogo currency0={inputCurrency} currency1={outputCurrency} size={24} margin />\r\n          ) : (\r\n            inputCurrency && <CurrencyLogo currency={inputCurrency} size=\"24px\" style={{ marginRight: '8px' }} />\r\n          )}\r\n          {inputCurrency && (\r\n            <Text color=\"text\" bold>\r\n              {outputCurrency ? `${inputCurrency.symbol}/${outputCurrency.symbol}` : inputCurrency.symbol}\r\n            </Text>\r\n          )}\r\n          <IconButton variant=\"text\" onClick={onSwitchTokens}>\r\n            <SyncAltIcon ml=\"6px\" color=\"primary\" />\r\n          </IconButton>\r\n        </Flex>\r\n        {!isMobile && (\r\n          <Flex>\r\n            <IconButton variant=\"text\" onClick={toggleExpanded}>\r\n              {isChartExpanded ? <ShrinkIcon color=\"text\" /> : <ExpandIcon color=\"text\" />}\r\n            </IconButton>\r\n          </Flex>\r\n        )}\r\n      </Flex>\r\n      <Flex\r\n        flexDirection={['column', null, null, null, null, null, 'row']}\r\n        alignItems={['flex-start', null, null, null, null, null, 'center']}\r\n        justifyContent=\"space-between\"\r\n        px=\"24px\"\r\n      >\r\n        <Flex flexDirection=\"column\" pt=\"12px\">\r\n          {lineChartData?.length > 0 && valueToDisplay ? (\r\n            <Flex alignItems=\"flex-end\">\r\n              <Text fontSize=\"40px\" mr=\"8px\" bold>\r\n                {formatAmount(valueToDisplay, formatOptions)}\r\n              </Text>\r\n              <Text color=\"textSubtle\" fontSize=\"20px\" mb=\"8px\" mr=\"8px\" bold>\r\n                {outputCurrency?.symbol}\r\n              </Text>\r\n              <Text color={isChangePositive ? 'success' : 'failure'} fontSize=\"20px\" mb=\"8px\" bold>\r\n                {`${isChangePositive ? '+' : ''}${changeValue.toFixed(3)} (${changePercentage}%)`}\r\n              </Text>\r\n            </Flex>\r\n          ) : (\r\n            <Skeleton height=\"36px\" width=\"128px\" />\r\n          )}\r\n          <Text small color=\"secondary\">\r\n            {hoverDate || currentDate}\r\n          </Text>\r\n        </Flex>\r\n        <Box>\r\n          <ButtonMenu activeIndex={timeWindow} onItemClick={setTimeWindow} scale=\"sm\">\r\n            <ButtonMenuItem>{t('24H')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{t('1W')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{t('1M')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{t('1Y')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n        </Box>\r\n      </Flex>\r\n      <Box height={isMobile ? '100%' : chartHeight} p={isMobile ? '0px' : '16px'} width=\"100%\">\r\n        <SwapLineChart\r\n          data={lineChartData}\r\n          setHoverValue={setHoverValue}\r\n          setHoverDate={setHoverDate}\r\n          isChangePositive={isChangePositive}\r\n          timeWindow={timeWindow}\r\n        />\r\n      </Box>\r\n    </StyledPriceChart>\r\n  )\r\n}\r\n\r\nexport default PriceChart\r\n","import { Currency } from '@pancakeswap/sdk'\r\nimport useTheme from 'hooks/useTheme'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { useFetchPairPrices } from 'state/swap/hooks'\r\nimport { PairDataTimeWindowEnum } from 'state/swap/types'\r\nimport BnbWbnbNotice from './BnbWbnbNotice'\r\nimport { BNB_ADDRESS } from './constants'\r\nimport NoChartAvailable from './NoChartAvailable'\r\nimport PriceChart from './PriceChart'\r\nimport { getTokenAddress } from './utils'\r\n\r\ntype PriceChartContainerProps = {\r\n  inputCurrencyId: string\r\n  inputCurrency: Currency\r\n  outputCurrencyId: string\r\n  outputCurrency: Currency\r\n  isChartExpanded: boolean\r\n  setIsChartExpanded: React.Dispatch<React.SetStateAction<boolean>>\r\n  isChartDisplayed: boolean\r\n  currentSwapPrice: {\r\n    [key: string]: number\r\n  }\r\n  isMobile?: boolean\r\n}\r\n\r\nconst PriceChartContainer: React.FC<PriceChartContainerProps> = ({\r\n  inputCurrencyId,\r\n  inputCurrency,\r\n  outputCurrency,\r\n  outputCurrencyId,\r\n  isChartExpanded,\r\n  setIsChartExpanded,\r\n  isChartDisplayed,\r\n  currentSwapPrice,\r\n  isMobile,\r\n}) => {\r\n  const [timeWindow, setTimeWindow] = useState<PairDataTimeWindowEnum>(0)\r\n  const token0Address = getTokenAddress(inputCurrencyId)\r\n  const token1Address = getTokenAddress(outputCurrencyId)\r\n  const [isPairReversed, setIsPairReversed] = useState(false)\r\n  const togglePairReversed = useCallback(() => setIsPairReversed((prePairReversed) => !prePairReversed), [])\r\n\r\n  const { pairPrices, pairId } = useFetchPairPrices({\r\n    token0Address: isPairReversed ? token1Address : token0Address,\r\n    token1Address: isPairReversed ? token0Address : token1Address,\r\n    timeWindow,\r\n    currentSwapPrice,\r\n  })\r\n  const { isDark } = useTheme()\r\n\r\n  if (!isChartDisplayed) {\r\n    return null\r\n  }\r\n\r\n  const isBnbWbnb = token0Address === BNB_ADDRESS && token1Address === BNB_ADDRESS\r\n\r\n  if (isBnbWbnb) {\r\n    return <BnbWbnbNotice isDark={isDark} isChartExpanded={isChartExpanded} />\r\n  }\r\n\r\n  // Sometimes we might receive array full of zeros for obscure tokens while trying to derive data\r\n  // In that case chart is not useful to users\r\n  const isBadData =\r\n    pairPrices &&\r\n    pairPrices.length > 0 &&\r\n    pairPrices.every(\r\n      (price) => !price.value || price.value === 0 || price.value === Infinity || Number.isNaN(price.value),\r\n    )\r\n\r\n  // If results did came back but as empty array - there is no data to display\r\n  if ((!!pairPrices && pairPrices.length === 0) || isBadData || !pairId) {\r\n    return (\r\n      <NoChartAvailable\r\n        isDark={isDark}\r\n        isChartExpanded={isChartExpanded}\r\n        token0Address={token0Address}\r\n        token1Address={token1Address}\r\n        pairAddress={pairId}\r\n        isMobile={isMobile}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <PriceChart\r\n      lineChartData={pairPrices}\r\n      timeWindow={timeWindow}\r\n      setTimeWindow={setTimeWindow}\r\n      inputCurrency={isPairReversed ? outputCurrency : inputCurrency}\r\n      outputCurrency={isPairReversed ? inputCurrency : outputCurrency}\r\n      onSwitchTokens={togglePairReversed}\r\n      isDark={isDark}\r\n      isChartExpanded={isChartExpanded}\r\n      setIsChartExpanded={setIsChartExpanded}\r\n      isMobile={isMobile}\r\n    />\r\n  )\r\n}\r\n\r\nexport default React.memo(PriceChartContainer, (prev, next) => {\r\n  const prevToken0Address = getTokenAddress(prev.inputCurrencyId)\r\n  const nextToken0Address = getTokenAddress(next.inputCurrencyId)\r\n  const prevToken1Address = getTokenAddress(prev.outputCurrencyId)\r\n  const nextToken1Address = getTokenAddress(next.outputCurrencyId)\r\n\r\n  return (\r\n    prev.inputCurrencyId === next.inputCurrencyId &&\r\n    prev.outputCurrencyId === next.outputCurrencyId &&\r\n    prev.isChartExpanded === next.isChartExpanded &&\r\n    prev.isChartDisplayed === next.isChartDisplayed &&\r\n    prev.isMobile === next.isMobile &&\r\n    prev.setIsChartExpanded === next.setIsChartExpanded &&\r\n    ((prev.currentSwapPrice !== null &&\r\n      next.currentSwapPrice !== null &&\r\n      prev.currentSwapPrice[prevToken0Address] === next.currentSwapPrice[nextToken0Address] &&\r\n      prev.currentSwapPrice[prevToken1Address] === next.currentSwapPrice[nextToken1Address]) ||\r\n      (prev.currentSwapPrice === null && next.currentSwapPrice === null))\r\n  )\r\n})\r\n","import { Box, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const StyledSwapContainer = styled(Flex)<{ $isChartExpanded: boolean }>`\r\n  flex-shrink: 0;\r\n  height: fit-content;\r\n  ${({ $isChartExpanded }) => ($isChartExpanded ? 'padding: 0 40px' : 'padding: 0 40px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.xxl} {\r\n    ${({ $isChartExpanded }) => ($isChartExpanded ? 'padding: 0 120px' : 'padding: 0 40px')};\r\n  }\r\n`\r\n\r\nexport const StyledInputCurrencyWrapper = styled(Box)`\r\n  width: 328px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChartIcon, Flex, Heading, HistoryIcon, IconButton, NotificationDot, Text, useModal } from '@pancakeswap/uikit'\r\nimport TransactionsModal from 'components/App/Transactions/TransactionsModal'\r\nimport GlobalSettings from 'components/Menu/GlobalSettings'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\n\r\ninterface Props {\r\n  title: string\r\n  subtitle: string\r\n  noConfig?: boolean\r\n  setIsChartDisplayed?: React.Dispatch<React.SetStateAction<boolean>>\r\n  isChartDisplayed?: boolean\r\n}\r\n\r\nconst CurrencyInputContainer = styled(Flex)`\r\n  align-items: center;\r\n  padding: 24px;\r\n  width: 100%;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst CurrencyInputHeader: React.FC<Props> = ({ title, subtitle, setIsChartDisplayed }) => {\r\n  const [expertMode] = useExpertModeManager()\r\n  const toggleChartDisplayed = () => {\r\n    setIsChartDisplayed((currentIsChartDisplayed) => !currentIsChartDisplayed)\r\n  }\r\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\r\n\r\n  return (\r\n    <CurrencyInputContainer>\r\n      <Flex width=\"100%\" alignItems=\"flex-start\" justifyContent=\"space-between\">\r\n        {setIsChartDisplayed && (\r\n          <IconButton onClick={toggleChartDisplayed} variant=\"text\" scale=\"sm\">\r\n            <ChartIcon width=\"24px\" color=\"primary\" />\r\n          </IconButton>\r\n        )}\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n          <Heading as=\"h2\" mb=\"8px\">\r\n            {title}\r\n          </Heading>\r\n          <Flex alignItems=\"center\">\r\n            <Text color=\"textSubtle\" fontSize=\"14px\">\r\n              {subtitle}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex>\r\n          <NotificationDot show={expertMode}>\r\n            <GlobalSettings color=\"primary\" mr=\"0\" />\r\n          </NotificationDot>\r\n          <IconButton onClick={onPresentTransactionsModal} variant=\"text\" scale=\"sm\">\r\n            <HistoryIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n        </Flex>\r\n      </Flex>\r\n    </CurrencyInputContainer>\r\n  )\r\n}\r\n\r\nexport default CurrencyInputHeader\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ArrowDownIcon,\r\n  Box,\r\n  useModal,\r\n  Flex,\r\n  IconButton,\r\n  BottomDrawer,\r\n  useMatchBreakpoints,\r\n} from '@pancakeswap/uikit'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport Footer from 'components/Menu/Footer'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\r\nimport AddressInputPanel from './components/AddressInputPanel'\r\nimport { GreyCard } from '../../components/Card'\r\nimport Column, { AutoColumn } from '../../components/Layout/Column'\r\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\r\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\r\nimport TradePrice from './components/TradePrice'\r\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\r\nimport ProgressSteps from './components/ProgressSteps'\r\nimport { AppBody } from '../../components/App'\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\r\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\r\nimport { Field } from '../../state/swap/actions'\r\nimport {\r\n  useDefaultsFromURLSearch,\r\n  useDerivedSwapInfo,\r\n  useSwapActionHandlers,\r\n  useSwapState,\r\n  useSingleTokenSwapInfo,\r\n} from '../../state/swap/hooks'\r\nimport {\r\n  useExpertModeManager,\r\n  useUserSlippageTolerance,\r\n  useUserSingleHopOnly,\r\n  useExchangeChartManager,\r\n} from '../../state/user/hooks'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\r\nimport CircleLoader from '../../components/Loader/CircleLoader'\r\nimport Page from '../Page'\r\nimport SwapWarningModal from './components/SwapWarningModal'\r\nimport PriceChartContainer from './components/Chart/PriceChartContainer'\r\nimport { StyledInputCurrencyWrapper, StyledSwapContainer } from './styles'\r\nimport CurrencyInputHeader from './components/CurrencyInputHeader'\r\n\r\nconst Label = styled(Text)`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nexport default function Swap({ history }: RouteComponentProps) {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const [isChartExpanded, setIsChartExpanded] = useState(false)\r\n  const [userChartPreference, setUserChartPreference] = useExchangeChartManager(isMobile)\r\n  const [isChartDisplayed, setIsChartDisplayed] = useState(userChartPreference)\r\n\r\n  useEffect(() => {\r\n    setUserChartPreference(isChartDisplayed)\r\n  }, [isChartDisplayed, setUserChartPreference])\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency],\r\n  )\r\n\r\n  // dismiss warning if all imported tokens are in active lists\r\n  const defaultTokens = useAllTokens()\r\n  const importTokensNotInDefault =\r\n    urlLoadedTokens &&\r\n    urlLoadedTokens.filter((token: Token) => {\r\n      return !(token.address in defaultTokens)\r\n    })\r\n\r\n  const { account } = useActiveWeb3React()\r\n\r\n  // for expert mode\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n\r\n  // Price data\r\n  const {\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n  } = useSwapState()\r\n\r\n  const {\r\n    wrapType,\r\n    execute: onWrap,\r\n    inputError: wrapInputError,\r\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = showWrap ? undefined : v2Trade\r\n\r\n  const singleTokenPrice = useSingleTokenSwapInfo()\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\r\n      })\r\n      .catch((error) => {\r\n        setSwapState({\r\n          attemptingTxn: false,\r\n          tradeToConfirm,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        })\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\r\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\r\n\r\n  // swap warning state\r\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\r\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\r\n\r\n  const shouldShowSwapWarning = (swapCurrency) => {\r\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\r\n      const warningTokenData = warningTokenConfig[1]\r\n      return swapCurrency.address === warningTokenData.address\r\n    })\r\n    return Boolean(isWarningToken)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (swapWarningCurrency) {\r\n      onPresentSwapWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [swapWarningCurrency])\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\r\n      if (showSwapWarning) {\r\n        setSwapWarningCurrency(inputCurrency)\r\n      } else {\r\n        setSwapWarningCurrency(null)\r\n      }\r\n    },\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => {\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\r\n      if (showSwapWarning) {\r\n        setSwapWarningCurrency(outputCurrency)\r\n      } else {\r\n        setSwapWarningCurrency(null)\r\n      }\r\n    },\r\n\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\r\n\r\n  const [onPresentImportTokenWarningModal] = useModal(\r\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (importTokensNotInDefault.length > 0) {\r\n      onPresentImportTokenWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [importTokensNotInDefault.length])\r\n\r\n  const [onPresentConfirmModal] = useModal(\r\n    <ConfirmSwapModal\r\n      trade={trade}\r\n      originalTrade={tradeToConfirm}\r\n      onAcceptChanges={handleAcceptChanges}\r\n      attemptingTxn={attemptingTxn}\r\n      txHash={txHash}\r\n      recipient={recipient}\r\n      allowedSlippage={allowedSlippage}\r\n      onConfirm={handleSwap}\r\n      swapErrorMessage={swapErrorMessage}\r\n      customOnDismiss={handleConfirmDismiss}\r\n    />,\r\n    true,\r\n    true,\r\n    'confirmSwapModal',\r\n  )\r\n\r\n  return (\r\n    <Page removePadding={isChartExpanded} hideFooterOnDesktop={isChartExpanded}>\r\n      <Flex width=\"100%\" justifyContent=\"center\" position=\"relative\">\r\n        {!isMobile && (\r\n          <PriceChartContainer\r\n            inputCurrencyId={inputCurrencyId}\r\n            inputCurrency={currencies[Field.INPUT]}\r\n            outputCurrencyId={outputCurrencyId}\r\n            outputCurrency={currencies[Field.OUTPUT]}\r\n            isChartExpanded={isChartExpanded}\r\n            setIsChartExpanded={setIsChartExpanded}\r\n            isChartDisplayed={isChartDisplayed}\r\n            currentSwapPrice={singleTokenPrice}\r\n          />\r\n        )}\r\n        <BottomDrawer\r\n          content={\r\n            <PriceChartContainer\r\n              inputCurrencyId={inputCurrencyId}\r\n              inputCurrency={currencies[Field.INPUT]}\r\n              outputCurrencyId={outputCurrencyId}\r\n              outputCurrency={currencies[Field.OUTPUT]}\r\n              isChartExpanded={isChartExpanded}\r\n              setIsChartExpanded={setIsChartExpanded}\r\n              isChartDisplayed={isChartDisplayed}\r\n              currentSwapPrice={singleTokenPrice}\r\n              isMobile\r\n            />\r\n          }\r\n          isOpen={isChartDisplayed}\r\n          setIsOpen={setIsChartDisplayed}\r\n        />\r\n        <Flex flexDirection=\"column\">\r\n          <StyledSwapContainer $isChartExpanded={isChartExpanded}>\r\n            <StyledInputCurrencyWrapper mt={isChartExpanded ? '24px' : '0'} mr={isChartExpanded ? '0' : '0'}>\r\n              <AppBody>\r\n                <CurrencyInputHeader\r\n                  title={t('Swap')}\r\n                  subtitle={t('Trade tokens in an instant')}\r\n                  setIsChartDisplayed={setIsChartDisplayed}\r\n                  isChartDisplayed={isChartDisplayed}\r\n                />\r\n                <Wrapper id=\"swap-page\">\r\n                  <AutoColumn gap=\"md\">\r\n                    <CurrencyInputPanel\r\n                      label={\r\n                        independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')\r\n                      }\r\n                      value={formattedAmounts[Field.INPUT]}\r\n                      showMaxButton={!atMaxAmountInput}\r\n                      currency={currencies[Field.INPUT]}\r\n                      onUserInput={handleTypeInput}\r\n                      onMax={handleMaxInput}\r\n                      onCurrencySelect={handleInputSelect}\r\n                      otherCurrency={currencies[Field.OUTPUT]}\r\n                      id=\"swap-currency-input\"\r\n                    />\r\n\r\n                    <AutoColumn justify=\"space-between\">\r\n                      <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                        <IconButton variant=\"light\" scale=\"sm\">\r\n                          <ArrowDownIcon\r\n                            width=\"16px\"\r\n                            onClick={() => {\r\n                              setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                              onSwitchTokens()\r\n                            }}\r\n                            color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\r\n                          />\r\n                        </IconButton>\r\n                        {recipient === null && !showWrap && isExpertMode ? (\r\n                          <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                            {t('+ Add a send (optional)')}\r\n                          </Button>\r\n                        ) : null}\r\n                      </AutoRow>\r\n                    </AutoColumn>\r\n                    <CurrencyInputPanel\r\n                      value={formattedAmounts[Field.OUTPUT]}\r\n                      onUserInput={handleTypeOutput}\r\n                      label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\r\n                      showMaxButton={false}\r\n                      currency={currencies[Field.OUTPUT]}\r\n                      onCurrencySelect={handleOutputSelect}\r\n                      otherCurrency={currencies[Field.INPUT]}\r\n                      id=\"swap-currency-output\"\r\n                    />\r\n\r\n                    {isExpertMode && recipient !== null && !showWrap ? (\r\n                      <>\r\n                        <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                          <ArrowWrapper clickable={false}>\r\n                            <ArrowDownIcon width=\"16px\" />\r\n                          </ArrowWrapper>\r\n                          <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                            {t('- Remove send')}\r\n                          </Button>\r\n                        </AutoRow>\r\n                        <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n                      </>\r\n                    ) : null}\r\n\r\n                    {showWrap ? null : (\r\n                      <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\r\n                        {Boolean(trade) && (\r\n                          <RowBetween align=\"center\">\r\n                            <Label>{t('Price')}</Label>\r\n                            <TradePrice\r\n                              price={trade?.executionPrice}\r\n                              showInverted={showInverted}\r\n                              setShowInverted={setShowInverted}\r\n                            />\r\n                          </RowBetween>\r\n                        )}\r\n                        {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                          <RowBetween align=\"center\">\r\n                            <Label>{t('Slippage Tolerance')}</Label>\r\n                            <Text bold color=\"primary\">\r\n                              {allowedSlippage / 100}%\r\n                            </Text>\r\n                          </RowBetween>\r\n                        )}\r\n                      </AutoColumn>\r\n                    )}\r\n                  </AutoColumn>\r\n                  <Box mt=\"1rem\">\r\n                    {swapIsUnsupported ? (\r\n                      <Button width=\"100%\" disabled mb=\"4px\">\r\n                        {t('Unsupported Asset')}\r\n                      </Button>\r\n                    ) : !account ? (\r\n                      <ConnectWalletButton width=\"100%\" />\r\n                    ) : showWrap ? (\r\n                      <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\r\n                        {wrapInputError ??\r\n                          (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n                      </Button>\r\n                    ) : noRoute && userHasSpecifiedInputOutput ? (\r\n                      <GreyCard style={{ textAlign: 'center' }}>\r\n                        <Text color=\"textSubtle\" mb=\"4px\">\r\n                          {t('Insufficient liquidity for this trade.')}\r\n                        </Text>\r\n                        {singleHopOnly && (\r\n                          <Text color=\"textSubtle\" mb=\"4px\">\r\n                            {t('Try enabling multi-hop trades.')}\r\n                          </Text>\r\n                        )}\r\n                      </GreyCard>\r\n                    ) : showApproveFlow ? (\r\n                      <RowBetween>\r\n                        <Button\r\n                          variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\r\n                          onClick={approveCallback}\r\n                          disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                          width=\"48%\"\r\n                        >\r\n                          {approval === ApprovalState.PENDING ? (\r\n                            <AutoRow gap=\"6px\" justify=\"center\">\r\n                              {t('Enabling')} <CircleLoader stroke=\"white\" />\r\n                            </AutoRow>\r\n                          ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                            t('Enabled')\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\r\n                          )}\r\n                        </Button>\r\n                        <Button\r\n                          variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\r\n                          onClick={() => {\r\n                            if (isExpertMode) {\r\n                              handleSwap()\r\n                            } else {\r\n                              setSwapState({\r\n                                tradeToConfirm: trade,\r\n                                attemptingTxn: false,\r\n                                swapErrorMessage: undefined,\r\n                                txHash: undefined,\r\n                              })\r\n                              onPresentConfirmModal()\r\n                            }\r\n                          }}\r\n                          width=\"48%\"\r\n                          id=\"swap-button\"\r\n                          disabled={\r\n                            !isValid ||\r\n                            approval !== ApprovalState.APPROVED ||\r\n                            (priceImpactSeverity > 3 && !isExpertMode)\r\n                          }\r\n                        >\r\n                          {priceImpactSeverity > 3 && !isExpertMode\r\n                            ? t('Price Impact High')\r\n                            : priceImpactSeverity > 2\r\n                            ? t('Swap Anyway')\r\n                            : t('Swap')}\r\n                        </Button>\r\n                      </RowBetween>\r\n                    ) : (\r\n                      <Button\r\n                        variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\r\n                        onClick={() => {\r\n                          if (isExpertMode) {\r\n                            handleSwap()\r\n                          } else {\r\n                            setSwapState({\r\n                              tradeToConfirm: trade,\r\n                              attemptingTxn: false,\r\n                              swapErrorMessage: undefined,\r\n                              txHash: undefined,\r\n                            })\r\n                            onPresentConfirmModal()\r\n                          }\r\n                        }}\r\n                        id=\"swap-button\"\r\n                        width=\"100%\"\r\n                        disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n                      >\r\n                        {swapInputError ||\r\n                          (priceImpactSeverity > 3 && !isExpertMode\r\n                            ? t('Price Impact Too High')\r\n                            : priceImpactSeverity > 2\r\n                            ? t('Swap Anyway')\r\n                            : t('Swap'))}\r\n                      </Button>\r\n                    )}\r\n                    {showApproveFlow && (\r\n                      <Column style={{ marginTop: '1rem' }}>\r\n                        <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\r\n                      </Column>\r\n                    )}\r\n                    {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n                  </Box>\r\n                </Wrapper>\r\n              </AppBody>\r\n              {!swapIsUnsupported ? (\r\n                trade && <AdvancedSwapDetailsDropdown trade={trade} />\r\n              ) : (\r\n                <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\r\n              )}\r\n            </StyledInputCurrencyWrapper>\r\n          </StyledSwapContainer>\r\n          {isChartExpanded && (\r\n            <Box display={['none', null, null, 'block']} width=\"100%\" height=\"100%\">\r\n              <Footer variant=\"side\" />\r\n            </Box>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n    </Page>\r\n  )\r\n}\r\n","import { Percent } from '@pancakeswap/sdk'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\r\n\r\n/**\r\n * Given the price impact, get user confirmation.\r\n *\r\n * @param priceImpactWithoutFee price impact of the trade without the fee.\r\n * @param t Translation\r\n */\r\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t: ContextApi['t']): boolean {\r\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\r\n    const confirmWord = 'confirm'\r\n    return (\r\n      // eslint-disable-next-line no-alert\r\n      window.prompt(\r\n        t(\r\n          'This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.',\r\n          {\r\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\r\n            word: confirmWord,\r\n          },\r\n        ),\r\n      ) === confirmWord\r\n    )\r\n  }\r\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\r\n    // eslint-disable-next-line no-alert\r\n    return window.confirm(\r\n      t(\r\n        'This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.',\r\n        {\r\n          amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\r\n        },\r\n      ),\r\n    )\r\n  }\r\n  return true\r\n}\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\nimport AddLiquidity from './index'\r\n\r\nexport function RedirectToAddLiquidity() {\r\n  return <Redirect to=\"/add/\" />\r\n}\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\r\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA },\r\n    },\r\n  } = props\r\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\r\n  if (match?.length) {\r\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\r\n  }\r\n\r\n  return <AddLiquidity {...props} />\r\n}\r\n\r\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA, currencyIdB },\r\n    },\r\n  } = props\r\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\r\n    return <Redirect to={`/add/${currencyIdA}`} />\r\n  }\r\n  return <AddLiquidity {...props} />\r\n}\r\n","import React from 'react'\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\r\n\r\nfunction RedirectOldRemoveLiquidityPathStructure({\r\n  match: {\r\n    params: { tokens },\r\n  },\r\n}: RouteComponentProps<{ tokens: string }>) {\r\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\r\n    return <Redirect to=\"/pool\" />\r\n  }\r\n  const [currency0, currency1] = tokens.split('-')\r\n\r\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\r\n}\r\nexport default RedirectOldRemoveLiquidityPathStructure\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\n\r\n// Redirects to swap but only replace the pathname\r\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\r\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\r\n}\r\n\r\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\r\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\r\n  const {\r\n    location,\r\n    location: { search },\r\n    match: {\r\n      params: { outputCurrency },\r\n    },\r\n  } = props\r\n\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        ...location,\r\n        pathname: '/swap',\r\n        search:\r\n          search && search.length > 1\r\n            ? `${search}&outputCurrency=${outputCurrency}`\r\n            : `?outputCurrency=${outputCurrency}`,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport useUserAgent from 'hooks/useUserAgent'\r\nimport useScrollOnRouteChange from 'hooks/useScrollOnRouteChange'\r\nimport { usePollBlockNumber } from 'state/block/hooks'\r\nimport { usePollCoreFarmData } from 'state/farms/hooks'\r\nimport { useFetchProfile } from 'state/profile/hooks'\r\nimport { DatePickerPortal } from 'components/DatePicker'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport { ToastListener } from './contexts/ToastsContext'\r\nimport PageLoader from './components/Loader/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport GlobalCheckClaimStatus from './components/GlobalCheckClaimStatus'\r\nimport history from './routerHistory'\r\n// Views included in the main bundle\r\nimport Pools from './views/Pools'\r\nimport Swap from './views/Swap'\r\nimport {\r\n  RedirectDuplicateTokenIds,\r\n  RedirectOldAddLiquidityPathStructure,\r\n  RedirectToAddLiquidity,\r\n} from './views/AddLiquidity/redirects'\r\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\r\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\r\nimport { useInactiveListener } from './hooks/useInactiveListener'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\r\nconst Lottery = lazy(() => import('./views/Lottery'))\r\nconst Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst Teams = lazy(() => import('./views/Teams'))\r\nconst Team = lazy(() => import('./views/Teams/Team'))\r\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\r\nconst Predictions = lazy(() => import('./views/Predictions'))\r\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\r\nconst Voting = lazy(() => import('./views/Voting'))\r\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\r\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\r\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\r\nconst Liquidity = lazy(() => import('./views/Pool'))\r\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\r\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\r\nconst Info = lazy(() => import('./views/Info'))\r\nconst NftMarket = lazy(() => import('./views/Nft/market'))\r\nconst ProfileCreation = lazy(() => import('./views/ProfileCreation'))\r\nconst PancakeSquad = lazy(() => import('./views/PancakeSquad'))\r\n\r\n// This config is required for number formatting\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  const { account } = useWeb3React()\r\n\r\n  usePollBlockNumber()\r\n  useEagerConnect()\r\n  useFetchProfile()\r\n  usePollCoreFarmData()\r\n  useScrollOnRouteChange()\r\n  useUserAgent()\r\n  useInactiveListener()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <GlobalCheckClaimStatus excludeLocations={[]} />\r\n      <Menu>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Farms />\r\n            </Route>\r\n            <Route exact path=\"/farms/auction\">\r\n              <FarmAuction />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route>\r\n            <Route path=\"/lottery\">\r\n              <Lottery />\r\n            </Route>\r\n            <Route path=\"/ifo\">\r\n              <Ifos />\r\n            </Route>\r\n            <Route exact path=\"/teams\">\r\n              <Teams />\r\n            </Route>\r\n            <Route path=\"/teams/:id\">\r\n              <Team />\r\n            </Route>\r\n            <Route path=\"/create-profile\">\r\n              <ProfileCreation />\r\n            </Route>\r\n            <Route path=\"/competition\">\r\n              <TradingCompetition />\r\n            </Route>\r\n            <Route exact path=\"/prediction\">\r\n              <Predictions />\r\n            </Route>\r\n            <Route path=\"/prediction/leaderboard\">\r\n              <PredictionsLeaderboard />\r\n            </Route>\r\n            <Route exact path=\"/voting\">\r\n              <Voting />\r\n            </Route>\r\n            <Route exact path=\"/voting/proposal/create\">\r\n              <CreateProposal />\r\n            </Route>\r\n            <Route path=\"/voting/proposal/:id\">\r\n              <Proposal />\r\n            </Route>\r\n\r\n            {/* NFT */}\r\n            <Route path=\"/nfts\">\r\n              <NftMarket />\r\n            </Route>\r\n\r\n            <Route path=\"/pancake-squad\">\r\n              <PancakeSquad />\r\n            </Route>\r\n\r\n            {/* Info pages */}\r\n            <Route path=\"/info\">\r\n              <Info />\r\n            </Route>\r\n\r\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\r\n            <Route exact strict path=\"/swap\" component={Swap} />\r\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\r\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\r\n            <Route exact strict path=\"/find\" component={PoolFinder} />\r\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\r\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\r\n            <Route exact path=\"/add\" component={AddLiquidity} />\r\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\r\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\r\n            <Route exact path=\"/create\" component={AddLiquidity} />\r\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\r\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\r\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\r\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\r\n\r\n            {/* Redirect */}\r\n            <Route path=\"/pool\">\r\n              <Redirect to=\"/liquidity\" />\r\n            </Route>\r\n            <Route path=\"/staking\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/syrup\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/collectibles\">\r\n              <Redirect to=\"/nfts\" />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Redirect to={`${nftsBaseUrl}/profile/${account?.toLowerCase() || ''}`} />\r\n            </Route>\r\n\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n      <DatePickerPortal />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { profileClear } from '../state/profile'\r\nimport { resetUserNftState } from '../state/nftMarket/reducer'\r\nimport { clearAllTransactions } from '../state/transactions/actions'\r\nimport { useAppDispatch } from '../state'\r\nimport { connectorsByName } from '../utils/web3React'\r\n\r\nexport const useInactiveListener = () => {\r\n  const { account, chainId, connector } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account && connector) {\r\n      const handleDeactivate = () => {\r\n        dispatch(profileClear())\r\n        dispatch(resetUserNftState())\r\n        // This localStorage key is set by @web3-react/walletconnect-connector\r\n        if (window.localStorage.getItem('walletconnect')) {\r\n          connectorsByName.walletconnect.close()\r\n          connectorsByName.walletconnect.walletConnectProvider = null\r\n        }\r\n        window.localStorage.removeItem(connectorLocalStorageKey)\r\n        if (chainId) {\r\n          dispatch(clearAllTransactions({ chainId }))\r\n        }\r\n      }\r\n\r\n      connector.addListener('Web3ReactDeactivate', handleDeactivate)\r\n\r\n      return () => {\r\n        connector.removeListener('Web3ReactDeactivate', handleDeactivate)\r\n      }\r\n    }\r\n    return undefined\r\n  }, [account, chainId, dispatch, connector])\r\n}\r\n","import React from 'react'\r\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\nimport { Provider } from 'react-redux'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { LanguageProvider } from 'contexts/Localization'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { ToastsProvider } from 'contexts/ToastsContext'\r\nimport store from 'state'\r\n\r\nconst ThemeProviderWrapper = (props) => {\r\n  const [isDark] = useThemeManager()\r\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\r\n}\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastsProvider>\r\n          <HelmetProvider>\r\n            <ThemeProviderWrapper>\r\n              <LanguageProvider>\r\n                <RefreshContextProvider>\r\n                  <ModalProvider>{children}</ModalProvider>\r\n                </RefreshContextProvider>\r\n              </LanguageProvider>\r\n            </ThemeProviderWrapper>\r\n          </HelmetProvider>\r\n        </ToastsProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React, { useMemo, ReactNode } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\r\nimport { BLOCKED_ADDRESSES } from './config/constants'\r\nimport ListsUpdater from './state/lists/updater'\r\nimport MulticallUpdater from './state/multicall/updater'\r\nimport TransactionUpdater from './state/transactions/updater'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <ListsUpdater />\r\n      <TransactionUpdater />\r\n      <MulticallUpdater />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Blocklist({ children }: { children: ReactNode }) {\r\n  const { account } = useActiveWeb3React()\r\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\r\n  if (blocked) {\r\n    return <div>Blocked address</div>\r\n  }\r\n  return <>{children}</>\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Blocklist>\r\n      <Providers>\r\n        <Updaters />\r\n        <App />\r\n      </Providers>\r\n    </Blocklist>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}
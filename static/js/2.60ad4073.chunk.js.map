{"version":3,"sources":["views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx","../node_modules/lodash/capitalize.js","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx","components/PageHeader/PageHeader.tsx","components/AddressInputSelect/index.tsx","../node_modules/lodash/upperFirst.js","../node_modules/lodash/_hasUnicode.js","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/hooks/useGetCollectionDistribution.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/components/StatBox.tsx","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_unicodeToArray.js"],"names":["SearchBar","props","history","useHistory","onAddressClick","value","push","nftsBaseUrl","MarketPageTitle","title","description","children","gridGap","alignItems","gridTemplateColumns","as","scale","color","mb","BaseSubMenu","styled","SubMenuItems","theme","colors","cardBorder","StyledBannerImage","div","attrs","alt","src","mediaQueries","sm","md","BannerHeader","bannerImage","bannerAlt","avatar","flexDirection","position","pb","BannerImage","bottom","left","toString","require","upperFirst","module","exports","string","toLowerCase","BackLink","RouterLink","primary","TopBar","t","useTranslation","justifyContent","to","width","LowestPriceStatBoxItem","collectionAddress","useState","lowestPrice","setLowestPrice","useEffect","a","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","StatBox","symbol","stat","Header","collection","useParams","totalSupply","numberTokensListed","totalVolumeBNB","banner","useLocation","pathname","hash","volume","parseFloat","itemsConfig","label","href","MarketPageHeader","large","AvatarImage","name","formatNumber","Number","address","Container","items","activeItem","mt","Outer","Box","background","secondary","Inner","PageHeader","ResultStatus","SubMenu","input","inputSecondary","radii","default","isOpen","AddressLink","Text","initialState","isFetching","resultFound","NOT_VALID","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","state","setState","isAddress","prevState","hasResults","FOUND","NOT_FOUND","validAddressHandler","placeholder","subject","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","onClick","px","fontWeight","createCaseFirst","reHasUnicode","RegExp","test","useTheme","isDark","useGetCollectionDistributionPB","data","getCollectionDistributionApi","pancakeBunniesAddress","apiResponse","fetchTokens","useGetCollectionDistribution","borderColor","StatBoxItem","fontSize","textAlign","height","mx","Flex","invertedContrast","card","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","join","slice","baseSlice","array","start","end","length","index","result","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match"],"mappings":"gLAeeA,IAVa,SAACC,GAC3B,IAAMC,EAAUC,cAMhB,OAAO,cAAC,IAAD,aAAoBC,eAJA,SAACC,GAC1BH,EAAQI,KAAR,UAAgBC,IAAhB,oBAAuCF,MAG0BJ,M,+GCQtDO,IAZyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,SAAaV,EAApC,wBACtD,eAAC,KAAD,yBAAMW,QAAQ,OAAOC,WAAW,SAASC,oBAAqB,CAAC,MAAO,KAAM,KAAM,KAAM,mBAAuBb,GAA/G,cACE,eAAC,IAAD,WACE,cAAC,KAAD,CAASc,GAAG,KAAKC,MAAM,KAAKC,MAAM,YAAYC,GAAG,OAAjD,SACGT,IAEFC,KAEH,cAAC,IAAD,UAAMC,U,6DCbJQ,EAAcC,YAAOC,KAAPD,CAAH,+FAEM,qBAAGE,MAAkBC,OAAOC,cAGpCL,O,4ECqBAM,E,KAtBWL,EAAOM,IAAIC,OAA8B,kBAAc,CAC/EC,IADiE,EAAGA,OAA5CR,CAAH,kTAGnB,gBAAGS,EAAH,EAAGA,IAAKP,EAAR,EAAQA,MAAR,OAAqBO,EAAG,iCAA6BA,EAA7B,kCAA4DP,EAAMC,OAAOC,eAC1E,qBAAGK,OAS1B,qBAAGP,MAAkBQ,aAAaC,MAIlC,qBAAGT,MAAkBQ,aAAaE,M,yDCEvBC,IAhBmC,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,OAAQzB,EAAyB,EAAzBA,SAAaV,EAAY,iBAC5G,OACE,cAAC,KAAD,yBAAMoC,cAAc,SAASnB,GAAG,QAAWjB,GAA3C,aACE,eAAC,IAAD,CAAKqC,SAAS,WAAWC,GAAG,OAA5B,UACE,cAACC,EAAD,CAAaX,IAAKK,EAAaN,IAAKO,IACpC,cAAC,IAAD,CAAKG,SAAS,WAAWG,OAAQ,EAAGC,MAAO,EAA3C,SACE,eAAC,KAAD,CAAM7B,WAAW,WAAjB,UACGuB,EACAzB,e,qBClBb,IAAIgC,EAAWC,EAAQ,KACnBC,EAAaD,EAAQ,KAqBzBE,EAAOC,QAJP,SAAoBC,GAClB,OAAOH,EAAWF,EAASK,GAAQC,iB,gMCX/BC,EAAW9B,YAAO+B,IAAP/B,CAAH,iHAEH,qBAAGE,MAAkBC,OAAO6B,WAqBxBC,EAhBU,WACvB,IAAQC,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,CAAMzC,WAAW,SAAS2C,eAAe,gBAAgBtC,GAAG,OAA5D,UACE,eAACgC,EAAD,CAAUO,GAAE,UAAKlD,IAAL,gBAAZ,UACE,cAAC,IAAD,CAAiBU,MAAM,UAAUyC,MAAM,SACtCJ,EAAE,sBAEL,cAAC,IAAD,UACE,cAACtD,EAAA,EAAD,U,8ECQO2D,EAxBuD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,kBAAsB3D,EAAY,iBACzG,EAAsC4D,mBAAiB,MAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACQT,EAAMC,cAAND,EAERU,qBAAU,YACc,uCAAG,4BAAAC,EAAA,sEACaC,YAA2BN,GADxC,OACjBO,EADiB,OAEvBJ,EAAeI,GAFQ,2CAAH,qDAKtBC,KACC,CAACR,EAAmBG,IAEvB,IAAMM,EACY,OAAhBP,EACI,KACAA,EAAYQ,oBAAeC,EAAW,CACpCC,sBAAuB,EACvBC,sBAAuB,IAG/B,OAAO,cAACC,EAAA,EAAD,aAAajE,MAAO6C,EAAE,oBAAqB,CAAEqB,OAAQ,QAAUC,KAAMP,GAA0BpE,KC0CzF4E,IAnDuB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC/BlB,EAAsBmB,cAAtBnB,kBACAoB,EAAoEF,EAApEE,YAAaC,EAAuDH,EAAvDG,mBAAoBC,EAAmCJ,EAAnCI,eAAgBC,EAAmBL,EAAnBK,OAAQ/C,EAAW0C,EAAX1C,OACzDkB,EAAMC,cAAND,EACR,EAA2B8B,cAAnBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAEZC,EAASL,EACXM,WAAWN,GAAgBZ,oBAAeC,EAAW,CACnDC,sBAAuB,EACvBC,sBAAuB,IAEzB,IAEEgB,EAAc,CAClB,CACEC,MAAOpC,EAAE,SACTqC,KAAK,GAAD,OAAKpF,IAAL,wBAAgCqD,EAAhC,WAEN,CACE8B,MAAOpC,EAAE,UACTqC,KAAK,GAAD,OAAKpF,IAAL,wBAAgCqD,EAAhC,aAIR,OACE,qCACE,eAACgC,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC3D,EAAA,EAAD,CAAcC,YAAaiD,EAAOU,MAAOzD,OAAQ,cAAC0D,EAAA,EAAD,CAAajE,IAAKO,MACnE,cAAC5B,EAAA,EAAD,CACEC,MAAOqE,EAAWiB,KAClBrF,YAAaoE,EAAWpE,YAAc,cAAC,KAAD,CAAMO,MAAM,aAAZ,SAA0BqC,EAAEwB,EAAWpE,eAAuB,KAFtG,SAIE,eAACgE,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CAAajE,MAAO6C,EAAE,SAAUsB,KAAMoB,YAAaC,OAAOjB,GAAc,EAAG,KAC3E,cAACN,EAAA,EAAD,CACEjE,MAAO6C,EAAE,gBACTsB,KAAMK,EAAqBe,YAAaC,OAAOhB,GAAqB,EAAG,GAAK,MAE9E,cAAC,EAAD,CAAwBrB,kBAAmBkB,EAAWoB,UACtD,cAACxB,EAAA,EAAD,CAAajE,MAAO6C,EAAE,kBAAmB,CAAEqB,OAAQ,QAAUC,KAAMW,YAIzE,cAACY,EAAA,EAAD,UACE,cAAChF,EAAA,EAAD,CAAaiF,MAAOX,EAAaY,WAAU,UAAKhB,GAAL,OAAgBC,GAAQ,UAAYgB,GAAG,OAAOpF,GAAG,e,kKC5D9FqF,EAAQnF,YAAOoF,IAAPpF,CAAH,sIACQ,gBAAGE,EAAH,EAAGA,MAAH,SAAUmF,YAA+BnF,EAAMC,OAAOmF,aAInEC,EAAQvF,YAAO+E,IAAP/E,CAAH,2EAWIwF,EAN+B,SAAC,GAAD,IAAGH,EAAH,EAAGA,WAAY9F,EAAf,EAAeA,SAAaV,EAA5B,wBAC5C,cAACsG,EAAD,yBAAOE,WAAYA,GAAgBxG,GAAnC,aACE,cAAC0G,EAAD,UAAQhG,S,yCCXPkG,E,0JAAAA,O,yBAAAA,I,iBAAAA,I,0BAAAA,M,KAWL,IAAMC,EAAU1F,IAAOM,IAAV,wXAEG,qBAAGJ,MAAkBC,OAAOwF,SACtB,qBAAGzF,MAAkBC,OAAOyF,kBAC3B,qBAAG1F,MAAkB2F,MAAMC,WAAW,qBAAG5F,MAAkB2F,MAAMC,WAYpF,qBAAGC,QACG,yEAQJC,EAAchG,YAAOiG,KAAPjG,CAAH,mJAQXkG,EAAe,CACnBC,YAAY,EACZC,YAAaX,EAAaY,UAC1BpH,MAAO,IAGHqH,EAA6B,kBAAMC,QAAQC,SAAQ,IA4E1CC,IA1E+C,SAAC,GAIxD,IAAD,IAHJC,sBAGI,MAHaJ,EAGb,EAFJtH,EAEI,EAFJA,eACGH,EACC,iBACJ,EAA0B4D,mBAASyD,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACQ1E,EAAMC,cAAND,EACAiE,EAAmCQ,EAAnCR,WAAYC,EAAuBO,EAAvBP,YAAanH,EAAU0H,EAAV1H,MAyCjC,OAzBA2D,qBAAU,YACoC,IAArBiE,YAAU5H,GAER,uCAAG,4BAAA4D,EAAA,sEAExB+D,GAAS,SAACE,GAAD,mBAAC,eAAoBA,GAArB,IAAgCX,YAAY,OAF7B,SAGCO,EAAezH,GAHhB,OAGlB8H,EAHkB,OAKxBH,GAAS,SAACE,GAAD,mBAAC,eACLA,GADI,IAEPX,YAAY,EACZC,YAAaW,EAAatB,EAAauB,MAAQvB,EAAawB,eARtC,gDAWxBL,GAAS,SAACE,GAAD,mBAAC,eAAoBA,GAArB,IAAgCX,YAAY,OAX7B,yDAAH,oDAgBvBe,GAEAN,GAAS,SAACE,GAAD,mBAAC,eAAoBA,GAArB,IAAgCV,YAAaX,EAAaY,iBAEpE,CAACpH,EAAOyH,EAAgBE,IAGzB,eAAC,IAAD,yBAAK1F,SAAS,YAAerC,GAA7B,cACE,cAAC,KAAD,CACEsI,YAAajF,EAAE,mBAAoB,CAAEkF,QAASlF,EAAE,WAAWL,gBAC3D5C,MAAO0H,EAAM1H,MACboI,SA5Ce,SAACC,GACpB,IAAeC,EAAaD,EAAIE,OAAxBvI,MACR2H,GAAS,SAACE,GAAD,mBAAC,eACLA,GADI,IAEP7H,MAAOsI,QAyCLE,MAAO,CAAEvG,SAAU,WAAYwG,OAAQ,GAAIC,aAAc,UAE1DxB,GACC,cAAC,IAAD,CAAKjF,SAAS,WAAW0G,IAAI,OAAOC,MAAM,OAAOJ,MAAO,CAAEC,OAAQ,IAAlE,SACE,cAAC,IAAD,MAGJ,cAAChC,EAAD,CAASK,OAAQK,IAAgBX,EAAaY,UAA9C,SACGD,IAAgBX,EAAauB,MAC5B,cAAChB,EAAD,CAAa8B,QA9CD,WAClBlB,EAASV,GACTlH,EAAe2H,EAAM1H,QA4Cf,SAAoC0H,EAAM1H,QAE1C,cAAC,KAAD,CAAM8I,GAAG,OAAOC,WAAW,OAA3B,SACG9F,EAAE,+B,oBC7Hf,IAmBIT,EAnBkBD,EAAQ,IAmBbyG,CAAgB,eAEjCvG,EAAOC,QAAUF,G,kBCpBjB,IAWIyG,EAAeC,OAAO,uFAa1BzG,EAAOC,QAJP,SAAoBC,GAClB,OAAOsG,EAAaE,KAAKxG,K,2ECVZ4C,IARqC,SAAC3F,GACnD,IACMwG,EADYgD,cAAVnI,MACiBoI,OACrB,uDACA,uDACJ,OAAO,cAAC,IAAD,aAAYjD,WAAYA,GAAgBxG,M,qICyBpC0J,EAAiC,WAC5C,MAA0B9F,mBAAkB,CAAE0D,YAAY,EAAOqC,KAAM,OAAvE,mBAAO7B,EAAP,KAAcC,EAAd,KAeA,OAbAhE,qBAAU,YACS,uCAAG,4BAAAC,EAAA,6DAClB+D,GAAS,SAACE,GAAD,mBAAC,eAAoBA,GAArB,IAAgCX,YAAY,OADnC,SAEQsC,YAA0DC,KAFlE,OAEZC,EAFY,OAGlB/B,EAAS,CACPT,YAAY,EACZqC,KAAMG,EAAYH,OALF,2CAAH,qDASjBI,KACC,CAAChC,IAEGD,GAGMkC,IA3CsB,SAACrG,GACpC,MAA0BC,mBAAgB,CAAE0D,YAAY,EAAOqC,KAAM,OAArE,mBAAO7B,EAAP,KAAcC,EAAd,KAeA,OAbAhE,qBAAU,YACS,uCAAG,4BAAAC,EAAA,6DAClB+D,GAAS,SAACE,GAAD,mBAAC,eAAoBA,GAArB,IAAgCX,YAAY,OADnC,SAEQsC,YAAwDjG,GAFhE,OAEZmG,EAFY,OAGlB/B,EAAS,CACPT,YAAY,EACZqC,KAAMG,EAAYH,OALF,2CAAH,qDASjBI,KACC,CAACpG,EAAmBoE,IAEhBD,I,8CClBHjC,E,KAAc1E,EAAOM,IAAIC,OAAwB,kBAAc,CACnEC,IADqD,EAAGA,OAAtCR,CAAH,yQAGI,qBAAGS,OAOR,qBAAGqI,aAAiC,aAOrCpE,O,8IChBFqE,EAA0C,SAAC,GAAD,IAAG1J,EAAH,EAAGA,MAAOmE,EAAV,EAAUA,KAAS3E,EAAnB,wBACrD,eAAC,IAAD,2BAASA,GAAT,cACE,cAAC,KAAD,CAAMmK,SAAS,OAAOnJ,MAAM,aAAaoJ,UAAU,SAAnD,SACG5J,IAEO,OAATmE,EACC,cAAC,KAAD,CAAU0F,OAAO,OAAO5G,MAAM,MAAM6G,GAAG,SAEvC,cAAC,KAAD,CAAMnB,WAAW,MAAMiB,UAAU,SAAjC,SACGzF,SAMHF,EAAUtD,YAAOoJ,KAAPpJ,CAAH,4LAEG,qBAAGE,MAAkBC,OAAOkJ,oBACtB,qBAAGnJ,MAAkBC,OAAOC,cAC/B,qBAAGF,MAAkB2F,MAAMyD,QAM/BhG,O,oBClCf,IAAIiG,EAAY/H,EAAQ,KACpBgI,EAAahI,EAAQ,KACrBiI,EAAgBjI,EAAQ,KACxBD,EAAWC,EAAQ,KA6BvBE,EAAOC,QApBP,SAAyB+H,GACvB,OAAO,SAAS9H,GACdA,EAASL,EAASK,GAElB,IAAI+H,EAAaH,EAAW5H,GACxB6H,EAAc7H,QACduB,EAEAyG,EAAMD,EACNA,EAAW,GACX/H,EAAOiI,OAAO,GAEdC,EAAWH,EACXJ,EAAUI,EAAY,GAAGI,KAAK,IAC9BnI,EAAOoI,MAAM,GAEjB,OAAOJ,EAAIF,KAAgBI,K,oBC5B/B,IAAIG,EAAYzI,EAAQ,KAiBxBE,EAAOC,QANP,SAAmBuI,EAAOC,EAAOC,GAC/B,IAAIC,EAASH,EAAMG,OAEnB,OADAD,OAAcjH,IAARiH,EAAoBC,EAASD,GAC1BD,GAASC,GAAOC,EAAUH,EAAQD,EAAUC,EAAOC,EAAOC,K,kBCgBrE1I,EAAOC,QArBP,SAAmBuI,EAAOC,EAAOC,GAC/B,IAAIE,GAAS,EACTD,EAASH,EAAMG,OAEfF,EAAQ,IACVA,GAASA,EAAQE,EAAS,EAAKA,EAASF,IAE1CC,EAAMA,EAAMC,EAASA,EAASD,GACpB,IACRA,GAAOC,GAETA,EAASF,EAAQC,EAAM,EAAMA,EAAMD,IAAW,EAC9CA,KAAW,EAGX,IADA,IAAII,EAASC,MAAMH,KACVC,EAAQD,GACfE,EAAOD,GAASJ,EAAMI,EAAQH,GAEhC,OAAOI,I,oBC3BT,IAAIE,EAAejJ,EAAQ,KACvBgI,EAAahI,EAAQ,KACrBkJ,EAAiBlJ,EAAQ,KAe7BE,EAAOC,QANP,SAAuBC,GACrB,OAAO4H,EAAW5H,GACd8I,EAAe9I,GACf6I,EAAa7I,K,kBCHnBF,EAAOC,QAJP,SAAsBC,GACpB,OAAOA,EAAO+I,MAAM,M,kBCPtB,IAQIC,EAAW,oBACXC,EAAU,kDACVC,EAAS,2BAETC,EAAc,qBACdC,EAAa,kCACbC,EAAa,qCAIbC,EAPa,MAAQL,EAAU,IAAMC,EAAS,IAOtB,IACxBK,EAAW,oBAEXC,EAAQD,EAAWD,GADP,gBAAwB,CAACH,EAAaC,EAAYC,GAAYlB,KAAK,KAAO,IAAMoB,EAAWD,EAAW,MAElHG,EAAW,MAAQ,CAACN,EAAcF,EAAU,IAAKA,EAASG,EAAYC,EAAYL,GAAUb,KAAK,KAAO,IAGxGuB,EAAYnD,OAAO2C,EAAS,MAAQA,EAAS,KAAOO,EAAWD,EAAO,KAa1E1J,EAAOC,QAJP,SAAwBC,GACtB,OAAOA,EAAO2J,MAAMD,IAAc","file":"static/js/2.60ad4073.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AddressInputSelect from 'components/AddressInputSelect'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\n\r\nconst SearchBar: React.FC = (props) => {\r\n  const history = useHistory()\r\n\r\n  const handleAddressClick = (value: string) => {\r\n    history.push(`${nftsBaseUrl}/profile/${value}`)\r\n  }\r\n\r\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { ReactNode } from 'react'\r\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\r\n\r\ninterface MarketPageTitleProps extends GridProps {\r\n  title: string\r\n  description?: ReactNode\r\n}\r\n\r\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\r\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\r\n    <Box>\r\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\r\n        {title}\r\n      </Heading>\r\n      {description}\r\n    </Box>\r\n    <Box>{children}</Box>\r\n  </Grid>\r\n)\r\n\r\nexport default MarketPageTitle\r\n","import { SubMenuItems } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseSubMenu = styled(SubMenuItems)`\r\n  background-color: transparent;\r\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\r\n`\r\n\r\nexport default BaseSubMenu\r\n","import styled from 'styled-components'\r\n\r\ninterface StyledBannerImageProps {\r\n  src: string\r\n  alt?: string\r\n}\r\n\r\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\r\n  alt,\r\n}))<StyledBannerImageProps>`\r\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 100%;\r\n  border-radius: 32px;\r\n  height: 123px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 192px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    height: 256px;\r\n  }\r\n`\r\n\r\nexport default StyledBannerImage\r\n","import React, { ReactNode } from 'react'\r\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\r\nimport BannerImage from './BannerImage'\r\n\r\ninterface BannerHeaderProps extends FlexProps {\r\n  bannerImage: string\r\n  bannerAlt?: string\r\n  avatar?: ReactNode\r\n}\r\n\r\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\r\n  return (\r\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\r\n      <Box position=\"relative\" pb=\"56px\">\r\n        <BannerImage src={bannerImage} alt={bannerAlt} />\r\n        <Box position=\"absolute\" bottom={0} left={-4}>\r\n          <Flex alignItems=\"flex-end\">\r\n            {avatar}\r\n            {children}\r\n          </Flex>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default BannerHeader\r\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","import React from 'react'\r\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport SearchBar from '../components/SearchBar'\r\n\r\nconst BackLink = styled(RouterLink)`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: inline-flex;\r\n  font-weight: 600;\r\n`\r\n\r\nconst TopBar: React.FC = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n      <BackLink to={`${nftsBaseUrl}/collections`}>\r\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\r\n        {t('All Collections')}\r\n      </BackLink>\r\n      <Box>\r\n        <SearchBar />\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default TopBar\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\r\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\r\n\r\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\r\n  collectionAddress: string\r\n}\r\n\r\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\r\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    const fetchLowestPrice = async () => {\r\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\r\n      setLowestPrice(lowestCollectionPrice)\r\n    }\r\n\r\n    fetchLowestPrice()\r\n  }, [collectionAddress, setLowestPrice])\r\n\r\n  const formattedLowestPrice =\r\n    lowestPrice === null\r\n      ? null\r\n      : lowestPrice.toLocaleString(undefined, {\r\n          minimumFractionDigits: 3,\r\n          maximumFractionDigits: 3,\r\n        })\r\n\r\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\r\n}\r\n\r\nexport default LowestPriceStatBoxItem\r\n","import React from 'react'\r\nimport { useLocation, useParams } from 'react-router'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Collection } from 'state/nftMarket/types'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport MarketPageHeader from '../components/MarketPageHeader'\r\nimport MarketPageTitle from '../components/MarketPageTitle'\r\nimport StatBox, { StatBoxItem } from '../components/StatBox'\r\nimport BannerHeader from '../components/BannerHeader'\r\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\r\nimport BaseSubMenu from '../components/BaseSubMenu'\r\nimport { nftsBaseUrl } from '../constants'\r\nimport TopBar from './TopBar'\r\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\r\n\r\ninterface HeaderProps {\r\n  collection: Collection\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\r\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\r\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\r\n  const { t } = useTranslation()\r\n  const { pathname, hash } = useLocation()\r\n\r\n  const volume = totalVolumeBNB\r\n    ? parseFloat(totalVolumeBNB).toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })\r\n    : '0'\r\n\r\n  const itemsConfig = [\r\n    {\r\n      label: t('Items'),\r\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\r\n    },\r\n    {\r\n      label: t('Traits'),\r\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <MarketPageHeader>\r\n        <TopBar />\r\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\r\n        <MarketPageTitle\r\n          title={collection.name}\r\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\r\n        >\r\n          <StatBox>\r\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\r\n            <StatBoxItem\r\n              title={t('Items listed')}\r\n              stat={numberTokensListed ? formatNumber(Number(numberTokensListed), 0, 0) : '0'}\r\n            />\r\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\r\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\r\n          </StatBox>\r\n        </MarketPageTitle>\r\n      </MarketPageHeader>\r\n      <Container>\r\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || '#items'}`} mt=\"24px\" mb=\"8px\" />\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport Container from '../Layout/Container'\r\nimport { PageHeaderProps } from './types'\r\n\r\nconst Outer = styled(Box)<{ background?: string }>`\r\n  // background: ${({ theme, background }) => background || theme.colors.secondary};\r\n  background: linear-gradient(90deg, rgb(231 250 255) 0%, rgb(231 250 255) 100%);\r\n`\r\n\r\nconst Inner = styled(Container)`\r\n  padding-top: 32px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader\r\n","import React, { ChangeEvent, useState, useEffect } from 'react'\r\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { isAddress } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CircleLoader from 'components/Loader/CircleLoader'\r\n\r\nenum ResultStatus {\r\n  NOT_VALID,\r\n  FOUND,\r\n  NOT_FOUND,\r\n}\r\n\r\ninterface AddressInputSelectProps extends BoxProps {\r\n  onValidAddress?: (value: string) => Promise<boolean>\r\n  onAddressClick: (value: string) => void\r\n}\r\n\r\nconst SubMenu = styled.div<{ isOpen: boolean }>`\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\r\n  left: 0;\r\n  padding-bottom: 8px;\r\n  padding-top: 16px;\r\n  position: absolute;\r\n  top: calc(100% - 12px);\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  width: 100%;\r\n  z-index: 15;\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    `\r\n    height: auto;\r\n    opacity: 1;\r\n    transform: scaleY(1);\r\n  `}\r\n`\r\n\r\nconst AddressLink = styled(Text)`\r\n  cursor: pointer;\r\n  overflow-wrap: break-word;\r\n  font-weight: bold;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  resultFound: ResultStatus.NOT_VALID,\r\n  value: '',\r\n}\r\n\r\nconst defaultValidAddressHandler = () => Promise.resolve(true)\r\n\r\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\r\n  onValidAddress = defaultValidAddressHandler,\r\n  onAddressClick,\r\n  ...props\r\n}) => {\r\n  const [state, setState] = useState(initialState)\r\n  const { t } = useTranslation()\r\n  const { isFetching, resultFound, value } = state\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value: newValue } = evt.target\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      value: newValue,\r\n    }))\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setState(initialState)\r\n    onAddressClick(state.value)\r\n  }\r\n\r\n  // When we have a valid address fetch the data\r\n  useEffect(() => {\r\n    const isValidAddress = isAddress(value) !== false\r\n\r\n    const validAddressHandler = async () => {\r\n      try {\r\n        setState((prevState) => ({ ...prevState, isFetching: true }))\r\n        const hasResults = await onValidAddress(value)\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isFetching: false,\r\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\r\n        }))\r\n      } catch {\r\n        setState((prevState) => ({ ...prevState, isFetching: false }))\r\n      }\r\n    }\r\n\r\n    if (isValidAddress) {\r\n      validAddressHandler()\r\n    } else {\r\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\r\n    }\r\n  }, [value, onValidAddress, setState])\r\n\r\n  return (\r\n    <Box position=\"relative\" {...props}>\r\n      <Input\r\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\r\n      />\r\n      {isFetching && (\r\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\r\n          <CircleLoader />\r\n        </Box>\r\n      )}\r\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\r\n        {resultFound === ResultStatus.FOUND ? (\r\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\r\n        ) : (\r\n          <Text px=\"16px\" fontWeight=\"bold\">\r\n            {t('No results found.')}\r\n          </Text>\r\n        )}\r\n      </SubMenu>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AddressInputSelect\r\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","import React from 'react'\r\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\r\n  const { theme } = useTheme()\r\n  const background = theme.isDark\r\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\r\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\r\n  return <PageHeader background={background} {...props} />\r\n}\r\n\r\nexport default MarketPageHeader\r\n","import { useEffect, useState } from 'react'\r\nimport { getCollectionDistributionApi } from 'state/nftMarket/helpers'\r\nimport { ApiCollectionDistribution, ApiCollectionDistributionPB } from 'state/nftMarket/types'\r\nimport { pancakeBunniesAddress } from '../constants'\r\n\r\ninterface State {\r\n  isFetching: boolean\r\n  data: ApiCollectionDistribution['data']\r\n}\r\n\r\nconst useGetCollectionDistribution = (collectionAddress: string) => {\r\n  const [state, setState] = useState<State>({ isFetching: false, data: null })\r\n\r\n  useEffect(() => {\r\n    const fetchTokens = async () => {\r\n      setState((prevState) => ({ ...prevState, isFetching: true }))\r\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistribution>(collectionAddress)\r\n      setState({\r\n        isFetching: false,\r\n        data: apiResponse.data,\r\n      })\r\n    }\r\n\r\n    fetchTokens()\r\n  }, [collectionAddress, setState])\r\n\r\n  return state\r\n}\r\n\r\ninterface StatePB {\r\n  isFetching: boolean\r\n  data: ApiCollectionDistributionPB['data']\r\n}\r\n\r\nexport const useGetCollectionDistributionPB = () => {\r\n  const [state, setState] = useState<StatePB>({ isFetching: false, data: null })\r\n\r\n  useEffect(() => {\r\n    const fetchTokens = async () => {\r\n      setState((prevState) => ({ ...prevState, isFetching: true }))\r\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistributionPB>(pancakeBunniesAddress)\r\n      setState({\r\n        isFetching: false,\r\n        data: apiResponse.data,\r\n      })\r\n    }\r\n\r\n    fetchTokens()\r\n  }, [setState])\r\n\r\n  return state\r\n}\r\n\r\nexport default useGetCollectionDistribution\r\n","import styled from 'styled-components'\r\n\r\ninterface AvatarImageProps {\r\n  src: string\r\n  borderColor?: string\r\n  alt?: string\r\n}\r\n\r\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\r\n  alt,\r\n}))<AvatarImageProps>`\r\n  background: url('${({ src }) => src}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 96px;\r\n  height: 96px;\r\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n\r\nexport default AvatarImage\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\n\r\nexport interface StatBoxItemProps extends BoxProps {\r\n  title: string\r\n  stat: string\r\n}\r\n\r\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\r\n  <Box {...props}>\r\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\r\n      {title}\r\n    </Text>\r\n    {stat === null ? (\r\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\r\n    ) : (\r\n      <Text fontWeight=\"600\" textAlign=\"center\">\r\n        {stat}\r\n      </Text>\r\n    )}\r\n  </Box>\r\n)\r\n\r\nconst StatBox = styled(Flex)`\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  justify-content: space-around;\r\n  padding: 8px;\r\n  width: 100%;\r\n`\r\n\r\nexport default StatBox\r\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n"],"sourceRoot":""}
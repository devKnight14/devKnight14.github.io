{"version":3,"sources":["views/Pool/index.tsx"],"names":["Body","styled","CardBody","theme","colors","dropdownDeep","PageContainer","div","Pool","account","useActiveWeb3React","t","useTranslation","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","useMemo","map","tokens","liquidityToken","toV2LiquidityToken","liquidityTokens","tpwlt","useTokenBalancesWithLoadingIndicator","undefined","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","usePairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","v2Pair","Boolean","title","subtitle","color","textAlign","index","pair","mb","flexDirection","alignItems","mt","id","variant","scale","as","Link","to","style","width","startIcon"],"mappings":"qTAgBMA,EAAOC,YAAOC,IAAPD,CAAH,sDACY,qBAAGE,MAAkBC,OAAOC,gBAG5CC,EAAgBL,IAAOM,IAAV,wGAKJ,SAASC,IACtB,IAAQC,EAAYC,cAAZD,QACAE,EAAMC,cAAND,EAGFE,EAAoBC,cACpBC,EAAgCC,mBACpC,kBAAMH,EAAkBI,KAAI,SAACC,GAAD,MAAa,CAAEC,eAAgBC,YAAmBF,GAASA,eACvF,CAACL,IAEGQ,EAAkBL,mBACtB,kBAAMD,EAA8BE,KAAI,SAACK,GAAD,OAAWA,EAAMH,oBACzD,CAACJ,IAEH,EAAkDQ,YAAoC,OACpFd,QADoF,IACpFA,SAAWe,EACXH,GAFF,mBAAOI,EAAP,KAAwBC,EAAxB,KAMMC,EAA8BX,mBAClC,kBACED,EAA8Ba,QAAO,kBAAGT,EAAH,EAAGA,eAAH,iBACnCM,EAAgBN,EAAeU,gBADI,aACnC,EAAyCC,YAAY,UAEzD,CAACf,EAA+BU,IAG5BM,EAAUC,YAASL,EAA4BV,KAAI,qBAAGC,WACtDe,EACJP,IAAiC,OAAPK,QAAO,IAAPA,OAAA,EAAAA,EAASG,QAASP,EAA4BO,SAAxE,OAAkFH,QAAlF,IAAkFA,OAAlF,EAAkFA,EAASI,MAAK,SAACC,GAAD,OAAaA,MAEzGC,EAA0BN,EAAQd,KAAI,0CAAoBW,QAAO,SAACU,GAAD,OAA4BC,QAAQD,MAiC3G,OACE,cAAChC,EAAD,UAmBE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWkC,MAAO7B,EAAE,kBAAmB8B,SAAU9B,EAAE,6CACnD,eAACX,EAAD,WArDDS,EAODwB,EAEA,cAAC,KAAD,CAAMS,MAAM,aAAaC,UAAU,SAAnC,SACE,cAAC,IAAD,UAAOhC,EAAE,gBAIY,OAAvB0B,QAAuB,IAAvBA,OAAA,EAAAA,EAAyBH,QAAS,EAC7BG,EAAwBpB,KAAI,SAACqB,EAAQM,GAAT,OACjC,cAAC,IAAD,CAEEC,KAAMP,EACNQ,GAAIF,EAAQP,EAAwBH,OAAS,EAAI,OAAS,GAFrDI,EAAOnB,eAAeU,YAO/B,cAAC,KAAD,CAAMa,MAAM,aAAaC,UAAU,SAAnC,SACGhC,EAAE,yBAvBH,cAAC,KAAD,CAAM+B,MAAM,aAAaC,UAAU,SAAnC,SACGhC,EAAE,iDAoDAF,IAAYwB,GACX,eAAC,KAAD,CAAMc,cAAc,SAASC,WAAW,SAASC,GAAG,OAApD,UACE,cAAC,KAAD,CAAMP,MAAM,aAAaI,GAAG,MAA5B,SACGnC,EAAE,kCAEL,cAAC,IAAD,CAAQuC,GAAG,mBAAmBC,QAAQ,YAAYC,MAAM,KAAKC,GAAIC,IAAMC,GAAG,QAA1E,SACG5C,EAAE,gCAKX,cAAC,IAAD,CAAY6C,MAAO,CAAEb,UAAW,UAAhC,SACE,cAAC,IAAD,CAAQO,GAAG,mBAAmBG,GAAIC,IAAMC,GAAG,OAAOE,MAAM,OAAOC,UAAW,cAAC,IAAD,CAAShB,MAAM,UAAzF,SACG/B,EAAE","file":"static/js/40.ff9016e0.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Pair } from '@pancakeswap/sdk'\r\nimport { Text, Flex, CardBody, CardFooter, Button, AddIcon, Heading } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport FullPositionCard from '../../components/PositionCard'\r\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\r\nimport { usePairs } from '../../hooks/usePairs'\r\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport PageHeader from '../../components/PageHeader'\r\nimport Page from '../Page'\r\n\r\nconst Body = styled(CardBody)`\r\n  background-color: ${({ theme }) => theme.colors.dropdownDeep};\r\n`\r\n\r\nconst PageContainer = styled.div`\r\n  // background: url('/images/background.png');\r\n  background-size: cover;\r\n`;\r\n\r\nexport default function Pool() {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  // fetch the user's balances of all tracked V2 LP tokens\r\n  const trackedTokenPairs = useTrackedTokenPairs()\r\n  const tokenPairsWithLiquidityTokens = useMemo(\r\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\r\n    [trackedTokenPairs],\r\n  )\r\n  const liquidityTokens = useMemo(\r\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\r\n    [tokenPairsWithLiquidityTokens],\r\n  )\r\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\r\n    account ?? undefined,\r\n    liquidityTokens,\r\n  )\r\n\r\n  // fetch the reserves for all V2 pools in which the user has a balance\r\n  const liquidityTokensWithBalances = useMemo(\r\n    () =>\r\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\r\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\r\n      ),\r\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\r\n  )\r\n\r\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\r\n\r\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\r\n\r\n  const renderBody = () => {\r\n    if (!account) {\r\n      return (\r\n        <Text color=\"textSubtle\" textAlign=\"center\">\r\n          {t('Connect to a wallet to view your liquidity.')}\r\n        </Text>\r\n      )\r\n    }\r\n    if (v2IsLoading) {\r\n      return (\r\n        <Text color=\"textSubtle\" textAlign=\"center\">\r\n          <Dots>{t('Loading')}</Dots>\r\n        </Text>\r\n      )\r\n    }\r\n    if (allV2PairsWithLiquidity?.length > 0) {\r\n      return allV2PairsWithLiquidity.map((v2Pair, index) => (\r\n        <FullPositionCard\r\n          key={v2Pair.liquidityToken.address}\r\n          pair={v2Pair}\r\n          mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}\r\n        />\r\n      ))\r\n    }\r\n    return (\r\n      <Text color=\"textSubtle\" textAlign=\"center\">\r\n        {t('No liquidity found.')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      {/* <PageHeader>\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\r\n          <Flex flex=\"1\" justifyContent=\"left\">\r\n            <img src=\"/images/dove_revert.png\" alt=\"\" width=\"160px\" height=\"148px\" />\r\n          </Flex>\r\n          <Flex flex=\"1\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"white\" mb=\"24px\">\r\n              {t('Liquidity')}\r\n            </Heading>\r\n            <Heading scale=\"lg\" color=\"white\">\r\n              {t('You can add or remove a liquidity!')}\r\n            </Heading>\r\n          </Flex>\r\n          <Flex flex=\"1\" justifyContent=\"right\">\r\n            <img src=\"/images/dove.png\" alt=\"\" width=\"160px\" height=\"148px\" />\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader> */}\r\n      <Page>\r\n        <AppBody>\r\n          <AppHeader title={t('Your Liquidity')} subtitle={t('Remove liquidity to receive tokens back')} />\r\n          <Body>\r\n            {renderBody()}\r\n            {account && !v2IsLoading && (\r\n              <Flex flexDirection=\"column\" alignItems=\"center\" mt=\"24px\">\r\n                <Text color=\"textSubtle\" mb=\"8px\">\r\n                  {t(\"Don't see a pool you joined?\")}\r\n                </Text>\r\n                <Button id=\"import-pool-link\" variant=\"secondary\" scale=\"sm\" as={Link} to=\"/find\">\r\n                  {t('Find other LP tokens')}\r\n                </Button>\r\n              </Flex>\r\n            )}\r\n          </Body>\r\n          <CardFooter style={{ textAlign: 'center' }}>\r\n            <Button id=\"join-pool-button\" as={Link} to=\"/add\" width=\"100%\" startIcon={<AddIcon color=\"white\" />}>\r\n              {t('Add Liquidity')}\r\n            </Button>\r\n          </CardFooter>\r\n        </AppBody>\r\n      </Page>\r\n    </PageContainer>\r\n\r\n  )\r\n}\r\n"],"sourceRoot":""}
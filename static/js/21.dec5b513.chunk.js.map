{"version":3,"sources":["views/Home/components/CompositeImage.tsx","views/Home/components/Hero.tsx","views/Home/components/SalesSection/data.ts","views/Home/components/IconCard.tsx","views/Home/components/MetricsSection/StatCardContent.tsx","views/Home/components/MetricsSection/index.tsx","hooks/api.ts","views/Home/components/SalesSection/index.tsx","views/Home/components/CakeDataRow.tsx","views/Home/hooks/useFarmsWithBalance.tsx","views/Home/components/UserBanner/HarvestCard.tsx","views/Home/components/UserBanner/EarningsText.tsx","views/Home/components/UserBanner/UserDetail.tsx","views/Home/components/UserBanner/index.tsx","views/Home/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","components/ProfileAvatarWithTeam.tsx","views/Home/components/SlideSvg.tsx","views/Home/components/ColoredWordHeading.tsx"],"names":["Resolution","floatingAnim","x","y","keyframes","Wrapper","styled","Box","maxHeight","DummyImg","img","ImageWrapper","getImageUrl","base","imageSrc","resolution","extension","getSrcSet","undefined","MD","LG","CompositeImage","path","attributes","type","srcSet","src","map","image","alt","fading","CustomButton","div","BgWrapper","InnerWrapper","BunnyWrapper","StarsWrapper","imagePath","starsImage","Hero","t","useTranslation","account","useWeb3React","theme","useTheme","isDark","SlideSvg","width","position","flexDirection","alignItems","justifyContent","mt","id","flex","scale","color","mb","ConnectWalletButton","mr","to","variant","height","earnSectionData","headingText","bodyText","reverse","primaryButton","text","external","secondaryButton","images","cakeSectionData","StyledCard","Card","mediaQueries","md","rotation","IconWrapper","IconCard","icon","background","borderColor","children","props","borderBackground","StatCardContent","highlightColor","useMatchBreakpoints","isMobile","isTablet","isSmallerScreen","split","lastWord","pop","remainingWords","slice","length","join","minHeight","minWidth","Stats","data","useState","setData","useEffect","a","fetch","response","json","responseData","console","error","fetchData","useGetStats","tvlString","formatLocalisedCompactNumber","tvl","trades","users","entrusting","inFunds","UsersCardData","TradesCardData","StakedCardData","textAlign","flexWrap","display","bold","colors","primary","SalesSection","headingTranslatedText","bodyTranslatedText","ml","alignSelf","ColoredWordHeading","href","fontSize","StyledColumn","Flex","noMobileBorder","inputSecondary","sm","Grid","CakeDataRow","totalSupply","useTotalSupply","burnedBalance","getBalanceNumber","useBurnedBalance","tokens","cake","address","cakeSupply","mcap","usePriceCakeBusd","times","mcapString","toNumber","Balance","decimals","lineHeight","value","my","gt","marketCap","cakeEmissions","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","fastRefresh","useRefresh","calls","farmsConfig","farm","getMasterChefAddress","name","params","pid","multicall","masterChefABI","rawResults","results","index","balance","BigNumber","farmsWithBalances","filter","balanceType","totalEarned","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","fetchBalances","HarvestCard","pendingTx","setPendingTx","useToast","toastSuccess","toastError","farmEarningsSum","masterChefContract","useMasterchef","cakePriceBusd","earningsBusd","multipliedBy","numTotalToCollect","numFarmsToCollect","hasCakePoolToCollect","toString","count","earningsText","getEarningsText","preText","toCollectText","harvestAllFarms","useCallback","farmWithBalance","harvestFarm","symbol","isNaN","prefix","isLoading","endIcon","spin","disabled","onClick","Desktop","Mobile","Sticker","invertedContrast","radii","circle","card","boxShadow","StyledNoProfileAvatarIcon","NoProfileAvatarIcon","UserDetail","useProfile","profile","truncatedAddress","truncateHash","ProfileAvatarWithTeam","userName","username","secondary","UserBanner","p","StyledHeroSection","PageSection","UserBannerWrapper","Container","lg","Home","HomeSectionContainerStyles","margin","maxWidth","Page","innerProps","style","hasCurvedDivider","MetricsSection","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","sharedStyles","clipPath","clipFill","css","dark","light","ConcaveContainer","ConvexContainer","ConvexTop","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","svgFill","concaveDivider","containerProps","TeamAvatar","AvatarWrapper","bg","AvatarInactive","nft","thumbnail","isActive","team","SlideSvgLight","viewBox","fill","x1","y1","x2","y2","gradientUnits","stopColor","stopOpacity","offset","SlideSvgDark","firstColor","firstWord","displayedColor"],"mappings":"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","file":"static/js/21.dec5b513.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst floatingAnim = (x: string, y: string) => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(${x}, ${y});\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }\r\n`\r\n\r\nconst Wrapper = styled(Box)<{ maxHeight: string }>`\r\n  position: relative;\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n\r\n  & :nth-child(2) {\r\n    animation: ${floatingAnim('3px', '15px')} 3s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${floatingAnim('5px', '10px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${floatingAnim('6px', '5px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n\r\n  & :nth-child(5) {\r\n    animation: ${floatingAnim('4px', '12px')} 3s ease-in-out infinite;\r\n    animation-delay: 0s;\r\n  }\r\n`\r\n\r\nconst DummyImg = styled.img<{ maxHeight: string }>`\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n  visibility: hidden;\r\n`\r\n\r\nconst ImageWrapper = styled(Box)`\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  img {\r\n    max-height: 100%;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nenum Resolution {\r\n  MD = '1.5x',\r\n  LG = '2x',\r\n}\r\ninterface ImageAttributes {\r\n  src: string\r\n  alt: string\r\n}\r\n\r\nexport interface CompositeImageProps {\r\n  path: string\r\n  attributes: ImageAttributes[]\r\n}\r\n\r\ninterface ComponentProps extends CompositeImageProps {\r\n  animate?: boolean\r\n  maxHeight?: string\r\n}\r\n\r\nexport const getImageUrl = (base: string, imageSrc: string, resolution?: Resolution, extension = '.png'): string =>\r\n  `${base}${imageSrc}${resolution ? `@${resolution}${extension}` : extension}`\r\n\r\nexport const getSrcSet = (base: string, imageSrc: string, extension = '.png') => {\r\n  return `${getImageUrl(base, imageSrc, undefined, extension)} 512w,\r\n  ${getImageUrl(base, imageSrc, Resolution.MD, extension)} 768w,\r\n  ${getImageUrl(base, imageSrc, Resolution.LG, extension)} 1024w,`\r\n}\r\n\r\nconst CompositeImage: React.FC<ComponentProps> = ({ path, attributes, maxHeight = '512px' }) => {\r\n  return (\r\n    <Wrapper maxHeight={maxHeight}>\r\n      <picture>\r\n        <source type=\"image/webp\" srcSet={getSrcSet(path, attributes[0].src, '.webp')} />\r\n        <source type=\"image/png\" srcSet={getSrcSet(path, attributes[0].src)} />\r\n        <DummyImg src={getImageUrl(path, attributes[0].src)} maxHeight={maxHeight} />\r\n      </picture>\r\n      {attributes.map((image) => (\r\n        <ImageWrapper key={image.src}>\r\n          <picture>\r\n            <source type=\"image/webp\" srcSet={getSrcSet(path, image.src, '.webp')} />\r\n            <source type=\"image/png\" srcSet={getSrcSet(path, image.src)} />\r\n            <img src={getImageUrl(path, image.src)} alt={image.alt} />\r\n          </picture>\r\n        </ImageWrapper>\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CompositeImage\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Flex, Heading, Button } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { SlideSvgDark, SlideSvgLight } from './SlideSvg'\r\nimport CompositeImage, { getSrcSet, CompositeImageProps } from './CompositeImage'\r\n\r\nconst flyingAnim = () => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(-5px, -5px);\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }\r\n`\r\n\r\nconst fading = () => keyframes`\r\n  from {\r\n    opacity: 0.9;\r\n  }\r\n  50% {\r\n    opacity: 0.1;\r\n  }\r\n  to {\r\n    opacity: 0.9;\r\n  }\r\n`\r\n\r\nconst CustomButton = styled.div`\r\n  \r\n button {\r\n  cursor: pointer;\r\n  padding: 10px 30px;\r\n  border-color: #7A18D5;\r\n  font-weight: 800;\r\n  font-size: 16px;\r\n  position: relative;\r\n  display: inline-block;\r\n  -webkit-border-radius: 50px;\r\n  -moz-border-radius: 50px;\r\n  border-radius: 50px important;\r\n  line-height: 1.5px;\r\n  \r\n }\r\n \r\n`\r\n\r\nconst BgWrapper = styled.div`\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  bottom: 0px;\r\n  left: 0px;\r\n`\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: -3px;\r\n`\r\n\r\nconst BunnyWrapper = styled.div`\r\n  width: 100%;\r\n  animation: ${flyingAnim} 3.5s ease-in-out infinite;\r\n`\r\n\r\nconst StarsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  & :nth-child(2) {\r\n    animation: ${fading} 2s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${fading} 5s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${fading} 2.5s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n`\r\n\r\nconst imagePath = '/images/home/lunar-bunny/'\r\nconst imageSrc = 'bunny'\r\n\r\nconst starsImage: CompositeImageProps = {\r\n  path: '/images/home/lunar-bunny/',\r\n  attributes: [\r\n    { src: 'star-l', alt: '3D Star' },\r\n    { src: 'star-r', alt: '3D Star' },\r\n    { src: 'star-top-r', alt: '3D Star' },\r\n  ],\r\n}\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <BgWrapper>\r\n        <InnerWrapper>{theme.isDark ? <SlideSvgDark width=\"100%\" /> : <SlideSvgLight width=\"100%\" />}</InnerWrapper>\r\n      </BgWrapper>\r\n      <Flex\r\n        position=\"relative\"\r\n        flexDirection={['column-reverse', null, null, 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n        mt={[account ? '280px' : '50px', null, 0]}\r\n        id=\"homepage-hero\"\r\n      >\r\n        <Flex flex=\"1\" flexDirection=\"column\">\r\n          <Heading scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n            {t('TO THE MOON    WITH DBX')}\r\n          </Heading>\r\n          <Heading scale=\"md\" mb=\"24px\">\r\n            {t('Trade, earn, and win crypto on the most popular decentralized platform in the galaxy.')}\r\n          </Heading>\r\n          <Flex>\r\n            {!account && <ConnectWalletButton mr=\"8px\" />}\r\n            <Link to=\"/swap\">\r\n              <CustomButton>\r\n                <Button variant={!account ? 'secondary' : 'primary'}>{t('Trade Now')}</Button>\r\n              </CustomButton>\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          mb={['24px', null, null, '0']}\r\n          position=\"relative\"\r\n        >\r\n          <BunnyWrapper>\r\n            <picture>\r\n              <source type=\"image/webp\" srcSet={getSrcSet(imagePath, imageSrc, '.webp')} />\r\n              <source type=\"image/png\" srcSet={getSrcSet(imagePath, imageSrc)} />\r\n              <img src={`${imagePath}${imageSrc}.png`} alt={t('Lunar bunny')} />\r\n            </picture>\r\n          </BunnyWrapper>\r\n          <StarsWrapper>\r\n            <CompositeImage {...starsImage} />\r\n          </StarsWrapper>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import { SalesSectionProps } from '.'\r\n\r\nexport const swapSectionData: SalesSectionProps = {\r\n  images: {\r\n    path: '/images/home/trade/',\r\n    attributes: [\r\n      { src: 'BLOG', alt: 'BLOG' },\r\n      // { src: 'BTC', alt: 'BTC token' },\r\n      // { src: 'CAKE', alt: 'CAKE token' },\r\n    ],\r\n  },\r\n  headingText: 'DXBCOIN IS YOUR SUCCESSFUL FUTUER',\r\n  bodyText: 'DBX token is at the heart of the swaport. Buy it, win it, farm it, spend it, stake it... heck, you can even vote with it!',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap',\r\n    text: 'BUY COIN',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/',\r\n    text: 'read more',\r\n    external: true,\r\n  },\r\n\r\n}\r\n\r\nexport const earnSectionData: SalesSectionProps = {\r\n  headingText: 'DXBCOIN IS YOUR SUCCESSFUL FUTUER.',\r\n  bodyText: 'DBX token is at the heart of the swaport. Buy it, win it, farm it, spend it, stake it... heck, you can even vote with it!',\r\n  reverse: true,\r\n  primaryButton: {\r\n    to: '/farms',\r\n    text: 'BUY COIN',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/products/yield-farming',\r\n    text: 'read more',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/earn/',\r\n    attributes: [\r\n      { src: 'pie', alt: 'Pie chart' },\r\n      // { src: 'stonks', alt: 'Stocks chart' },\r\n      { src: 'BLOG', alt: 'BLOG' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const cakeSectionData: SalesSectionProps = {\r\n  headingText: 'DXBCOIN IS YOUR SUCCESSFUL FUTUER.',\r\n  bodyText:\r\n    'DBX token is at the heart of the swaport. Buy it, win it, farm it, spend it, stake it... heck, you can even vote with it!',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap?outputCurrency=0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    text: 'BUY COIN',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/tokenomics/cake',\r\n    text: 'read more',\r\n    external: true,\r\n  },\r\n\r\n  images: {\r\n    path: '/images/home/cake/',\r\n    attributes: [\r\n      { src: 'bottom-right', alt: 'Small 3d pancake' },\r\n      // { src: 'top-right', alt: 'Small 3d pancake' },\r\n      { src: 'BLOG', alt: 'BLOG' },\r\n      // { src: 'top-left', alt: 'Small 3d pancake' },\r\n    ],\r\n  },\r\n}\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Box, CardProps } from '@pancakeswap/uikit'\r\n\r\nconst StyledCard = styled(Card)<{ background: string; rotation?: string }>`\r\n  height: fit-content;\r\n  padding: 1px 1px 4px 1px;\r\n  box-sizing: border-box;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\nconst IconWrapper = styled(Box)<{ rotation?: string }>`\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\ninterface IconCardProps extends IconCardData, CardProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport interface IconCardData {\r\n  icon: ReactNode\r\n  background?: string\r\n  borderColor?: string\r\n  rotation?: string\r\n}\r\n\r\nconst IconCard: React.FC<IconCardProps> = ({ icon, background, borderColor, rotation, children, ...props }) => {\r\n  return (\r\n    <StyledCard background={background} borderBackground={borderColor} rotation={rotation} {...props}>\r\n      <CardBody>\r\n        <IconWrapper rotation={rotation}>{icon}</IconWrapper>\r\n        {children}\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default IconCard\r\n","import React from 'react'\r\nimport { Heading, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\n\r\nconst StatCardContent: React.FC<{ headingText: string; bodyText: string; highlightColor: string }> = ({\r\n  headingText,\r\n  bodyText,\r\n  highlightColor,\r\n}) => {\r\n  const { isMobile, isTablet } = useMatchBreakpoints()\r\n  const isSmallerScreen = isMobile || isTablet\r\n  const split = headingText.split(' ')\r\n  const lastWord = split.pop()\r\n  const remainingWords = split.slice(0, split.length).join(' ')\r\n\r\n  return (\r\n    <Flex\r\n      minHeight={[null, null, null, '168px']}\r\n      minWidth=\"232px\"\r\n      width=\"fit-content\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"flex-end\"\r\n      mt={[null, null, null, '64px']}\r\n    >\r\n      {isSmallerScreen && remainingWords.length > 13 ? (\r\n        <Heading scale=\"lg\">{remainingWords}</Heading>\r\n      ) : (\r\n        <Heading scale=\"xl\">{remainingWords}</Heading>\r\n      )}\r\n      <Heading color={highlightColor} scale=\"xl\" mb=\"24px\">\r\n        {lastWord}\r\n      </Heading>\r\n      <Text color=\"textSubtle\">{bodyText}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StatCardContent\r\n","import React from 'react'\r\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetStats } from 'hooks/api'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport IconCard, { IconCardData } from '../IconCard'\r\nimport StatCardContent from './StatCardContent'\r\nimport GradientLogo from '../GradientLogoSvg'\r\n\r\n// Values fetched from bitQuery effective 6/9/21\r\nconst txCount = 30841921\r\nconst addressCount = 2751624\r\n\r\n\r\nconst Stats = () => {\r\n  const { t } = useTranslation()\r\n  const data = useGetStats()\r\n  const { theme } = useTheme()\r\n\r\n  const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-'\r\n  const trades = formatLocalisedCompactNumber(txCount)\r\n  const users = formatLocalisedCompactNumber(addressCount)\r\n\r\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', { tvl: tvlString })\r\n  const [entrusting, inFunds] = tvlText.split(tvlString)\r\n\r\n  const UsersCardData: IconCardData = {\r\n    icon: <CommunityIcon color=\"secondary\" width=\"36px\" />,\r\n  }\r\n\r\n  const TradesCardData: IconCardData = {\r\n    icon: <SwapIcon color=\"primary\" width=\"36px\" />,\r\n  }\r\n\r\n  const StakedCardData: IconCardData = {\r\n    icon: <ChartIcon color=\"primary\" width=\"36px\" />,\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      {/* <GradientLogo height=\"48px\" width=\"48px\" mb=\"24px\" /> */}\r\n      <Heading textAlign=\"center\" scale=\"xl\">\r\n        {t('Used by millions.')}\r\n      </Heading>\r\n      <Heading textAlign=\"center\" scale=\"xl\" mb=\"32px\">\r\n        {t('Trusted with billions.')}\r\n      </Heading>\r\n      <Text textAlign=\"center\" color=\"textSubtle\">\r\n        {t('Swaport has the most users of any decentralized platform, ever.')}\r\n      </Text>\r\n      <Flex flexWrap=\"wrap\">\r\n        <Text display=\"inline\" textAlign=\"center\" color=\"textSubtle\" mb=\"20px\">\r\n          {entrusting}\r\n          <>{data ? <>{tvlString}</> : <Skeleton display=\"inline-block\" height={16} width={70} mt=\"2px\" />}</>\r\n          {inFunds}\r\n        </Text>\r\n      </Flex>\r\n\r\n      <Text textAlign=\"center\" color=\"textSubtle\" bold mb=\"32px\">\r\n        {t('Will you join them?')}\r\n      </Text>\r\n\r\n      <Flex flexDirection={['column', null, null, 'row']}>\r\n        <IconCard {...UsersCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          {/* Knight have to change home icon  */}\r\n          <StatCardContent\r\n            headingText={t('%users% users', { users })}\r\n            bodyText={t('in the last 30 days')}\r\n            highlightColor={theme.colors.primary}\r\n          />\r\n        </IconCard>\r\n        <IconCard {...TradesCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          <StatCardContent\r\n            headingText={t('%trades% trades', { trades })}\r\n            bodyText={t('made in the last 30 days')}\r\n            highlightColor={theme.colors.primary}\r\n          />\r\n        </IconCard>\r\n        <IconCard {...StakedCardData}>\r\n          <StatCardContent\r\n            headingText={t('$%tvl% staked', { tvl: tvlString })}\r\n            bodyText={t('Total Value Locked')}\r\n            highlightColor={theme.colors.primary}\r\n          />\r\n        </IconCard>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Stats\r\n","import { useEffect, useState } from 'react'\r\n\r\n/* eslint-disable camelcase */\r\nexport interface DeBankTvlResponse {\r\n  id: string\r\n  chain: string\r\n  name: string\r\n  site_url: string\r\n  logo_url: string\r\n  has_supported_portfolio: boolean\r\n  tvl: number\r\n}\r\n\r\nexport const useGetStats = () => {\r\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap')\r\n        const responseData: DeBankTvlResponse = await response.json()\r\n\r\n        setData(responseData)\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Link } from '@pancakeswap/uikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CompositeImage, { CompositeImageProps } from '../CompositeImage'\r\nimport ColoredWordHeading from '../ColoredWordHeading'\r\n\r\ninterface SalesSectionButton {\r\n  to: string\r\n  text: string\r\n  external: boolean\r\n}\r\n\r\nexport interface SalesSectionProps {\r\n  headingText: string\r\n  bodyText: string\r\n  reverse: boolean\r\n  primaryButton: SalesSectionButton\r\n  secondaryButton: SalesSectionButton\r\n  images: CompositeImageProps\r\n}\r\n\r\nconst SalesSection: React.FC<SalesSectionProps> = (props) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { headingText, bodyText, reverse, primaryButton, secondaryButton, images } = props\r\n\r\n  const headingTranslatedText = t(headingText)\r\n  const bodyTranslatedText = t(bodyText)\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex\r\n        flexDirection={['column-reverse', null, null, reverse ? 'row-reverse' : 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          flex=\"1\"\r\n          ml={[null, null, null, reverse && '64px']}\r\n          mr={[null, null, null, !reverse && '64px']}\r\n          alignSelf={['flex-start', null, null, 'center']}\r\n        >\r\n          <ColoredWordHeading text={headingTranslatedText} />\r\n          <Text color=\"textSubtle\" mb=\"24px\">\r\n            {bodyTranslatedText}\r\n          </Text>\r\n          <Flex>\r\n            <Button mr=\"16px\">\r\n              {primaryButton.external ? (\r\n                <Link external href={primaryButton.to}>\r\n                  <Text color=\"card\" bold fontSize=\"16px\">\r\n                    {t(primaryButton.text)}\r\n                  </Text>\r\n                </Link>\r\n              ) : (\r\n                <RouterLink to={primaryButton.to}>\r\n                  <Text color=\"card\" bold fontSize=\"16px\">\r\n                    {t(primaryButton.text)}\r\n                  </Text>\r\n                </RouterLink>\r\n              )}\r\n            </Button>\r\n            {secondaryButton.external ? (\r\n              <Link external href={secondaryButton.to}>\r\n                {t(secondaryButton.text)}\r\n              </Link>\r\n            ) : (\r\n              <RouterLink to={secondaryButton.to}>{t(secondaryButton.text)}</RouterLink>\r\n            )}\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          mb={['24px', null, null, '0']}\r\n        >\r\n          <CompositeImage {...images} />\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SalesSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport { getBalanceNumber, formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { Flex, Text, Heading, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst StyledColumn = styled(Flex)<{ noMobileBorder?: boolean }>`\r\n  flex-direction: column;\r\n  ${({ noMobileBorder, theme }) =>\r\n    noMobileBorder\r\n      ? `${theme.mediaQueries.md} {\r\n           padding: 0 16px;\r\n           border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         }\r\n       `\r\n      : `border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         padding: 0 8px;\r\n         ${theme.mediaQueries.sm} {\r\n           padding: 0 16px;\r\n         }\r\n       `}\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px 8px;\r\n  margin-top: 24px;\r\n  grid-template-columns: repeat(2, auto);\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n    grid-template-columns: repeat(4, auto);\r\n  }\r\n`\r\n\r\nconst emissionsPerBlock = 14.5\r\n\r\nconst CakeDataRow = () => {\r\n  const { t } = useTranslation()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(tokens.cake.address))\r\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const mcap = cakePriceBusd.times(cakeSupply)\r\n  const mcapString = formatLocalisedCompactNumber(mcap.toNumber())\r\n\r\n  return (\r\n    <Grid>\r\n      <Flex flexDirection=\"column\">\r\n        <Text color=\"textSubtle\">{t('Total supply')}</Text>\r\n        {cakeSupply ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={cakeSupply} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </Flex>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Burned to date')}</Text>\r\n        {burnedBalance ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={burnedBalance} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      <StyledColumn noMobileBorder>\r\n        <Text color=\"textSubtle\">{t('Market cap')}</Text>\r\n        {mcap?.gt(0) && mcapString ? (\r\n          <Heading scale=\"lg\">{t('$%marketCap%', { marketCap: mcapString })}</Heading>\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Current emissions')}</Text>\r\n\r\n        <Heading scale=\"lg\">{t('%cakeEmissions%/block', { cakeEmissions: emissionsPerBlock })}</Heading>\r\n      </StyledColumn>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CakeDataRow\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\n/* import masterChefABI from 'config/abi/masterchef.json' */\r\nimport masterChefABI from 'config/abi/metaRewards.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { SerializedFarmConfig } from 'config/constants/types'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\n\r\nexport interface FarmWithBalance extends SerializedFarmConfig {\r\n  balance: BigNumber\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\r\n  const [earningsSum, setEarningsSum] = useState<number>(null)\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingToken',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResults = await multicall(masterChefABI, calls)\r\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\r\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\r\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\r\n        const earningNumber = new BigNumber(earning.balance)\r\n        if (earningNumber.eq(0)) {\r\n          return accum\r\n        }\r\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\r\n      }, 0)\r\n\r\n      setFarmsWithStakedBalance(farmsWithBalances)\r\n      setEarningsSum(totalEarned)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return { farmsWithStakedBalance, earningsSum }\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Flex, Skeleton, Text, ArrowForwardIcon } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useMasterchef } from 'hooks/useContract'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport Balance from 'components/Balance'\r\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\r\nimport { getEarningsText } from './EarningsText'\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 100%;\r\n  height: fit-content;\r\n`\r\n\r\nconst HarvestCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\r\n\r\n  const masterChefContract = useMasterchef()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\r\n  const numTotalToCollect = farmsWithStakedBalance.length\r\n  const numFarmsToCollect = farmsWithStakedBalance.filter((value) => value.pid !== 0).length\r\n  const hasCakePoolToCollect = numTotalToCollect - numFarmsToCollect > 0\r\n\r\n  const earningsText = getEarningsText(numFarmsToCollect, hasCakePoolToCollect, earningsBusd, t)\r\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const farmWithBalance of farmsWithStakedBalance) {\r\n      try {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\r\n        )\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    }\r\n    setPendingTx(false)\r\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\r\n\r\n  return (\r\n    <StyledCard>\r\n      <CardBody>\r\n        <Flex flexDirection={['column', null, null, 'row']} justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Flex flexDirection=\"column\" alignItems={['center', null, null, 'flex-start']}>\r\n            {preText && (\r\n              <Text mb=\"4px\" color=\"textSubtle\">\r\n                {preText}\r\n              </Text>\r\n            )}\r\n            {!earningsBusd.isNaN() ? (\r\n              <Balance\r\n                decimals={earningsBusd.gt(0) ? 2 : 0}\r\n                fontSize=\"24px\"\r\n                bold\r\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\r\n                lineHeight=\"1.1\"\r\n                value={earningsBusd.toNumber()}\r\n              />\r\n            ) : (\r\n              <Skeleton width={96} height={24} my=\"2px\" />\r\n            )}\r\n            <Text mb={['16px', null, null, '0']} color=\"textSubtle\">\r\n              {toCollectText}\r\n            </Text>\r\n          </Flex>\r\n          {numTotalToCollect <= 0 ? (\r\n            <Link to=\"farms\">\r\n              <Button width={['100%', null, null, 'auto']} variant=\"secondary\">\r\n                <Text color=\"primary\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <ArrowForwardIcon ml=\"4px\" color=\"primary\" />\r\n              </Button>\r\n            </Link>\r\n          ) : (\r\n            <Button\r\n              width={['100%', null, null, 'auto']}\r\n              id=\"harvest-all\"\r\n              isLoading={pendingTx}\r\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n              disabled={pendingTx}\r\n              onClick={harvestAllFarms}\r\n            >\r\n              <Text color=\"invertedContrast\" bold>\r\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\r\n              </Text>\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default HarvestCard\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport const getEarningsText = (\r\n  numFarmsToCollect: number,\r\n  hasCakePoolToCollect: boolean,\r\n  earningsBusd: BigNumber,\r\n  t: ContextApi['t'],\r\n): string => {\r\n  const data = {\r\n    earningsBusd: earningsBusd.toString(),\r\n    count: numFarmsToCollect,\r\n  }\r\n\r\n  let earningsText = t('%earningsBusd% to collect', data)\r\n\r\n  if (numFarmsToCollect > 0 && hasCakePoolToCollect) {\r\n    if (numFarmsToCollect > 1) {\r\n      earningsText = t('%earningsBusd% to collect from %count% farms and CAKE pool', data)\r\n    } else {\r\n      earningsText = t('%earningsBusd% to collect from %count% farm and CAKE pool', data)\r\n    }\r\n  } else if (numFarmsToCollect > 0) {\r\n    if (numFarmsToCollect > 1) {\r\n      earningsText = t('%earningsBusd% to collect from %count% farms', data)\r\n    } else {\r\n      earningsText = t('%earningsBusd% to collect from %count% farm', data)\r\n    }\r\n  } else if (hasCakePoolToCollect) {\r\n    earningsText = t('%earningsBusd% to collect from CAKE pool', data)\r\n  }\r\n\r\n  return earningsText\r\n}\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon, Flex, Heading, Skeleton, Text, Box } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport ProfileAvatarWithTeam from 'components/ProfileAvatarWithTeam'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport truncateHash from 'utils/truncateHash'\r\n\r\nconst Desktop = styled(Flex)`\r\n  align-items: center;\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst Mobile = styled(Flex)`\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Sticker = styled(Flex)`\r\n  height: 92px;\r\n  width: 92px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 3px solid ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: ${({ theme }) => theme.radii.circle};\r\n  box-shadow: ${({ theme }) => theme.card.boxShadow};\r\n`\r\n\r\nconst StyledNoProfileAvatarIcon = styled(NoProfileAvatarIcon)`\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nconst UserDetail = () => {\r\n  const { profile, isLoading } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const truncatedAddress = truncateHash(account)\r\n\r\n  const getDesktopHeading = () => {\r\n    if (profile) {\r\n      return <Heading scale=\"xl\">{t('Hi, %userName%!', { userName: profile.username })}</Heading>\r\n    }\r\n    if (isLoading && !profile) {\r\n      return <Skeleton width={200} height={40} my=\"4px\" />\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  const getMobileHeading = () => {\r\n    if (profile) {\r\n      return (\r\n        <Heading mb=\"18px\" textAlign=\"center\">\r\n          {t('Hi, %userName%!', { userName: profile.username })}\r\n        </Heading>\r\n      )\r\n    }\r\n    if (isLoading && !profile) {\r\n      return <Skeleton width={120} height={20} mt=\"2px\" mb=\"18px\" />\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Desktop>\r\n        <Box mr=\"24px\">\r\n          <Sticker>{profile ? <ProfileAvatarWithTeam profile={profile} /> : <StyledNoProfileAvatarIcon />}</Sticker>\r\n        </Box>\r\n        <Flex flexDirection=\"column\">\r\n          {getDesktopHeading()}\r\n          {isLoading || !account ? (\r\n            <Skeleton width={160} height={16} my=\"4px\" />\r\n          ) : (\r\n            <Text fontSize=\"16px\"> {t('Connected with %address%', { address: truncatedAddress })}</Text>\r\n          )}\r\n        </Flex>\r\n      </Desktop>\r\n      <Mobile>{getMobileHeading()}</Mobile>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserDetail\r\n","import React from 'react'\r\nimport { Box, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport HarvestCard from './HarvestCard'\r\nimport UserDetail from './UserDetail'\r\n\r\nconst StyledCard = styled(Box)`\r\n  border-bottom: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-left: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-right: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-radius: ${({ theme }) => `0 0 ${theme.radii.card} ${theme.radii.card}`};\r\n  background: ${({ theme }) =>\r\n    theme.isDark\r\n      ? 'linear-gradient(360deg, rgba(49, 61, 92, 0.9) 0%, rgba(61, 42, 84, 0.9) 100%)'\r\n      : 'linear-gradient(180deg, rgba(202, 194, 236, 0.9) 0%,  rgba(204, 220, 239, 0.9) 51.04%, rgba(206, 236, 243, 0.9) 100%)'};\r\n`\r\n\r\nconst UserBanner = () => {\r\n  return (\r\n    <StyledCard p={['16px', null, null, '24px']}>\r\n      <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection={['column', null, null, 'row']}>\r\n        <Flex flex=\"1\" mr={[null, null, null, '32px']}>\r\n          <UserDetail />\r\n        </Flex>\r\n        <Flex flex=\"1\" width={['100%', null, 'auto']}>\r\n          <HarvestCard />\r\n        </Flex>\r\n      </Flex>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default UserBanner\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PageSection from 'components/PageSection'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Container from 'components/Layout/Container'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport Hero from './components/Hero'\r\nimport { swapSectionData, earnSectionData, cakeSectionData } from './components/SalesSection/data'\r\nimport MetricsSection from './components/MetricsSection'\r\nimport SalesSection from './components/SalesSection'\r\nimport WinSection from './components/WinSection'\r\nimport FarmsPoolsRow from './components/FarmsPoolsRow'\r\nimport Footer from './components/Footer'\r\nimport CakeDataRow from './components/CakeDataRow'\r\nimport { WedgeTopLeft, InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopRight } from './components/WedgeSvgs'\r\nimport UserBanner from './components/UserBanner'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  padding-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 48px;\r\n  }\r\n`\r\n\r\nconst UserBannerWrapper = styled(Container)`\r\n  z-index: 1;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '968px' }\r\n\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledHeroSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={\r\n          theme.isDark\r\n            ? 'radial-gradient(103.12% 50% at 50% 50%, #21193A 0%, #191326 100%)'\r\n            : 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        {account && (\r\n          <UserBannerWrapper>\r\n            <UserBanner />\r\n          </UserBannerWrapper>\r\n        )}\r\n        <Hero />\r\n      </StyledHeroSection>\r\n      <PageSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        // background={\r\n        //   theme.isDark\r\n        //     ? 'linear-gradient(180deg, #09070C 22%, #201335 100%)'\r\n        //     : 'linear-gradient(180deg, #FFFFFF 22%, #D7CAEC 100%)'\r\n        // }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n      <MetricsSection />\r\n      </PageSection>\r\n      {/* <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper top fill={theme.isDark ? '#201335' : '#D8CBED'}>\r\n            <WedgeTopLeft />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...swapSectionData} />\r\n      </PageSection> */}\r\n   <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        // background={theme.colors.gradients.cardHeader}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        {/* <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper width=\"150%\" top fill={theme.colors.background}>\r\n            <WedgeTopRight />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper> */}\r\n        <SalesSection {...earnSectionData} />\r\n        {/* <FarmsPoolsRow /> */}\r\n      </PageSection>\r\n      {/* <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #0B4576 0%, #091115 100%)'\r\n            : 'linear-gradient(180deg, #6FB6F1 0%, #EAF2F6 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <WinSection />\r\n      </PageSection> */}\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <SalesSection {...cakeSectionData} />\r\n        <CakeDataRow />\r\n      </PageSection>\r\n      {/* <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background=\"linear-gradient(180deg, #7645D9 0%, #5121B1 100%)\"\r\n        // Knight:changeclolor\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <Footer />\r\n      </PageSection> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getConcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getConcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  position: absolute;\r\n  right: 0px;\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  width: 37.5%;\r\n  height: 37.5%;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n// TODO: replace with no profile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst ProfileAvatarWithTeam: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={profile.nft?.image.thumbnail}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatarWithTeam\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nexport const SlideSvgLight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 339\" {...props}>\r\n      <path\r\n        d=\"M804 167.023C520.5 167.023 267.5 290.522 0 304.5V339H1660V0.5C1358.83 0.5 1104 167.023 804 167.023Z\"\r\n        fill=\"url(#paint0_linear_light)\"\r\n      />\r\n      <defs>\r\n        <linearGradient id=\"paint0_linear_light\" x1=\"830\" y1=\"84\" x2=\"830\" y2=\"339\" gradientUnits=\"userSpaceOnUse\">\r\n          <stop stopColor=\"white\" stopOpacity=\"0.48\" />\r\n          <stop offset=\"0.566389\" stopColor=\"white\" stopOpacity=\"0.35\" />\r\n          <stop offset=\"1\" stopColor=\"white\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const SlideSvgDark: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 339\" {...props}>\r\n      <path\r\n        d=\"M804 166.523C520.5 166.523 267.5 290.022 0 304V338.5H1660V0C1358.83 0 1104 166.523 804 166.523Z\"\r\n        fill=\"url(#paint0_linear_dark)\"\r\n      />\r\n      <defs>\r\n        <linearGradient id=\"paint0_linear_dark\" x1=\"830\" y1=\"83.5\" x2=\"830\" y2=\"338.5\" gradientUnits=\"userSpaceOnUse\">\r\n          <stop stopColor=\"#08060B\" stopOpacity=\"0.2\" />\r\n          <stop offset=\"0.545554\" stopColor=\"#08060B\" stopOpacity=\"0.5\" />\r\n          <stop offset=\"1\" stopColor=\"#08060B\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Colors, Heading, TextProps } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface HeadingProps extends TextProps {\r\n  text: string\r\n  firstColor?: keyof Colors\r\n}\r\n\r\nconst ColoredWordHeading: React.FC<HeadingProps> = ({ text, firstColor, mb = '24px', ...props }) => {\r\n  const { theme } = useTheme()\r\n  const split = text.split(' ')\r\n  const firstWord = split[0]\r\n  const remainingWords = split.slice(1).join(' ')\r\n  const displayedColor = (theme.colors[firstColor] as string) ?? theme.colors.secondary\r\n\r\n  return (\r\n    <Heading scale=\"xl\" mb={mb} {...props}>\r\n      <span style={{ color: displayedColor }}>{firstWord} </span>\r\n      {remainingWords}\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default ColoredWordHeading\r\n"],"sourceRoot":""}